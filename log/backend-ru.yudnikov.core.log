2017-08-16 18:12:42,262 INFO  [main] Counter[Person] - counter is 0
2017-08-16 18:12:42,267 INFO  [main] Keeper[Person] - versions of size (0) contains: 

2017-08-16 21:52:29,138 INFO  [main] Counter[Person] - counter is 0
2017-08-16 21:52:29,150 INFO  [main] Keeper[Person] - versions of size (0) contains: 

2017-08-16 22:18:59,606 INFO  [main] Counter[Person] - counter is 0
2017-08-16 22:18:59,611 INFO  [main] Keeper[Person] - versions of size (0) contains: 

2017-08-17 17:13:34,839 INFO  [main] Counter[Person] - counter is 0
2017-08-17 17:13:34,843 INFO  [main] Keeper[Person] - versions of size (0) contains: 

2017-08-17 17:31:14,735 INFO  [main] Counter[Person] - counter is 0
2017-08-17 17:31:14,740 INFO  [main] Keeper[Person] - versions of size (0) contains: 

2017-08-17 17:32:18,941 INFO  [main] Counter[Person] - counter is 0
2017-08-17 17:32:18,946 INFO  [main] Keeper[Person] - versions of size (0) contains: 

2017-08-17 17:34:43,136 INFO  [main] Counter[Person] - counter is 0
2017-08-17 17:34:43,140 INFO  [main] Keeper[Person] - versions of size (0) contains: 

2017-08-17 17:35:02,885 INFO  [main] Counter[Person] - counter is 0
2017-08-17 17:35:02,893 INFO  [main] Keeper[Person] - versions of size (0) contains: 

2017-08-17 17:35:17,230 INFO  [main] Counter[Person] - counter is 0
2017-08-17 17:35:17,237 INFO  [main] Keeper[Person] - versions of size (0) contains: 

2017-08-17 17:39:35,990 TRACE [main] Person$[Person] - updating Person(Oleg,None,07c746eb-f633-402c-9eac-56d0bc8e74fe)
2017-08-17 17:39:36,010 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,07c746eb-f633-402c-9eac-56d0bc8e74fe) with count 1
2017-08-17 17:39:36,021 TRACE [main] Person$[Person] - model kept, creating reference with count 1
2017-08-17 17:39:36,022 TRACE [main] Person$[Person] - updating Person(Oleg2,None,07c746eb-f633-402c-9eac-56d0bc8e74fe)
2017-08-17 17:39:36,023 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,07c746eb-f633-402c-9eac-56d0bc8e74fe) with count 2
2017-08-17 17:39:36,023 TRACE [main] Person$[Person] - model kept, creating reference with count 2
2017-08-17 17:39:36,023 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,07c746eb-f633-402c-9eac-56d0bc8e74fe,1)),f5bcd032-9ce9-4a65-8d9b-230f7ff4afcf)
2017-08-17 17:39:36,023 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,07c746eb-f633-402c-9eac-56d0bc8e74fe,1)),f5bcd032-9ce9-4a65-8d9b-230f7ff4afcf) with count 3
2017-08-17 17:39:36,023 TRACE [main] Person$[Person] - model kept, creating reference with count 3
2017-08-17 17:39:36,023 TRACE [main] Person$[Person] - updating Person(Oleg,None,7b2aceb7-de13-4240-894c-50f239e38120)
2017-08-17 17:39:36,024 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,7b2aceb7-de13-4240-894c-50f239e38120) with count 4
2017-08-17 17:39:36,024 TRACE [main] Person$[Person] - model kept, creating reference with count 4
2017-08-17 17:39:36,024 TRACE [main] Person$[Person] - updating Person(Oleg2,None,7b2aceb7-de13-4240-894c-50f239e38120)
2017-08-17 17:39:36,024 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,7b2aceb7-de13-4240-894c-50f239e38120) with count 5
2017-08-17 17:39:36,024 TRACE [main] Person$[Person] - model kept, creating reference with count 5
2017-08-17 17:39:36,024 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,7b2aceb7-de13-4240-894c-50f239e38120,4)),3584e426-13e5-402c-b5bd-132a8eacb031)
2017-08-17 17:39:36,024 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,7b2aceb7-de13-4240-894c-50f239e38120,4)),3584e426-13e5-402c-b5bd-132a8eacb031) with count 6
2017-08-17 17:39:36,024 TRACE [main] Person$[Person] - model kept, creating reference with count 6
2017-08-17 17:39:36,024 TRACE [main] Person$[Person] - updating Person(Oleg,None,83e9766c-9183-4547-9602-5bd3793de883)
2017-08-17 17:39:36,024 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,83e9766c-9183-4547-9602-5bd3793de883) with count 7
2017-08-17 17:39:36,024 TRACE [main] Person$[Person] - model kept, creating reference with count 7
2017-08-17 17:39:36,024 TRACE [main] Person$[Person] - updating Person(Oleg2,None,83e9766c-9183-4547-9602-5bd3793de883)
2017-08-17 17:39:36,025 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,83e9766c-9183-4547-9602-5bd3793de883) with count 8
2017-08-17 17:39:36,025 TRACE [main] Person$[Person] - model kept, creating reference with count 8
2017-08-17 17:39:36,025 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,83e9766c-9183-4547-9602-5bd3793de883,7)),6c27f6b3-3a3c-4aa2-895b-828efbc4e388)
2017-08-17 17:39:36,025 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,83e9766c-9183-4547-9602-5bd3793de883,7)),6c27f6b3-3a3c-4aa2-895b-828efbc4e388) with count 9
2017-08-17 17:39:36,025 TRACE [main] Person$[Person] - model kept, creating reference with count 9
2017-08-17 17:39:36,025 TRACE [main] Person$[Person] - updating Person(Oleg,None,a2cf3126-2bf0-4024-9512-59aeeb615155)
2017-08-17 17:39:36,025 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,a2cf3126-2bf0-4024-9512-59aeeb615155) with count 10
2017-08-17 17:39:36,025 TRACE [main] Person$[Person] - model kept, creating reference with count 10
2017-08-17 17:39:36,025 TRACE [main] Person$[Person] - updating Person(Oleg2,None,a2cf3126-2bf0-4024-9512-59aeeb615155)
2017-08-17 17:39:36,025 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,a2cf3126-2bf0-4024-9512-59aeeb615155) with count 11
2017-08-17 17:39:36,025 TRACE [main] Person$[Person] - model kept, creating reference with count 11
2017-08-17 17:39:36,025 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,a2cf3126-2bf0-4024-9512-59aeeb615155,10)),ad032969-b5cd-43b7-9342-bbf686c0f66b)
2017-08-17 17:39:36,026 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,a2cf3126-2bf0-4024-9512-59aeeb615155,10)),ad032969-b5cd-43b7-9342-bbf686c0f66b) with count 12
2017-08-17 17:39:36,026 TRACE [main] Person$[Person] - model kept, creating reference with count 12
2017-08-17 17:39:36,026 TRACE [main] Person$[Person] - updating Person(Oleg,None,d5e3a2ce-41ac-4fba-bb05-cd8a56ec81bf)
2017-08-17 17:39:36,026 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,d5e3a2ce-41ac-4fba-bb05-cd8a56ec81bf) with count 13
2017-08-17 17:39:36,026 TRACE [main] Person$[Person] - model kept, creating reference with count 13
2017-08-17 17:39:36,026 TRACE [main] Person$[Person] - updating Person(Oleg2,None,d5e3a2ce-41ac-4fba-bb05-cd8a56ec81bf)
2017-08-17 17:39:36,026 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,d5e3a2ce-41ac-4fba-bb05-cd8a56ec81bf) with count 14
2017-08-17 17:39:36,026 TRACE [main] Person$[Person] - model kept, creating reference with count 14
2017-08-17 17:39:36,027 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,d5e3a2ce-41ac-4fba-bb05-cd8a56ec81bf,13)),81c23182-9430-4920-9cd9-af0af0cd7e08)
2017-08-17 17:39:36,027 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,d5e3a2ce-41ac-4fba-bb05-cd8a56ec81bf,13)),81c23182-9430-4920-9cd9-af0af0cd7e08) with count 15
2017-08-17 17:39:36,028 TRACE [main] Person$[Person] - model kept, creating reference with count 15
2017-08-17 17:39:36,028 TRACE [main] Person$[Person] - updating Person(Oleg,None,f6cebac2-82c8-4b8e-b4e9-ae2613f34d11)
2017-08-17 17:39:36,028 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,f6cebac2-82c8-4b8e-b4e9-ae2613f34d11) with count 16
2017-08-17 17:39:36,028 TRACE [main] Person$[Person] - model kept, creating reference with count 16
2017-08-17 17:39:36,028 TRACE [main] Person$[Person] - updating Person(Oleg2,None,f6cebac2-82c8-4b8e-b4e9-ae2613f34d11)
2017-08-17 17:39:36,028 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,f6cebac2-82c8-4b8e-b4e9-ae2613f34d11) with count 17
2017-08-17 17:39:36,028 TRACE [main] Person$[Person] - model kept, creating reference with count 17
2017-08-17 17:39:36,028 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,f6cebac2-82c8-4b8e-b4e9-ae2613f34d11,16)),3c57502e-09aa-4bbf-9faf-022bd16dcf8e)
2017-08-17 17:39:36,029 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,f6cebac2-82c8-4b8e-b4e9-ae2613f34d11,16)),3c57502e-09aa-4bbf-9faf-022bd16dcf8e) with count 18
2017-08-17 17:39:36,029 TRACE [main] Person$[Person] - model kept, creating reference with count 18
2017-08-17 17:39:36,029 TRACE [main] Person$[Person] - updating Person(Oleg,None,930d52e0-fbd8-43f3-acb3-e3d852c5900a)
2017-08-17 17:39:36,029 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,930d52e0-fbd8-43f3-acb3-e3d852c5900a) with count 19
2017-08-17 17:39:36,029 TRACE [main] Person$[Person] - model kept, creating reference with count 19
2017-08-17 17:39:36,029 TRACE [main] Person$[Person] - updating Person(Oleg2,None,930d52e0-fbd8-43f3-acb3-e3d852c5900a)
2017-08-17 17:39:36,029 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,930d52e0-fbd8-43f3-acb3-e3d852c5900a) with count 20
2017-08-17 17:39:36,029 TRACE [main] Person$[Person] - model kept, creating reference with count 20
2017-08-17 17:39:36,029 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,930d52e0-fbd8-43f3-acb3-e3d852c5900a,19)),252e94db-a7be-422f-91f4-476c253238f2)
2017-08-17 17:39:36,030 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,930d52e0-fbd8-43f3-acb3-e3d852c5900a,19)),252e94db-a7be-422f-91f4-476c253238f2) with count 21
2017-08-17 17:39:36,030 TRACE [main] Person$[Person] - model kept, creating reference with count 21
2017-08-17 17:39:36,030 TRACE [main] Person$[Person] - updating Person(Oleg,None,1a505685-8ed6-4a28-9c22-6627aa28d7b1)
2017-08-17 17:39:36,030 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,1a505685-8ed6-4a28-9c22-6627aa28d7b1) with count 22
2017-08-17 17:39:36,031 TRACE [main] Person$[Person] - model kept, creating reference with count 22
2017-08-17 17:39:36,031 TRACE [main] Person$[Person] - updating Person(Oleg2,None,1a505685-8ed6-4a28-9c22-6627aa28d7b1)
2017-08-17 17:39:36,031 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,1a505685-8ed6-4a28-9c22-6627aa28d7b1) with count 23
2017-08-17 17:39:36,031 TRACE [main] Person$[Person] - model kept, creating reference with count 23
2017-08-17 17:39:36,031 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,1a505685-8ed6-4a28-9c22-6627aa28d7b1,22)),8e83f0b8-904a-4a8c-a8e8-57ed8c1f031b)
2017-08-17 17:39:36,032 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,1a505685-8ed6-4a28-9c22-6627aa28d7b1,22)),8e83f0b8-904a-4a8c-a8e8-57ed8c1f031b) with count 24
2017-08-17 17:39:36,032 TRACE [main] Person$[Person] - model kept, creating reference with count 24
2017-08-17 17:39:36,032 TRACE [main] Person$[Person] - updating Person(Oleg,None,c5bc772e-5ab7-41c2-a33b-1a74f4151c48)
2017-08-17 17:39:36,032 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,c5bc772e-5ab7-41c2-a33b-1a74f4151c48) with count 25
2017-08-17 17:39:36,033 TRACE [main] Person$[Person] - model kept, creating reference with count 25
2017-08-17 17:39:36,033 TRACE [main] Person$[Person] - updating Person(Oleg2,None,c5bc772e-5ab7-41c2-a33b-1a74f4151c48)
2017-08-17 17:39:36,033 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,c5bc772e-5ab7-41c2-a33b-1a74f4151c48) with count 26
2017-08-17 17:39:36,034 TRACE [main] Person$[Person] - model kept, creating reference with count 26
2017-08-17 17:39:36,034 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,c5bc772e-5ab7-41c2-a33b-1a74f4151c48,25)),6a6e8ae1-cfc7-4e21-ba43-d466ee2654be)
2017-08-17 17:39:36,034 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,c5bc772e-5ab7-41c2-a33b-1a74f4151c48,25)),6a6e8ae1-cfc7-4e21-ba43-d466ee2654be) with count 27
2017-08-17 17:39:36,034 TRACE [main] Person$[Person] - model kept, creating reference with count 27
2017-08-17 17:39:36,035 TRACE [main] Person$[Person] - updating Person(Oleg,None,3826fa25-4766-47cb-a36e-8f9cf4dee5bc)
2017-08-17 17:39:36,035 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,3826fa25-4766-47cb-a36e-8f9cf4dee5bc) with count 28
2017-08-17 17:39:36,035 TRACE [main] Person$[Person] - model kept, creating reference with count 28
2017-08-17 17:39:36,035 TRACE [main] Person$[Person] - updating Person(Oleg2,None,3826fa25-4766-47cb-a36e-8f9cf4dee5bc)
2017-08-17 17:39:36,035 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,3826fa25-4766-47cb-a36e-8f9cf4dee5bc) with count 29
2017-08-17 17:39:36,036 TRACE [main] Person$[Person] - model kept, creating reference with count 29
2017-08-17 17:39:36,036 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,3826fa25-4766-47cb-a36e-8f9cf4dee5bc,28)),d78c3b74-02e9-4a0d-9a62-4f3cef4c1b62)
2017-08-17 17:39:36,036 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,3826fa25-4766-47cb-a36e-8f9cf4dee5bc,28)),d78c3b74-02e9-4a0d-9a62-4f3cef4c1b62) with count 30
2017-08-17 17:39:36,036 TRACE [main] Person$[Person] - model kept, creating reference with count 30
2017-08-17 17:39:36,036 TRACE [main] Person$[Person] - updating Person(Oleg,None,85980005-d197-4530-8e2d-1fe384c5eab8)
2017-08-17 17:39:36,037 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,85980005-d197-4530-8e2d-1fe384c5eab8) with count 31
2017-08-17 17:39:36,037 TRACE [main] Person$[Person] - model kept, creating reference with count 31
2017-08-17 17:39:36,037 TRACE [main] Person$[Person] - updating Person(Oleg2,None,85980005-d197-4530-8e2d-1fe384c5eab8)
2017-08-17 17:39:36,037 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,85980005-d197-4530-8e2d-1fe384c5eab8) with count 32
2017-08-17 17:39:36,037 TRACE [main] Person$[Person] - model kept, creating reference with count 32
2017-08-17 17:39:36,038 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,85980005-d197-4530-8e2d-1fe384c5eab8,31)),8132766b-3e40-4c85-ba79-606de8af55f5)
2017-08-17 17:39:36,038 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,85980005-d197-4530-8e2d-1fe384c5eab8,31)),8132766b-3e40-4c85-ba79-606de8af55f5) with count 33
2017-08-17 17:39:36,038 TRACE [main] Person$[Person] - model kept, creating reference with count 33
2017-08-17 17:39:36,038 TRACE [main] Person$[Person] - updating Person(Oleg,None,6e505cdd-58b1-46e9-a13f-a836d93e12ad)
2017-08-17 17:39:36,038 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,6e505cdd-58b1-46e9-a13f-a836d93e12ad) with count 34
2017-08-17 17:39:36,038 TRACE [main] Person$[Person] - model kept, creating reference with count 34
2017-08-17 17:39:36,039 TRACE [main] Person$[Person] - updating Person(Oleg2,None,6e505cdd-58b1-46e9-a13f-a836d93e12ad)
2017-08-17 17:39:36,039 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,6e505cdd-58b1-46e9-a13f-a836d93e12ad) with count 35
2017-08-17 17:39:36,039 TRACE [main] Person$[Person] - model kept, creating reference with count 35
2017-08-17 17:39:36,039 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,6e505cdd-58b1-46e9-a13f-a836d93e12ad,34)),d62a52d3-309a-438c-addc-0aa7fbdfc9c3)
2017-08-17 17:39:36,039 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,6e505cdd-58b1-46e9-a13f-a836d93e12ad,34)),d62a52d3-309a-438c-addc-0aa7fbdfc9c3) with count 36
2017-08-17 17:39:36,039 TRACE [main] Person$[Person] - model kept, creating reference with count 36
2017-08-17 17:39:36,040 TRACE [main] Person$[Person] - updating Person(Oleg,None,b2634b85-2f27-4d38-91cb-2c9e2d114a18)
2017-08-17 17:39:36,040 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,b2634b85-2f27-4d38-91cb-2c9e2d114a18) with count 37
2017-08-17 17:39:36,040 TRACE [main] Person$[Person] - model kept, creating reference with count 37
2017-08-17 17:39:36,040 TRACE [main] Person$[Person] - updating Person(Oleg2,None,b2634b85-2f27-4d38-91cb-2c9e2d114a18)
2017-08-17 17:39:36,040 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,b2634b85-2f27-4d38-91cb-2c9e2d114a18) with count 38
2017-08-17 17:39:36,041 TRACE [main] Person$[Person] - model kept, creating reference with count 38
2017-08-17 17:39:36,041 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,b2634b85-2f27-4d38-91cb-2c9e2d114a18,37)),56a009e1-adf1-4891-afef-e74d2e1e1031)
2017-08-17 17:39:36,041 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,b2634b85-2f27-4d38-91cb-2c9e2d114a18,37)),56a009e1-adf1-4891-afef-e74d2e1e1031) with count 39
2017-08-17 17:39:36,041 TRACE [main] Person$[Person] - model kept, creating reference with count 39
2017-08-17 17:39:36,042 TRACE [main] Person$[Person] - updating Person(Oleg,None,7802daf7-2f04-4a47-9926-8e3a1c5fe5f9)
2017-08-17 17:39:36,042 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,7802daf7-2f04-4a47-9926-8e3a1c5fe5f9) with count 40
2017-08-17 17:39:36,042 TRACE [main] Person$[Person] - model kept, creating reference with count 40
2017-08-17 17:39:36,042 TRACE [main] Person$[Person] - updating Person(Oleg2,None,7802daf7-2f04-4a47-9926-8e3a1c5fe5f9)
2017-08-17 17:39:36,042 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,7802daf7-2f04-4a47-9926-8e3a1c5fe5f9) with count 41
2017-08-17 17:39:36,043 TRACE [main] Person$[Person] - model kept, creating reference with count 41
2017-08-17 17:39:36,043 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,7802daf7-2f04-4a47-9926-8e3a1c5fe5f9,40)),5f87e97b-0474-4c19-b6b7-9f6982993679)
2017-08-17 17:39:36,043 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,7802daf7-2f04-4a47-9926-8e3a1c5fe5f9,40)),5f87e97b-0474-4c19-b6b7-9f6982993679) with count 42
2017-08-17 17:39:36,043 TRACE [main] Person$[Person] - model kept, creating reference with count 42
2017-08-17 17:39:36,043 TRACE [main] Person$[Person] - updating Person(Oleg,None,3e949bd6-27d2-46b6-8a07-33b49c4b107e)
2017-08-17 17:39:36,043 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,3e949bd6-27d2-46b6-8a07-33b49c4b107e) with count 43
2017-08-17 17:39:36,043 TRACE [main] Person$[Person] - model kept, creating reference with count 43
2017-08-17 17:39:36,044 TRACE [main] Person$[Person] - updating Person(Oleg2,None,3e949bd6-27d2-46b6-8a07-33b49c4b107e)
2017-08-17 17:39:36,044 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,3e949bd6-27d2-46b6-8a07-33b49c4b107e) with count 44
2017-08-17 17:39:36,044 TRACE [main] Person$[Person] - model kept, creating reference with count 44
2017-08-17 17:39:36,044 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,3e949bd6-27d2-46b6-8a07-33b49c4b107e,43)),0deb86fd-714e-46b8-821f-9925d3014012)
2017-08-17 17:39:36,044 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,3e949bd6-27d2-46b6-8a07-33b49c4b107e,43)),0deb86fd-714e-46b8-821f-9925d3014012) with count 45
2017-08-17 17:39:36,044 TRACE [main] Person$[Person] - model kept, creating reference with count 45
2017-08-17 17:39:36,044 TRACE [main] Person$[Person] - updating Person(Oleg,None,f25baff2-ccfc-496f-ac75-b447f300389d)
2017-08-17 17:39:36,044 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,f25baff2-ccfc-496f-ac75-b447f300389d) with count 46
2017-08-17 17:39:36,044 TRACE [main] Person$[Person] - model kept, creating reference with count 46
2017-08-17 17:39:36,045 TRACE [main] Person$[Person] - updating Person(Oleg2,None,f25baff2-ccfc-496f-ac75-b447f300389d)
2017-08-17 17:39:36,045 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,f25baff2-ccfc-496f-ac75-b447f300389d) with count 47
2017-08-17 17:39:36,045 TRACE [main] Person$[Person] - model kept, creating reference with count 47
2017-08-17 17:39:36,045 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,f25baff2-ccfc-496f-ac75-b447f300389d,46)),71572fd7-321d-47f7-b7cd-fe926abde524)
2017-08-17 17:39:36,045 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,f25baff2-ccfc-496f-ac75-b447f300389d,46)),71572fd7-321d-47f7-b7cd-fe926abde524) with count 48
2017-08-17 17:39:36,045 TRACE [main] Person$[Person] - model kept, creating reference with count 48
2017-08-17 17:39:36,046 TRACE [main] Person$[Person] - updating Person(Oleg,None,c73a2b05-0eae-4fb7-9d6f-b179b1e0efd2)
2017-08-17 17:39:36,046 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,c73a2b05-0eae-4fb7-9d6f-b179b1e0efd2) with count 49
2017-08-17 17:39:36,046 TRACE [main] Person$[Person] - model kept, creating reference with count 49
2017-08-17 17:39:36,046 TRACE [main] Person$[Person] - updating Person(Oleg2,None,c73a2b05-0eae-4fb7-9d6f-b179b1e0efd2)
2017-08-17 17:39:36,046 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,c73a2b05-0eae-4fb7-9d6f-b179b1e0efd2) with count 50
2017-08-17 17:39:36,046 TRACE [main] Person$[Person] - model kept, creating reference with count 50
2017-08-17 17:39:36,046 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,c73a2b05-0eae-4fb7-9d6f-b179b1e0efd2,49)),218ac3b7-f88c-4e8c-8626-47d74b9c419c)
2017-08-17 17:39:36,047 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,c73a2b05-0eae-4fb7-9d6f-b179b1e0efd2,49)),218ac3b7-f88c-4e8c-8626-47d74b9c419c) with count 51
2017-08-17 17:39:36,047 TRACE [main] Person$[Person] - model kept, creating reference with count 51
2017-08-17 17:39:36,047 TRACE [main] Person$[Person] - updating Person(Oleg,None,c9ea5a91-abb3-4c02-9374-538d200cef3c)
2017-08-17 17:39:36,047 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,c9ea5a91-abb3-4c02-9374-538d200cef3c) with count 52
2017-08-17 17:39:36,047 TRACE [main] Person$[Person] - model kept, creating reference with count 52
2017-08-17 17:39:36,047 TRACE [main] Person$[Person] - updating Person(Oleg2,None,c9ea5a91-abb3-4c02-9374-538d200cef3c)
2017-08-17 17:39:36,047 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,c9ea5a91-abb3-4c02-9374-538d200cef3c) with count 53
2017-08-17 17:39:36,047 TRACE [main] Person$[Person] - model kept, creating reference with count 53
2017-08-17 17:39:36,048 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,c9ea5a91-abb3-4c02-9374-538d200cef3c,52)),b14b554d-0309-480a-8114-241803d3eb24)
2017-08-17 17:39:36,048 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,c9ea5a91-abb3-4c02-9374-538d200cef3c,52)),b14b554d-0309-480a-8114-241803d3eb24) with count 54
2017-08-17 17:39:36,048 TRACE [main] Person$[Person] - model kept, creating reference with count 54
2017-08-17 17:39:36,048 TRACE [main] Person$[Person] - updating Person(Oleg,None,ad528c11-51fb-4ad3-bbdb-7affa3c84ebc)
2017-08-17 17:39:36,048 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,ad528c11-51fb-4ad3-bbdb-7affa3c84ebc) with count 55
2017-08-17 17:39:36,048 TRACE [main] Person$[Person] - model kept, creating reference with count 55
2017-08-17 17:39:36,048 TRACE [main] Person$[Person] - updating Person(Oleg2,None,ad528c11-51fb-4ad3-bbdb-7affa3c84ebc)
2017-08-17 17:39:36,048 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,ad528c11-51fb-4ad3-bbdb-7affa3c84ebc) with count 56
2017-08-17 17:39:36,048 TRACE [main] Person$[Person] - model kept, creating reference with count 56
2017-08-17 17:39:36,048 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,ad528c11-51fb-4ad3-bbdb-7affa3c84ebc,55)),8f0a10f8-3ae3-408b-bacc-8efcdd3a8b6a)
2017-08-17 17:39:36,048 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,ad528c11-51fb-4ad3-bbdb-7affa3c84ebc,55)),8f0a10f8-3ae3-408b-bacc-8efcdd3a8b6a) with count 57
2017-08-17 17:39:36,049 TRACE [main] Person$[Person] - model kept, creating reference with count 57
2017-08-17 17:39:36,049 TRACE [main] Person$[Person] - updating Person(Oleg,None,aefd8084-db98-41eb-8545-ed05cf2b5cb7)
2017-08-17 17:39:36,049 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,aefd8084-db98-41eb-8545-ed05cf2b5cb7) with count 58
2017-08-17 17:39:36,049 TRACE [main] Person$[Person] - model kept, creating reference with count 58
2017-08-17 17:39:36,049 TRACE [main] Person$[Person] - updating Person(Oleg2,None,aefd8084-db98-41eb-8545-ed05cf2b5cb7)
2017-08-17 17:39:36,049 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,aefd8084-db98-41eb-8545-ed05cf2b5cb7) with count 59
2017-08-17 17:39:36,049 TRACE [main] Person$[Person] - model kept, creating reference with count 59
2017-08-17 17:39:36,049 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,aefd8084-db98-41eb-8545-ed05cf2b5cb7,58)),c4781c72-00a3-4161-b5d9-5557d4e1300f)
2017-08-17 17:39:36,049 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,aefd8084-db98-41eb-8545-ed05cf2b5cb7,58)),c4781c72-00a3-4161-b5d9-5557d4e1300f) with count 60
2017-08-17 17:39:36,049 TRACE [main] Person$[Person] - model kept, creating reference with count 60
2017-08-17 17:39:36,050 TRACE [main] Person$[Person] - updating Person(Oleg,None,3125249b-579d-43dc-bd1c-0bfcf1a28362)
2017-08-17 17:39:36,050 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,3125249b-579d-43dc-bd1c-0bfcf1a28362) with count 61
2017-08-17 17:39:36,050 TRACE [main] Person$[Person] - model kept, creating reference with count 61
2017-08-17 17:39:36,050 TRACE [main] Person$[Person] - updating Person(Oleg2,None,3125249b-579d-43dc-bd1c-0bfcf1a28362)
2017-08-17 17:39:36,050 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,3125249b-579d-43dc-bd1c-0bfcf1a28362) with count 62
2017-08-17 17:39:36,050 TRACE [main] Person$[Person] - model kept, creating reference with count 62
2017-08-17 17:39:36,050 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,3125249b-579d-43dc-bd1c-0bfcf1a28362,61)),e130b184-f7bb-47ca-a12e-a5d6a746a2ce)
2017-08-17 17:39:36,050 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,3125249b-579d-43dc-bd1c-0bfcf1a28362,61)),e130b184-f7bb-47ca-a12e-a5d6a746a2ce) with count 63
2017-08-17 17:39:36,050 TRACE [main] Person$[Person] - model kept, creating reference with count 63
2017-08-17 17:39:36,051 TRACE [main] Person$[Person] - updating Person(Oleg,None,f07d0bc6-b681-4d44-ba62-ec1a0f3ed19b)
2017-08-17 17:39:36,051 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,f07d0bc6-b681-4d44-ba62-ec1a0f3ed19b) with count 64
2017-08-17 17:39:36,051 TRACE [main] Person$[Person] - model kept, creating reference with count 64
2017-08-17 17:39:36,051 TRACE [main] Person$[Person] - updating Person(Oleg2,None,f07d0bc6-b681-4d44-ba62-ec1a0f3ed19b)
2017-08-17 17:39:36,051 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,f07d0bc6-b681-4d44-ba62-ec1a0f3ed19b) with count 65
2017-08-17 17:39:36,051 TRACE [main] Person$[Person] - model kept, creating reference with count 65
2017-08-17 17:39:36,051 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,f07d0bc6-b681-4d44-ba62-ec1a0f3ed19b,64)),7cb4c7b6-af87-4c44-bfae-0d38a790a869)
2017-08-17 17:39:36,051 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,f07d0bc6-b681-4d44-ba62-ec1a0f3ed19b,64)),7cb4c7b6-af87-4c44-bfae-0d38a790a869) with count 66
2017-08-17 17:39:36,052 TRACE [main] Person$[Person] - model kept, creating reference with count 66
2017-08-17 17:39:36,052 TRACE [main] Person$[Person] - updating Person(Oleg,None,040dd5da-0429-4073-a597-91a30768ec57)
2017-08-17 17:39:36,052 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,040dd5da-0429-4073-a597-91a30768ec57) with count 67
2017-08-17 17:39:36,052 TRACE [main] Person$[Person] - model kept, creating reference with count 67
2017-08-17 17:39:36,052 TRACE [main] Person$[Person] - updating Person(Oleg2,None,040dd5da-0429-4073-a597-91a30768ec57)
2017-08-17 17:39:36,052 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,040dd5da-0429-4073-a597-91a30768ec57) with count 68
2017-08-17 17:39:36,052 TRACE [main] Person$[Person] - model kept, creating reference with count 68
2017-08-17 17:39:36,052 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,040dd5da-0429-4073-a597-91a30768ec57,67)),61d3ec23-9fdb-41d5-968c-4bd6ebe14a4f)
2017-08-17 17:39:36,052 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,040dd5da-0429-4073-a597-91a30768ec57,67)),61d3ec23-9fdb-41d5-968c-4bd6ebe14a4f) with count 69
2017-08-17 17:39:36,052 TRACE [main] Person$[Person] - model kept, creating reference with count 69
2017-08-17 17:39:36,052 TRACE [main] Person$[Person] - updating Person(Oleg,None,84603239-b141-4500-8db5-f73b4dcb6802)
2017-08-17 17:39:36,052 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,84603239-b141-4500-8db5-f73b4dcb6802) with count 70
2017-08-17 17:39:36,053 TRACE [main] Person$[Person] - model kept, creating reference with count 70
2017-08-17 17:39:36,053 TRACE [main] Person$[Person] - updating Person(Oleg2,None,84603239-b141-4500-8db5-f73b4dcb6802)
2017-08-17 17:39:36,053 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,84603239-b141-4500-8db5-f73b4dcb6802) with count 71
2017-08-17 17:39:36,053 TRACE [main] Person$[Person] - model kept, creating reference with count 71
2017-08-17 17:39:36,053 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,84603239-b141-4500-8db5-f73b4dcb6802,70)),ae8ae415-510f-40a4-86f9-cfd48d863955)
2017-08-17 17:39:36,053 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,84603239-b141-4500-8db5-f73b4dcb6802,70)),ae8ae415-510f-40a4-86f9-cfd48d863955) with count 72
2017-08-17 17:39:36,053 TRACE [main] Person$[Person] - model kept, creating reference with count 72
2017-08-17 17:39:36,053 TRACE [main] Person$[Person] - updating Person(Oleg,None,1d8ca91e-bb86-4a18-8314-c466201f5fb2)
2017-08-17 17:39:36,053 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,1d8ca91e-bb86-4a18-8314-c466201f5fb2) with count 73
2017-08-17 17:39:36,053 TRACE [main] Person$[Person] - model kept, creating reference with count 73
2017-08-17 17:39:36,054 TRACE [main] Person$[Person] - updating Person(Oleg2,None,1d8ca91e-bb86-4a18-8314-c466201f5fb2)
2017-08-17 17:39:36,054 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,1d8ca91e-bb86-4a18-8314-c466201f5fb2) with count 74
2017-08-17 17:39:36,054 TRACE [main] Person$[Person] - model kept, creating reference with count 74
2017-08-17 17:39:36,054 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,1d8ca91e-bb86-4a18-8314-c466201f5fb2,73)),355a96d5-3ddc-4bfc-a86e-6f181c386d2f)
2017-08-17 17:39:36,054 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,1d8ca91e-bb86-4a18-8314-c466201f5fb2,73)),355a96d5-3ddc-4bfc-a86e-6f181c386d2f) with count 75
2017-08-17 17:39:36,054 TRACE [main] Person$[Person] - model kept, creating reference with count 75
2017-08-17 17:39:36,054 TRACE [main] Person$[Person] - updating Person(Oleg,None,f84b5f67-2652-4137-a559-64355c265dfd)
2017-08-17 17:39:36,054 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,f84b5f67-2652-4137-a559-64355c265dfd) with count 76
2017-08-17 17:39:36,054 TRACE [main] Person$[Person] - model kept, creating reference with count 76
2017-08-17 17:39:36,055 TRACE [main] Person$[Person] - updating Person(Oleg2,None,f84b5f67-2652-4137-a559-64355c265dfd)
2017-08-17 17:39:36,055 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,f84b5f67-2652-4137-a559-64355c265dfd) with count 77
2017-08-17 17:39:36,055 TRACE [main] Person$[Person] - model kept, creating reference with count 77
2017-08-17 17:39:36,055 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,f84b5f67-2652-4137-a559-64355c265dfd,76)),674b051e-eec0-4ed9-9846-3d5cb3811648)
2017-08-17 17:39:36,055 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,f84b5f67-2652-4137-a559-64355c265dfd,76)),674b051e-eec0-4ed9-9846-3d5cb3811648) with count 78
2017-08-17 17:39:36,055 TRACE [main] Person$[Person] - model kept, creating reference with count 78
2017-08-17 17:39:36,055 TRACE [main] Person$[Person] - updating Person(Oleg,None,c2d70d60-b391-4a85-bba6-90338b946ab4)
2017-08-17 17:39:36,056 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,c2d70d60-b391-4a85-bba6-90338b946ab4) with count 79
2017-08-17 17:39:36,056 TRACE [main] Person$[Person] - model kept, creating reference with count 79
2017-08-17 17:39:36,056 TRACE [main] Person$[Person] - updating Person(Oleg2,None,c2d70d60-b391-4a85-bba6-90338b946ab4)
2017-08-17 17:39:36,056 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,c2d70d60-b391-4a85-bba6-90338b946ab4) with count 80
2017-08-17 17:39:36,056 TRACE [main] Person$[Person] - model kept, creating reference with count 80
2017-08-17 17:39:36,056 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,c2d70d60-b391-4a85-bba6-90338b946ab4,79)),8d0f3c18-6d2a-4b5a-938b-6ff199fe8223)
2017-08-17 17:39:36,056 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,c2d70d60-b391-4a85-bba6-90338b946ab4,79)),8d0f3c18-6d2a-4b5a-938b-6ff199fe8223) with count 81
2017-08-17 17:39:36,057 TRACE [main] Person$[Person] - model kept, creating reference with count 81
2017-08-17 17:39:36,057 TRACE [main] Person$[Person] - updating Person(Oleg,None,1f76935d-1d35-4eed-85d3-ec753822b268)
2017-08-17 17:39:36,057 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,1f76935d-1d35-4eed-85d3-ec753822b268) with count 82
2017-08-17 17:39:36,059 TRACE [main] Person$[Person] - model kept, creating reference with count 82
2017-08-17 17:39:36,059 TRACE [main] Person$[Person] - updating Person(Oleg2,None,1f76935d-1d35-4eed-85d3-ec753822b268)
2017-08-17 17:39:36,059 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,1f76935d-1d35-4eed-85d3-ec753822b268) with count 83
2017-08-17 17:39:36,059 TRACE [main] Person$[Person] - model kept, creating reference with count 83
2017-08-17 17:39:36,059 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,1f76935d-1d35-4eed-85d3-ec753822b268,82)),51338fca-394c-4414-b0ba-d8fbf64e05a8)
2017-08-17 17:39:36,059 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,1f76935d-1d35-4eed-85d3-ec753822b268,82)),51338fca-394c-4414-b0ba-d8fbf64e05a8) with count 84
2017-08-17 17:39:36,059 TRACE [main] Person$[Person] - model kept, creating reference with count 84
2017-08-17 17:39:36,059 TRACE [main] Person$[Person] - updating Person(Oleg,None,9e702e93-ad8b-4c3c-a08a-4dcabd96ec27)
2017-08-17 17:39:36,060 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,9e702e93-ad8b-4c3c-a08a-4dcabd96ec27) with count 85
2017-08-17 17:39:36,060 TRACE [main] Person$[Person] - model kept, creating reference with count 85
2017-08-17 17:39:36,060 TRACE [main] Person$[Person] - updating Person(Oleg2,None,9e702e93-ad8b-4c3c-a08a-4dcabd96ec27)
2017-08-17 17:39:36,064 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,9e702e93-ad8b-4c3c-a08a-4dcabd96ec27) with count 86
2017-08-17 17:39:36,065 TRACE [main] Person$[Person] - model kept, creating reference with count 86
2017-08-17 17:39:36,065 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,9e702e93-ad8b-4c3c-a08a-4dcabd96ec27,85)),59257890-38fb-445a-b3ba-be4267d301bf)
2017-08-17 17:39:36,065 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,9e702e93-ad8b-4c3c-a08a-4dcabd96ec27,85)),59257890-38fb-445a-b3ba-be4267d301bf) with count 87
2017-08-17 17:39:36,066 TRACE [main] Person$[Person] - model kept, creating reference with count 87
2017-08-17 17:39:36,066 TRACE [main] Person$[Person] - updating Person(Oleg,None,38d77c70-17ea-4484-84fb-cc6215242374)
2017-08-17 17:39:36,066 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,38d77c70-17ea-4484-84fb-cc6215242374) with count 88
2017-08-17 17:39:36,066 TRACE [main] Person$[Person] - model kept, creating reference with count 88
2017-08-17 17:39:36,066 TRACE [main] Person$[Person] - updating Person(Oleg2,None,38d77c70-17ea-4484-84fb-cc6215242374)
2017-08-17 17:39:36,066 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,38d77c70-17ea-4484-84fb-cc6215242374) with count 89
2017-08-17 17:39:36,066 TRACE [main] Person$[Person] - model kept, creating reference with count 89
2017-08-17 17:39:36,066 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,38d77c70-17ea-4484-84fb-cc6215242374,88)),f9816ba0-a1fb-4dce-ad31-fef141fa187f)
2017-08-17 17:39:36,066 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,38d77c70-17ea-4484-84fb-cc6215242374,88)),f9816ba0-a1fb-4dce-ad31-fef141fa187f) with count 90
2017-08-17 17:39:36,066 TRACE [main] Person$[Person] - model kept, creating reference with count 90
2017-08-17 17:39:37,067 INFO  [main] Counter[Person] - counter is 90
2017-08-17 17:39:37,070 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(040dd5da-0429-4073-a597-91a30768ec57,Map(67 -> Person(Oleg,None,040dd5da-0429-4073-a597-91a30768ec57), 68 -> Person(Oleg2,None,040dd5da-0429-4073-a597-91a30768ec57)))
	(c73a2b05-0eae-4fb7-9d6f-b179b1e0efd2,Map(49 -> Person(Oleg,None,c73a2b05-0eae-4fb7-9d6f-b179b1e0efd2), 50 -> Person(Oleg2,None,c73a2b05-0eae-4fb7-9d6f-b179b1e0efd2)))
	(aefd8084-db98-41eb-8545-ed05cf2b5cb7,Map(58 -> Person(Oleg,None,aefd8084-db98-41eb-8545-ed05cf2b5cb7), 59 -> Person(Oleg2,None,aefd8084-db98-41eb-8545-ed05cf2b5cb7)))
	(5f87e97b-0474-4c19-b6b7-9f6982993679,Map(42 -> Person(Igor,Some(Reference(class models.Person,7802daf7-2f04-4a47-9926-8e3a1c5fe5f9,40)),5f87e97b-0474-4c19-b6b7-9f6982993679)))
	(1f76935d-1d35-4eed-85d3-ec753822b268,Map(82 -> Person(Oleg,None,1f76935d-1d35-4eed-85d3-ec753822b268), 83 -> Person(Oleg2,None,1f76935d-1d35-4eed-85d3-ec753822b268)))
	(e130b184-f7bb-47ca-a12e-a5d6a746a2ce,Map(63 -> Person(Igor,Some(Reference(class models.Person,3125249b-579d-43dc-bd1c-0bfcf1a28362,61)),e130b184-f7bb-47ca-a12e-a5d6a746a2ce)))
	(f84b5f67-2652-4137-a559-64355c265dfd,Map(76 -> Person(Oleg,None,f84b5f67-2652-4137-a559-64355c265dfd), 77 -> Person(Oleg2,None,f84b5f67-2652-4137-a559-64355c265dfd)))
	(85980005-d197-4530-8e2d-1fe384c5eab8,Map(31 -> Person(Oleg,None,85980005-d197-4530-8e2d-1fe384c5eab8), 32 -> Person(Oleg2,None,85980005-d197-4530-8e2d-1fe384c5eab8)))
	(f5bcd032-9ce9-4a65-8d9b-230f7ff4afcf,Map(3 -> Person(Igor,Some(Reference(class models.Person,07c746eb-f633-402c-9eac-56d0bc8e74fe,1)),f5bcd032-9ce9-4a65-8d9b-230f7ff4afcf)))
	(0deb86fd-714e-46b8-821f-9925d3014012,Map(45 -> Person(Igor,Some(Reference(class models.Person,3e949bd6-27d2-46b6-8a07-33b49c4b107e,43)),0deb86fd-714e-46b8-821f-9925d3014012)))
	(1a505685-8ed6-4a28-9c22-6627aa28d7b1,Map(22 -> Person(Oleg,None,1a505685-8ed6-4a28-9c22-6627aa28d7b1), 23 -> Person(Oleg2,None,1a505685-8ed6-4a28-9c22-6627aa28d7b1)))
	(8132766b-3e40-4c85-ba79-606de8af55f5,Map(33 -> Person(Igor,Some(Reference(class models.Person,85980005-d197-4530-8e2d-1fe384c5eab8,31)),8132766b-3e40-4c85-ba79-606de8af55f5)))
	(d62a52d3-309a-438c-addc-0aa7fbdfc9c3,Map(36 -> Person(Igor,Some(Reference(class models.Person,6e505cdd-58b1-46e9-a13f-a836d93e12ad,34)),d62a52d3-309a-438c-addc-0aa7fbdfc9c3)))
	(07c746eb-f633-402c-9eac-56d0bc8e74fe,Map(1 -> Person(Oleg,None,07c746eb-f633-402c-9eac-56d0bc8e74fe), 2 -> Person(Oleg2,None,07c746eb-f633-402c-9eac-56d0bc8e74fe)))
	(1d8ca91e-bb86-4a18-8314-c466201f5fb2,Map(73 -> Person(Oleg,None,1d8ca91e-bb86-4a18-8314-c466201f5fb2), 74 -> Person(Oleg2,None,1d8ca91e-bb86-4a18-8314-c466201f5fb2)))
	(3e949bd6-27d2-46b6-8a07-33b49c4b107e,Map(43 -> Person(Oleg,None,3e949bd6-27d2-46b6-8a07-33b49c4b107e), 44 -> Person(Oleg2,None,3e949bd6-27d2-46b6-8a07-33b49c4b107e)))
	(7b2aceb7-de13-4240-894c-50f239e38120,Map(4 -> Person(Oleg,None,7b2aceb7-de13-4240-894c-50f239e38120), 5 -> Person(Oleg2,None,7b2aceb7-de13-4240-894c-50f239e38120)))
	(c2d70d60-b391-4a85-bba6-90338b946ab4,Map(79 -> Person(Oleg,None,c2d70d60-b391-4a85-bba6-90338b946ab4), 80 -> Person(Oleg2,None,c2d70d60-b391-4a85-bba6-90338b946ab4)))
	(71572fd7-321d-47f7-b7cd-fe926abde524,Map(48 -> Person(Igor,Some(Reference(class models.Person,f25baff2-ccfc-496f-ac75-b447f300389d,46)),71572fd7-321d-47f7-b7cd-fe926abde524)))
	(c4781c72-00a3-4161-b5d9-5557d4e1300f,Map(60 -> Person(Igor,Some(Reference(class models.Person,aefd8084-db98-41eb-8545-ed05cf2b5cb7,58)),c4781c72-00a3-4161-b5d9-5557d4e1300f)))
	(83e9766c-9183-4547-9602-5bd3793de883,Map(7 -> Person(Oleg,None,83e9766c-9183-4547-9602-5bd3793de883), 8 -> Person(Oleg2,None,83e9766c-9183-4547-9602-5bd3793de883)))
	(84603239-b141-4500-8db5-f73b4dcb6802,Map(70 -> Person(Oleg,None,84603239-b141-4500-8db5-f73b4dcb6802), 71 -> Person(Oleg2,None,84603239-b141-4500-8db5-f73b4dcb6802)))
	(218ac3b7-f88c-4e8c-8626-47d74b9c419c,Map(51 -> Person(Igor,Some(Reference(class models.Person,c73a2b05-0eae-4fb7-9d6f-b179b1e0efd2,49)),218ac3b7-f88c-4e8c-8626-47d74b9c419c)))
	(56a009e1-adf1-4891-afef-e74d2e1e1031,Map(39 -> Person(Igor,Some(Reference(class models.Person,b2634b85-2f27-4d38-91cb-2c9e2d114a18,37)),56a009e1-adf1-4891-afef-e74d2e1e1031)))
	(61d3ec23-9fdb-41d5-968c-4bd6ebe14a4f,Map(69 -> Person(Igor,Some(Reference(class models.Person,040dd5da-0429-4073-a597-91a30768ec57,67)),61d3ec23-9fdb-41d5-968c-4bd6ebe14a4f)))
	(d78c3b74-02e9-4a0d-9a62-4f3cef4c1b62,Map(30 -> Person(Igor,Some(Reference(class models.Person,3826fa25-4766-47cb-a36e-8f9cf4dee5bc,28)),d78c3b74-02e9-4a0d-9a62-4f3cef4c1b62)))
	(355a96d5-3ddc-4bfc-a86e-6f181c386d2f,Map(75 -> Person(Igor,Some(Reference(class models.Person,1d8ca91e-bb86-4a18-8314-c466201f5fb2,73)),355a96d5-3ddc-4bfc-a86e-6f181c386d2f)))
	(f9816ba0-a1fb-4dce-ad31-fef141fa187f,Map(90 -> Person(Igor,Some(Reference(class models.Person,38d77c70-17ea-4484-84fb-cc6215242374,88)),f9816ba0-a1fb-4dce-ad31-fef141fa187f)))
	(7802daf7-2f04-4a47-9926-8e3a1c5fe5f9,Map(40 -> Person(Oleg,None,7802daf7-2f04-4a47-9926-8e3a1c5fe5f9), 41 -> Person(Oleg2,None,7802daf7-2f04-4a47-9926-8e3a1c5fe5f9)))
	(6a6e8ae1-cfc7-4e21-ba43-d466ee2654be,Map(27 -> Person(Igor,Some(Reference(class models.Person,c5bc772e-5ab7-41c2-a33b-1a74f4151c48,25)),6a6e8ae1-cfc7-4e21-ba43-d466ee2654be)))
	(ad032969-b5cd-43b7-9342-bbf686c0f66b,Map(12 -> Person(Igor,Some(Reference(class models.Person,a2cf3126-2bf0-4024-9512-59aeeb615155,10)),ad032969-b5cd-43b7-9342-bbf686c0f66b)))
	(f25baff2-ccfc-496f-ac75-b447f300389d,Map(46 -> Person(Oleg,None,f25baff2-ccfc-496f-ac75-b447f300389d), 47 -> Person(Oleg2,None,f25baff2-ccfc-496f-ac75-b447f300389d)))
	(674b051e-eec0-4ed9-9846-3d5cb3811648,Map(78 -> Person(Igor,Some(Reference(class models.Person,f84b5f67-2652-4137-a559-64355c265dfd,76)),674b051e-eec0-4ed9-9846-3d5cb3811648)))
	(a2cf3126-2bf0-4024-9512-59aeeb615155,Map(10 -> Person(Oleg,None,a2cf3126-2bf0-4024-9512-59aeeb615155), 11 -> Person(Oleg2,None,a2cf3126-2bf0-4024-9512-59aeeb615155)))
	(f07d0bc6-b681-4d44-ba62-ec1a0f3ed19b,Map(64 -> Person(Oleg,None,f07d0bc6-b681-4d44-ba62-ec1a0f3ed19b), 65 -> Person(Oleg2,None,f07d0bc6-b681-4d44-ba62-ec1a0f3ed19b)))
	(252e94db-a7be-422f-91f4-476c253238f2,Map(21 -> Person(Igor,Some(Reference(class models.Person,930d52e0-fbd8-43f3-acb3-e3d852c5900a,19)),252e94db-a7be-422f-91f4-476c253238f2)))
	(8f0a10f8-3ae3-408b-bacc-8efcdd3a8b6a,Map(57 -> Person(Igor,Some(Reference(class models.Person,ad528c11-51fb-4ad3-bbdb-7affa3c84ebc,55)),8f0a10f8-3ae3-408b-bacc-8efcdd3a8b6a)))
	(ae8ae415-510f-40a4-86f9-cfd48d863955,Map(72 -> Person(Igor,Some(Reference(class models.Person,84603239-b141-4500-8db5-f73b4dcb6802,70)),ae8ae415-510f-40a4-86f9-cfd48d863955)))
	(b2634b85-2f27-4d38-91cb-2c9e2d114a18,Map(37 -> Person(Oleg,None,b2634b85-2f27-4d38-91cb-2c9e2d114a18), 38 -> Person(Oleg2,None,b2634b85-2f27-4d38-91cb-2c9e2d114a18)))
	(8e83f0b8-904a-4a8c-a8e8-57ed8c1f031b,Map(24 -> Person(Igor,Some(Reference(class models.Person,1a505685-8ed6-4a28-9c22-6627aa28d7b1,22)),8e83f0b8-904a-4a8c-a8e8-57ed8c1f031b)))
	(8d0f3c18-6d2a-4b5a-938b-6ff199fe8223,Map(81 -> Person(Igor,Some(Reference(class models.Person,c2d70d60-b391-4a85-bba6-90338b946ab4,79)),8d0f3c18-6d2a-4b5a-938b-6ff199fe8223)))
	(3125249b-579d-43dc-bd1c-0bfcf1a28362,Map(61 -> Person(Oleg,None,3125249b-579d-43dc-bd1c-0bfcf1a28362), 62 -> Person(Oleg2,None,3125249b-579d-43dc-bd1c-0bfcf1a28362)))
	(6e505cdd-58b1-46e9-a13f-a836d93e12ad,Map(34 -> Person(Oleg,None,6e505cdd-58b1-46e9-a13f-a836d93e12ad), 35 -> Person(Oleg2,None,6e505cdd-58b1-46e9-a13f-a836d93e12ad)))
	(f6cebac2-82c8-4b8e-b4e9-ae2613f34d11,Map(16 -> Person(Oleg,None,f6cebac2-82c8-4b8e-b4e9-ae2613f34d11), 17 -> Person(Oleg2,None,f6cebac2-82c8-4b8e-b4e9-ae2613f34d11)))
	(3584e426-13e5-402c-b5bd-132a8eacb031,Map(6 -> Person(Igor,Some(Reference(class models.Person,7b2aceb7-de13-4240-894c-50f239e38120,4)),3584e426-13e5-402c-b5bd-132a8eacb031)))
	(6c27f6b3-3a3c-4aa2-895b-828efbc4e388,Map(9 -> Person(Igor,Some(Reference(class models.Person,83e9766c-9183-4547-9602-5bd3793de883,7)),6c27f6b3-3a3c-4aa2-895b-828efbc4e388)))
	(9e702e93-ad8b-4c3c-a08a-4dcabd96ec27,Map(85 -> Person(Oleg,None,9e702e93-ad8b-4c3c-a08a-4dcabd96ec27), 86 -> Person(Oleg2,None,9e702e93-ad8b-4c3c-a08a-4dcabd96ec27)))
	(3c57502e-09aa-4bbf-9faf-022bd16dcf8e,Map(18 -> Person(Igor,Some(Reference(class models.Person,f6cebac2-82c8-4b8e-b4e9-ae2613f34d11,16)),3c57502e-09aa-4bbf-9faf-022bd16dcf8e)))
	(d5e3a2ce-41ac-4fba-bb05-cd8a56ec81bf,Map(13 -> Person(Oleg,None,d5e3a2ce-41ac-4fba-bb05-cd8a56ec81bf), 14 -> Person(Oleg2,None,d5e3a2ce-41ac-4fba-bb05-cd8a56ec81bf)))
	(59257890-38fb-445a-b3ba-be4267d301bf,Map(87 -> Person(Igor,Some(Reference(class models.Person,9e702e93-ad8b-4c3c-a08a-4dcabd96ec27,85)),59257890-38fb-445a-b3ba-be4267d301bf)))
	(c5bc772e-5ab7-41c2-a33b-1a74f4151c48,Map(25 -> Person(Oleg,None,c5bc772e-5ab7-41c2-a33b-1a74f4151c48), 26 -> Person(Oleg2,None,c5bc772e-5ab7-41c2-a33b-1a74f4151c48)))
	(3826fa25-4766-47cb-a36e-8f9cf4dee5bc,Map(28 -> Person(Oleg,None,3826fa25-4766-47cb-a36e-8f9cf4dee5bc), 29 -> Person(Oleg2,None,3826fa25-4766-47cb-a36e-8f9cf4dee5bc)))
	(51338fca-394c-4414-b0ba-d8fbf64e05a8,Map(84 -> Person(Igor,Some(Reference(class models.Person,1f76935d-1d35-4eed-85d3-ec753822b268,82)),51338fca-394c-4414-b0ba-d8fbf64e05a8)))
	(b14b554d-0309-480a-8114-241803d3eb24,Map(54 -> Person(Igor,Some(Reference(class models.Person,c9ea5a91-abb3-4c02-9374-538d200cef3c,52)),b14b554d-0309-480a-8114-241803d3eb24)))
	(930d52e0-fbd8-43f3-acb3-e3d852c5900a,Map(19 -> Person(Oleg,None,930d52e0-fbd8-43f3-acb3-e3d852c5900a), 20 -> Person(Oleg2,None,930d52e0-fbd8-43f3-acb3-e3d852c5900a)))
	(38d77c70-17ea-4484-84fb-cc6215242374,Map(88 -> Person(Oleg,None,38d77c70-17ea-4484-84fb-cc6215242374), 89 -> Person(Oleg2,None,38d77c70-17ea-4484-84fb-cc6215242374)))
	(7cb4c7b6-af87-4c44-bfae-0d38a790a869,Map(66 -> Person(Igor,Some(Reference(class models.Person,f07d0bc6-b681-4d44-ba62-ec1a0f3ed19b,64)),7cb4c7b6-af87-4c44-bfae-0d38a790a869)))
	(c9ea5a91-abb3-4c02-9374-538d200cef3c,Map(52 -> Person(Oleg,None,c9ea5a91-abb3-4c02-9374-538d200cef3c), 53 -> Person(Oleg2,None,c9ea5a91-abb3-4c02-9374-538d200cef3c)))
	(ad528c11-51fb-4ad3-bbdb-7affa3c84ebc,Map(55 -> Person(Oleg,None,ad528c11-51fb-4ad3-bbdb-7affa3c84ebc), 56 -> Person(Oleg2,None,ad528c11-51fb-4ad3-bbdb-7affa3c84ebc)))
	(81c23182-9430-4920-9cd9-af0af0cd7e08,Map(15 -> Person(Igor,Some(Reference(class models.Person,d5e3a2ce-41ac-4fba-bb05-cd8a56ec81bf,13)),81c23182-9430-4920-9cd9-af0af0cd7e08)))

2017-08-17 17:40:01,597 TRACE [main] Person$[Person] - updating Person(Oleg,None,77a37a51-7980-4682-9b50-9e21c1d607cf)
2017-08-17 17:40:01,621 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,77a37a51-7980-4682-9b50-9e21c1d607cf) with count 1
2017-08-17 17:40:01,632 TRACE [main] Person$[Person] - model kept, creating reference with count 1
2017-08-17 17:40:01,634 TRACE [main] Person$[Person] - updating Person(Oleg2,None,77a37a51-7980-4682-9b50-9e21c1d607cf)
2017-08-17 17:40:01,634 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,77a37a51-7980-4682-9b50-9e21c1d607cf) with count 2
2017-08-17 17:40:01,635 TRACE [main] Person$[Person] - model kept, creating reference with count 2
2017-08-17 17:40:01,635 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,77a37a51-7980-4682-9b50-9e21c1d607cf,1)),2e197317-9eb6-4442-9ce8-45e2849b30ff)
2017-08-17 17:40:01,635 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,77a37a51-7980-4682-9b50-9e21c1d607cf,1)),2e197317-9eb6-4442-9ce8-45e2849b30ff) with count 3
2017-08-17 17:40:01,635 TRACE [main] Person$[Person] - model kept, creating reference with count 3
2017-08-17 17:40:01,635 TRACE [main] Person$[Person] - updating Person(Oleg,None,c6d8cbb9-8499-4c20-97c0-b6a465f2fcfa)
2017-08-17 17:40:01,635 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,c6d8cbb9-8499-4c20-97c0-b6a465f2fcfa) with count 4
2017-08-17 17:40:01,635 TRACE [main] Person$[Person] - model kept, creating reference with count 4
2017-08-17 17:40:01,635 TRACE [main] Person$[Person] - updating Person(Oleg2,None,c6d8cbb9-8499-4c20-97c0-b6a465f2fcfa)
2017-08-17 17:40:01,635 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,c6d8cbb9-8499-4c20-97c0-b6a465f2fcfa) with count 5
2017-08-17 17:40:01,635 TRACE [main] Person$[Person] - model kept, creating reference with count 5
2017-08-17 17:40:01,636 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,c6d8cbb9-8499-4c20-97c0-b6a465f2fcfa,4)),4aab2d58-4248-44cb-a7d0-555cd183e73b)
2017-08-17 17:40:01,636 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,c6d8cbb9-8499-4c20-97c0-b6a465f2fcfa,4)),4aab2d58-4248-44cb-a7d0-555cd183e73b) with count 6
2017-08-17 17:40:01,636 TRACE [main] Person$[Person] - model kept, creating reference with count 6
2017-08-17 17:40:01,636 TRACE [main] Person$[Person] - updating Person(Oleg,None,190e0d9e-dd9f-4441-be84-41f969fa1895)
2017-08-17 17:40:01,636 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,190e0d9e-dd9f-4441-be84-41f969fa1895) with count 7
2017-08-17 17:40:01,636 TRACE [main] Person$[Person] - model kept, creating reference with count 7
2017-08-17 17:40:01,636 TRACE [main] Person$[Person] - updating Person(Oleg2,None,190e0d9e-dd9f-4441-be84-41f969fa1895)
2017-08-17 17:40:01,636 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,190e0d9e-dd9f-4441-be84-41f969fa1895) with count 8
2017-08-17 17:40:01,636 TRACE [main] Person$[Person] - model kept, creating reference with count 8
2017-08-17 17:40:01,636 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,190e0d9e-dd9f-4441-be84-41f969fa1895,7)),369bb701-3bf5-4791-9ed2-99db4ed70a8c)
2017-08-17 17:40:01,636 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,190e0d9e-dd9f-4441-be84-41f969fa1895,7)),369bb701-3bf5-4791-9ed2-99db4ed70a8c) with count 9
2017-08-17 17:40:01,636 TRACE [main] Person$[Person] - model kept, creating reference with count 9
2017-08-17 17:40:01,637 TRACE [main] Person$[Person] - updating Person(Oleg,None,62d7de73-3600-4724-bdc7-d010aa0d3166)
2017-08-17 17:40:01,637 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,62d7de73-3600-4724-bdc7-d010aa0d3166) with count 10
2017-08-17 17:40:01,637 TRACE [main] Person$[Person] - model kept, creating reference with count 10
2017-08-17 17:40:01,637 TRACE [main] Person$[Person] - updating Person(Oleg2,None,62d7de73-3600-4724-bdc7-d010aa0d3166)
2017-08-17 17:40:01,637 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,62d7de73-3600-4724-bdc7-d010aa0d3166) with count 11
2017-08-17 17:40:01,637 TRACE [main] Person$[Person] - model kept, creating reference with count 11
2017-08-17 17:40:01,637 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,62d7de73-3600-4724-bdc7-d010aa0d3166,10)),2cccf01d-6755-4536-95b7-67edb74aae98)
2017-08-17 17:40:01,637 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,62d7de73-3600-4724-bdc7-d010aa0d3166,10)),2cccf01d-6755-4536-95b7-67edb74aae98) with count 12
2017-08-17 17:40:01,638 TRACE [main] Person$[Person] - model kept, creating reference with count 12
2017-08-17 17:40:01,638 TRACE [main] Person$[Person] - updating Person(Oleg,None,b39f4251-b4eb-4a5b-8c43-27d230e41f1b)
2017-08-17 17:40:01,638 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,b39f4251-b4eb-4a5b-8c43-27d230e41f1b) with count 13
2017-08-17 17:40:01,638 TRACE [main] Person$[Person] - model kept, creating reference with count 13
2017-08-17 17:40:01,638 TRACE [main] Person$[Person] - updating Person(Oleg2,None,b39f4251-b4eb-4a5b-8c43-27d230e41f1b)
2017-08-17 17:40:01,638 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,b39f4251-b4eb-4a5b-8c43-27d230e41f1b) with count 14
2017-08-17 17:40:01,638 TRACE [main] Person$[Person] - model kept, creating reference with count 14
2017-08-17 17:40:01,638 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,b39f4251-b4eb-4a5b-8c43-27d230e41f1b,13)),de21f354-3d5a-4062-9cd5-659e64af0176)
2017-08-17 17:40:01,638 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,b39f4251-b4eb-4a5b-8c43-27d230e41f1b,13)),de21f354-3d5a-4062-9cd5-659e64af0176) with count 15
2017-08-17 17:40:01,639 TRACE [main] Person$[Person] - model kept, creating reference with count 15
2017-08-17 17:40:01,639 TRACE [main] Person$[Person] - updating Person(Oleg,None,d8dc3f70-ad84-48b3-8d24-43ffbdabb0ef)
2017-08-17 17:40:01,639 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,d8dc3f70-ad84-48b3-8d24-43ffbdabb0ef) with count 16
2017-08-17 17:40:01,639 TRACE [main] Person$[Person] - model kept, creating reference with count 16
2017-08-17 17:40:01,639 TRACE [main] Person$[Person] - updating Person(Oleg2,None,d8dc3f70-ad84-48b3-8d24-43ffbdabb0ef)
2017-08-17 17:40:01,639 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,d8dc3f70-ad84-48b3-8d24-43ffbdabb0ef) with count 17
2017-08-17 17:40:01,639 TRACE [main] Person$[Person] - model kept, creating reference with count 17
2017-08-17 17:40:01,639 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,d8dc3f70-ad84-48b3-8d24-43ffbdabb0ef,16)),e1626662-e53a-4d53-8c68-2034d05450af)
2017-08-17 17:40:01,639 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,d8dc3f70-ad84-48b3-8d24-43ffbdabb0ef,16)),e1626662-e53a-4d53-8c68-2034d05450af) with count 18
2017-08-17 17:40:01,640 TRACE [main] Person$[Person] - model kept, creating reference with count 18
2017-08-17 17:40:01,640 TRACE [main] Person$[Person] - updating Person(Oleg,None,e601575a-1c46-4a90-9e73-a31181aa12f4)
2017-08-17 17:40:01,640 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,e601575a-1c46-4a90-9e73-a31181aa12f4) with count 19
2017-08-17 17:40:01,640 TRACE [main] Person$[Person] - model kept, creating reference with count 19
2017-08-17 17:40:01,640 TRACE [main] Person$[Person] - updating Person(Oleg2,None,e601575a-1c46-4a90-9e73-a31181aa12f4)
2017-08-17 17:40:01,640 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,e601575a-1c46-4a90-9e73-a31181aa12f4) with count 20
2017-08-17 17:40:01,640 TRACE [main] Person$[Person] - model kept, creating reference with count 20
2017-08-17 17:40:01,640 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,e601575a-1c46-4a90-9e73-a31181aa12f4,19)),4a978546-66d4-43af-b1de-4d79db651165)
2017-08-17 17:40:01,640 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,e601575a-1c46-4a90-9e73-a31181aa12f4,19)),4a978546-66d4-43af-b1de-4d79db651165) with count 21
2017-08-17 17:40:01,640 TRACE [main] Person$[Person] - model kept, creating reference with count 21
2017-08-17 17:40:01,641 TRACE [main] Person$[Person] - updating Person(Oleg,None,cc1fe27e-cd6c-43d4-92e1-11676ce4f03a)
2017-08-17 17:40:01,641 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,cc1fe27e-cd6c-43d4-92e1-11676ce4f03a) with count 22
2017-08-17 17:40:01,641 TRACE [main] Person$[Person] - model kept, creating reference with count 22
2017-08-17 17:40:01,641 TRACE [main] Person$[Person] - updating Person(Oleg2,None,cc1fe27e-cd6c-43d4-92e1-11676ce4f03a)
2017-08-17 17:40:01,641 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,cc1fe27e-cd6c-43d4-92e1-11676ce4f03a) with count 23
2017-08-17 17:40:01,642 TRACE [main] Person$[Person] - model kept, creating reference with count 23
2017-08-17 17:40:01,642 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,cc1fe27e-cd6c-43d4-92e1-11676ce4f03a,22)),a0a41d1e-d835-401b-9314-4f475f7a9437)
2017-08-17 17:40:01,642 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,cc1fe27e-cd6c-43d4-92e1-11676ce4f03a,22)),a0a41d1e-d835-401b-9314-4f475f7a9437) with count 24
2017-08-17 17:40:01,643 TRACE [main] Person$[Person] - model kept, creating reference with count 24
2017-08-17 17:40:01,643 TRACE [main] Person$[Person] - updating Person(Oleg,None,ee3af41b-5f0b-4299-9727-8047ae9ea569)
2017-08-17 17:40:01,643 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,ee3af41b-5f0b-4299-9727-8047ae9ea569) with count 25
2017-08-17 17:40:01,643 TRACE [main] Person$[Person] - model kept, creating reference with count 25
2017-08-17 17:40:01,643 TRACE [main] Person$[Person] - updating Person(Oleg2,None,ee3af41b-5f0b-4299-9727-8047ae9ea569)
2017-08-17 17:40:01,643 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,ee3af41b-5f0b-4299-9727-8047ae9ea569) with count 26
2017-08-17 17:40:01,644 TRACE [main] Person$[Person] - model kept, creating reference with count 26
2017-08-17 17:40:01,644 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,ee3af41b-5f0b-4299-9727-8047ae9ea569,25)),ffc0bcfc-db05-4bb2-99bd-f96972f98d38)
2017-08-17 17:40:01,644 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,ee3af41b-5f0b-4299-9727-8047ae9ea569,25)),ffc0bcfc-db05-4bb2-99bd-f96972f98d38) with count 27
2017-08-17 17:40:01,644 TRACE [main] Person$[Person] - model kept, creating reference with count 27
2017-08-17 17:40:01,644 TRACE [main] Person$[Person] - updating Person(Oleg,None,6a550146-989b-481e-8b04-92c4aa0b6544)
2017-08-17 17:40:01,644 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,6a550146-989b-481e-8b04-92c4aa0b6544) with count 28
2017-08-17 17:40:01,645 TRACE [main] Person$[Person] - model kept, creating reference with count 28
2017-08-17 17:40:01,645 TRACE [main] Person$[Person] - updating Person(Oleg2,None,6a550146-989b-481e-8b04-92c4aa0b6544)
2017-08-17 17:40:01,645 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,6a550146-989b-481e-8b04-92c4aa0b6544) with count 29
2017-08-17 17:40:01,645 TRACE [main] Person$[Person] - model kept, creating reference with count 29
2017-08-17 17:40:01,645 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,6a550146-989b-481e-8b04-92c4aa0b6544,28)),ba196dda-d393-4cb9-98ab-9d726c62f79c)
2017-08-17 17:40:01,646 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,6a550146-989b-481e-8b04-92c4aa0b6544,28)),ba196dda-d393-4cb9-98ab-9d726c62f79c) with count 30
2017-08-17 17:40:01,646 TRACE [main] Person$[Person] - model kept, creating reference with count 30
2017-08-17 17:40:01,646 TRACE [main] Person$[Person] - updating Person(Oleg,None,41fa9023-449f-4596-a1ca-540fc3bdf377)
2017-08-17 17:40:01,646 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,41fa9023-449f-4596-a1ca-540fc3bdf377) with count 31
2017-08-17 17:40:01,646 TRACE [main] Person$[Person] - model kept, creating reference with count 31
2017-08-17 17:40:01,647 TRACE [main] Person$[Person] - updating Person(Oleg2,None,41fa9023-449f-4596-a1ca-540fc3bdf377)
2017-08-17 17:40:01,647 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,41fa9023-449f-4596-a1ca-540fc3bdf377) with count 32
2017-08-17 17:40:01,647 TRACE [main] Person$[Person] - model kept, creating reference with count 32
2017-08-17 17:40:01,647 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,41fa9023-449f-4596-a1ca-540fc3bdf377,31)),25d942d9-fef3-43cf-a85b-5f762c34d6e1)
2017-08-17 17:40:01,647 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,41fa9023-449f-4596-a1ca-540fc3bdf377,31)),25d942d9-fef3-43cf-a85b-5f762c34d6e1) with count 33
2017-08-17 17:40:01,648 TRACE [main] Person$[Person] - model kept, creating reference with count 33
2017-08-17 17:40:01,648 TRACE [main] Person$[Person] - updating Person(Oleg,None,b69ba8f9-6964-4fa6-8171-93dee7616043)
2017-08-17 17:40:01,648 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,b69ba8f9-6964-4fa6-8171-93dee7616043) with count 34
2017-08-17 17:40:01,648 TRACE [main] Person$[Person] - model kept, creating reference with count 34
2017-08-17 17:40:01,648 TRACE [main] Person$[Person] - updating Person(Oleg2,None,b69ba8f9-6964-4fa6-8171-93dee7616043)
2017-08-17 17:40:01,648 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,b69ba8f9-6964-4fa6-8171-93dee7616043) with count 35
2017-08-17 17:40:01,649 TRACE [main] Person$[Person] - model kept, creating reference with count 35
2017-08-17 17:40:01,649 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,b69ba8f9-6964-4fa6-8171-93dee7616043,34)),74a1bbf5-c6d1-438a-9d49-f30170ae6ca4)
2017-08-17 17:40:01,649 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,b69ba8f9-6964-4fa6-8171-93dee7616043,34)),74a1bbf5-c6d1-438a-9d49-f30170ae6ca4) with count 36
2017-08-17 17:40:01,649 TRACE [main] Person$[Person] - model kept, creating reference with count 36
2017-08-17 17:40:01,649 TRACE [main] Person$[Person] - updating Person(Oleg,None,6c9ad824-505f-480e-ac1f-ef80e863466c)
2017-08-17 17:40:01,649 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,6c9ad824-505f-480e-ac1f-ef80e863466c) with count 37
2017-08-17 17:40:01,651 TRACE [main] Person$[Person] - model kept, creating reference with count 37
2017-08-17 17:40:01,651 TRACE [main] Person$[Person] - updating Person(Oleg2,None,6c9ad824-505f-480e-ac1f-ef80e863466c)
2017-08-17 17:40:01,651 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,6c9ad824-505f-480e-ac1f-ef80e863466c) with count 38
2017-08-17 17:40:01,651 TRACE [main] Person$[Person] - model kept, creating reference with count 38
2017-08-17 17:40:01,651 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,6c9ad824-505f-480e-ac1f-ef80e863466c,37)),d0f540a0-3c0f-42d3-80fb-1a7381085af4)
2017-08-17 17:40:01,652 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,6c9ad824-505f-480e-ac1f-ef80e863466c,37)),d0f540a0-3c0f-42d3-80fb-1a7381085af4) with count 39
2017-08-17 17:40:01,652 TRACE [main] Person$[Person] - model kept, creating reference with count 39
2017-08-17 17:40:01,652 TRACE [main] Person$[Person] - updating Person(Oleg,None,664498d4-d1bb-4106-b568-c5b1b9081014)
2017-08-17 17:40:01,652 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,664498d4-d1bb-4106-b568-c5b1b9081014) with count 40
2017-08-17 17:40:01,652 TRACE [main] Person$[Person] - model kept, creating reference with count 40
2017-08-17 17:40:01,652 TRACE [main] Person$[Person] - updating Person(Oleg2,None,664498d4-d1bb-4106-b568-c5b1b9081014)
2017-08-17 17:40:01,652 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,664498d4-d1bb-4106-b568-c5b1b9081014) with count 41
2017-08-17 17:40:01,653 TRACE [main] Person$[Person] - model kept, creating reference with count 41
2017-08-17 17:40:01,653 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,664498d4-d1bb-4106-b568-c5b1b9081014,40)),339ac631-99da-4f13-85b8-87cada0d4bdf)
2017-08-17 17:40:01,653 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,664498d4-d1bb-4106-b568-c5b1b9081014,40)),339ac631-99da-4f13-85b8-87cada0d4bdf) with count 42
2017-08-17 17:40:01,653 TRACE [main] Person$[Person] - model kept, creating reference with count 42
2017-08-17 17:40:01,653 TRACE [main] Person$[Person] - updating Person(Oleg,None,9e70b237-4653-4e19-8709-adbfee0b9591)
2017-08-17 17:40:01,653 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,9e70b237-4653-4e19-8709-adbfee0b9591) with count 43
2017-08-17 17:40:01,654 TRACE [main] Person$[Person] - model kept, creating reference with count 43
2017-08-17 17:40:01,654 TRACE [main] Person$[Person] - updating Person(Oleg2,None,9e70b237-4653-4e19-8709-adbfee0b9591)
2017-08-17 17:40:01,654 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,9e70b237-4653-4e19-8709-adbfee0b9591) with count 44
2017-08-17 17:40:01,654 TRACE [main] Person$[Person] - model kept, creating reference with count 44
2017-08-17 17:40:01,654 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,9e70b237-4653-4e19-8709-adbfee0b9591,43)),a3ff4fb2-bd98-4afb-906e-a0c3bdc2d7a6)
2017-08-17 17:40:01,654 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,9e70b237-4653-4e19-8709-adbfee0b9591,43)),a3ff4fb2-bd98-4afb-906e-a0c3bdc2d7a6) with count 45
2017-08-17 17:40:01,655 TRACE [main] Person$[Person] - model kept, creating reference with count 45
2017-08-17 17:40:01,655 TRACE [main] Person$[Person] - updating Person(Oleg,None,76302d79-12bf-4b3f-b053-3bb87b2172cf)
2017-08-17 17:40:01,655 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,76302d79-12bf-4b3f-b053-3bb87b2172cf) with count 46
2017-08-17 17:40:01,655 TRACE [main] Person$[Person] - model kept, creating reference with count 46
2017-08-17 17:40:01,655 TRACE [main] Person$[Person] - updating Person(Oleg2,None,76302d79-12bf-4b3f-b053-3bb87b2172cf)
2017-08-17 17:40:01,655 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,76302d79-12bf-4b3f-b053-3bb87b2172cf) with count 47
2017-08-17 17:40:01,656 TRACE [main] Person$[Person] - model kept, creating reference with count 47
2017-08-17 17:40:01,656 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,76302d79-12bf-4b3f-b053-3bb87b2172cf,46)),ea0e670d-33ee-4d9f-9176-c47434a82511)
2017-08-17 17:40:01,656 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,76302d79-12bf-4b3f-b053-3bb87b2172cf,46)),ea0e670d-33ee-4d9f-9176-c47434a82511) with count 48
2017-08-17 17:40:01,656 TRACE [main] Person$[Person] - model kept, creating reference with count 48
2017-08-17 17:40:01,656 TRACE [main] Person$[Person] - updating Person(Oleg,None,8dec3f13-a124-4d67-8904-ab09f828fd7a)
2017-08-17 17:40:01,656 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,8dec3f13-a124-4d67-8904-ab09f828fd7a) with count 49
2017-08-17 17:40:01,656 TRACE [main] Person$[Person] - model kept, creating reference with count 49
2017-08-17 17:40:01,657 TRACE [main] Person$[Person] - updating Person(Oleg2,None,8dec3f13-a124-4d67-8904-ab09f828fd7a)
2017-08-17 17:40:01,657 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,8dec3f13-a124-4d67-8904-ab09f828fd7a) with count 50
2017-08-17 17:40:01,657 TRACE [main] Person$[Person] - model kept, creating reference with count 50
2017-08-17 17:40:01,657 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,8dec3f13-a124-4d67-8904-ab09f828fd7a,49)),7dcd0627-e34b-4ef1-8893-3b5eb865782c)
2017-08-17 17:40:01,657 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,8dec3f13-a124-4d67-8904-ab09f828fd7a,49)),7dcd0627-e34b-4ef1-8893-3b5eb865782c) with count 51
2017-08-17 17:40:01,657 TRACE [main] Person$[Person] - model kept, creating reference with count 51
2017-08-17 17:40:01,658 TRACE [main] Person$[Person] - updating Person(Oleg,None,1cdb5ca4-6c0b-4a3e-8424-523da11c3c68)
2017-08-17 17:40:01,658 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,1cdb5ca4-6c0b-4a3e-8424-523da11c3c68) with count 52
2017-08-17 17:40:01,658 TRACE [main] Person$[Person] - model kept, creating reference with count 52
2017-08-17 17:40:01,658 TRACE [main] Person$[Person] - updating Person(Oleg2,None,1cdb5ca4-6c0b-4a3e-8424-523da11c3c68)
2017-08-17 17:40:01,658 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,1cdb5ca4-6c0b-4a3e-8424-523da11c3c68) with count 53
2017-08-17 17:40:01,658 TRACE [main] Person$[Person] - model kept, creating reference with count 53
2017-08-17 17:40:01,658 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,1cdb5ca4-6c0b-4a3e-8424-523da11c3c68,52)),8e83efcd-0130-45d5-a6d7-d53a8a97e940)
2017-08-17 17:40:01,658 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,1cdb5ca4-6c0b-4a3e-8424-523da11c3c68,52)),8e83efcd-0130-45d5-a6d7-d53a8a97e940) with count 54
2017-08-17 17:40:01,659 TRACE [main] Person$[Person] - model kept, creating reference with count 54
2017-08-17 17:40:01,659 TRACE [main] Person$[Person] - updating Person(Oleg,None,7e34bba3-cf3d-468f-aad0-383cc4b9b5bb)
2017-08-17 17:40:01,659 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,7e34bba3-cf3d-468f-aad0-383cc4b9b5bb) with count 55
2017-08-17 17:40:01,659 TRACE [main] Person$[Person] - model kept, creating reference with count 55
2017-08-17 17:40:01,659 TRACE [main] Person$[Person] - updating Person(Oleg2,None,7e34bba3-cf3d-468f-aad0-383cc4b9b5bb)
2017-08-17 17:40:01,659 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,7e34bba3-cf3d-468f-aad0-383cc4b9b5bb) with count 56
2017-08-17 17:40:01,659 TRACE [main] Person$[Person] - model kept, creating reference with count 56
2017-08-17 17:40:01,660 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,7e34bba3-cf3d-468f-aad0-383cc4b9b5bb,55)),7fab0b05-d6be-4e80-96dc-5bd9a744f551)
2017-08-17 17:40:01,660 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,7e34bba3-cf3d-468f-aad0-383cc4b9b5bb,55)),7fab0b05-d6be-4e80-96dc-5bd9a744f551) with count 57
2017-08-17 17:40:01,660 TRACE [main] Person$[Person] - model kept, creating reference with count 57
2017-08-17 17:40:01,660 TRACE [main] Person$[Person] - updating Person(Oleg,None,4e8441a2-c51a-4433-9e6b-ec3d4f408333)
2017-08-17 17:40:01,660 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,4e8441a2-c51a-4433-9e6b-ec3d4f408333) with count 58
2017-08-17 17:40:01,660 TRACE [main] Person$[Person] - model kept, creating reference with count 58
2017-08-17 17:40:01,660 TRACE [main] Person$[Person] - updating Person(Oleg2,None,4e8441a2-c51a-4433-9e6b-ec3d4f408333)
2017-08-17 17:40:01,661 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,4e8441a2-c51a-4433-9e6b-ec3d4f408333) with count 59
2017-08-17 17:40:01,661 TRACE [main] Person$[Person] - model kept, creating reference with count 59
2017-08-17 17:40:01,661 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,4e8441a2-c51a-4433-9e6b-ec3d4f408333,58)),6fa99ac7-394e-430a-8df6-c631dc00517b)
2017-08-17 17:40:01,661 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,4e8441a2-c51a-4433-9e6b-ec3d4f408333,58)),6fa99ac7-394e-430a-8df6-c631dc00517b) with count 60
2017-08-17 17:40:01,661 TRACE [main] Person$[Person] - model kept, creating reference with count 60
2017-08-17 17:40:01,661 TRACE [main] Person$[Person] - updating Person(Oleg,None,06678b1f-56d3-42a3-9bbe-6e69fa20ca76)
2017-08-17 17:40:01,663 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,06678b1f-56d3-42a3-9bbe-6e69fa20ca76) with count 61
2017-08-17 17:40:01,663 TRACE [main] Person$[Person] - model kept, creating reference with count 61
2017-08-17 17:40:01,663 TRACE [main] Person$[Person] - updating Person(Oleg2,None,06678b1f-56d3-42a3-9bbe-6e69fa20ca76)
2017-08-17 17:40:01,664 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,06678b1f-56d3-42a3-9bbe-6e69fa20ca76) with count 62
2017-08-17 17:40:01,665 TRACE [main] Person$[Person] - model kept, creating reference with count 62
2017-08-17 17:40:01,665 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,06678b1f-56d3-42a3-9bbe-6e69fa20ca76,61)),901b96d1-b547-44da-899d-71cb113e9b38)
2017-08-17 17:40:01,665 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,06678b1f-56d3-42a3-9bbe-6e69fa20ca76,61)),901b96d1-b547-44da-899d-71cb113e9b38) with count 63
2017-08-17 17:40:01,665 TRACE [main] Person$[Person] - model kept, creating reference with count 63
2017-08-17 17:40:01,665 TRACE [main] Person$[Person] - updating Person(Oleg,None,de0990b7-44bc-4ca8-bc09-c44811be04a0)
2017-08-17 17:40:01,666 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,de0990b7-44bc-4ca8-bc09-c44811be04a0) with count 64
2017-08-17 17:40:01,666 TRACE [main] Person$[Person] - model kept, creating reference with count 64
2017-08-17 17:40:01,666 TRACE [main] Person$[Person] - updating Person(Oleg2,None,de0990b7-44bc-4ca8-bc09-c44811be04a0)
2017-08-17 17:40:01,666 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,de0990b7-44bc-4ca8-bc09-c44811be04a0) with count 65
2017-08-17 17:40:01,666 TRACE [main] Person$[Person] - model kept, creating reference with count 65
2017-08-17 17:40:01,667 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,de0990b7-44bc-4ca8-bc09-c44811be04a0,64)),d380368f-9d27-4672-8e1e-d858d1465531)
2017-08-17 17:40:01,667 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,de0990b7-44bc-4ca8-bc09-c44811be04a0,64)),d380368f-9d27-4672-8e1e-d858d1465531) with count 66
2017-08-17 17:40:01,667 TRACE [main] Person$[Person] - model kept, creating reference with count 66
2017-08-17 17:40:01,667 TRACE [main] Person$[Person] - updating Person(Oleg,None,ede84201-d81e-4628-9dc0-03a37d1666ed)
2017-08-17 17:40:01,667 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,ede84201-d81e-4628-9dc0-03a37d1666ed) with count 67
2017-08-17 17:40:01,667 TRACE [main] Person$[Person] - model kept, creating reference with count 67
2017-08-17 17:40:01,667 TRACE [main] Person$[Person] - updating Person(Oleg2,None,ede84201-d81e-4628-9dc0-03a37d1666ed)
2017-08-17 17:40:01,668 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,ede84201-d81e-4628-9dc0-03a37d1666ed) with count 68
2017-08-17 17:40:01,668 TRACE [main] Person$[Person] - model kept, creating reference with count 68
2017-08-17 17:40:01,668 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,ede84201-d81e-4628-9dc0-03a37d1666ed,67)),7f7f99b5-0055-49db-9670-32f1aaa061a2)
2017-08-17 17:40:01,668 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,ede84201-d81e-4628-9dc0-03a37d1666ed,67)),7f7f99b5-0055-49db-9670-32f1aaa061a2) with count 69
2017-08-17 17:40:01,668 TRACE [main] Person$[Person] - model kept, creating reference with count 69
2017-08-17 17:40:01,668 TRACE [main] Person$[Person] - updating Person(Oleg,None,30e74eb0-f895-4414-8fb7-36ae3a2ebf51)
2017-08-17 17:40:01,669 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,30e74eb0-f895-4414-8fb7-36ae3a2ebf51) with count 70
2017-08-17 17:40:01,669 TRACE [main] Person$[Person] - model kept, creating reference with count 70
2017-08-17 17:40:01,669 TRACE [main] Person$[Person] - updating Person(Oleg2,None,30e74eb0-f895-4414-8fb7-36ae3a2ebf51)
2017-08-17 17:40:01,669 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,30e74eb0-f895-4414-8fb7-36ae3a2ebf51) with count 71
2017-08-17 17:40:01,669 TRACE [main] Person$[Person] - model kept, creating reference with count 71
2017-08-17 17:40:01,670 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,30e74eb0-f895-4414-8fb7-36ae3a2ebf51,70)),b7e85611-b467-4b6a-87c1-94fbd63f443b)
2017-08-17 17:40:01,670 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,30e74eb0-f895-4414-8fb7-36ae3a2ebf51,70)),b7e85611-b467-4b6a-87c1-94fbd63f443b) with count 72
2017-08-17 17:40:01,670 TRACE [main] Person$[Person] - model kept, creating reference with count 72
2017-08-17 17:40:01,670 TRACE [main] Person$[Person] - updating Person(Oleg,None,10b6e927-c6d3-4014-b27f-ad3116e11179)
2017-08-17 17:40:01,670 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,10b6e927-c6d3-4014-b27f-ad3116e11179) with count 73
2017-08-17 17:40:01,670 TRACE [main] Person$[Person] - model kept, creating reference with count 73
2017-08-17 17:40:01,670 TRACE [main] Person$[Person] - updating Person(Oleg2,None,10b6e927-c6d3-4014-b27f-ad3116e11179)
2017-08-17 17:40:01,670 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,10b6e927-c6d3-4014-b27f-ad3116e11179) with count 74
2017-08-17 17:40:01,671 TRACE [main] Person$[Person] - model kept, creating reference with count 74
2017-08-17 17:40:01,671 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,10b6e927-c6d3-4014-b27f-ad3116e11179,73)),334cd196-7d05-49b3-8fec-86044b7e45e3)
2017-08-17 17:40:01,671 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,10b6e927-c6d3-4014-b27f-ad3116e11179,73)),334cd196-7d05-49b3-8fec-86044b7e45e3) with count 75
2017-08-17 17:40:01,671 TRACE [main] Person$[Person] - model kept, creating reference with count 75
2017-08-17 17:40:01,671 TRACE [main] Person$[Person] - updating Person(Oleg,None,039a9cf8-de8a-4b33-86e3-56c25deba498)
2017-08-17 17:40:01,671 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,039a9cf8-de8a-4b33-86e3-56c25deba498) with count 76
2017-08-17 17:40:01,671 TRACE [main] Person$[Person] - model kept, creating reference with count 76
2017-08-17 17:40:01,671 TRACE [main] Person$[Person] - updating Person(Oleg2,None,039a9cf8-de8a-4b33-86e3-56c25deba498)
2017-08-17 17:40:01,671 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,039a9cf8-de8a-4b33-86e3-56c25deba498) with count 77
2017-08-17 17:40:01,671 TRACE [main] Person$[Person] - model kept, creating reference with count 77
2017-08-17 17:40:01,672 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,039a9cf8-de8a-4b33-86e3-56c25deba498,76)),8b11e9af-e969-45ef-8400-1f8594afbdb6)
2017-08-17 17:40:01,672 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,039a9cf8-de8a-4b33-86e3-56c25deba498,76)),8b11e9af-e969-45ef-8400-1f8594afbdb6) with count 78
2017-08-17 17:40:01,672 TRACE [main] Person$[Person] - model kept, creating reference with count 78
2017-08-17 17:40:01,672 TRACE [main] Person$[Person] - updating Person(Oleg,None,bd9ead6b-3150-4a50-9bd3-2b5ffdb916af)
2017-08-17 17:40:01,672 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,bd9ead6b-3150-4a50-9bd3-2b5ffdb916af) with count 79
2017-08-17 17:40:01,672 TRACE [main] Person$[Person] - model kept, creating reference with count 79
2017-08-17 17:40:01,672 TRACE [main] Person$[Person] - updating Person(Oleg2,None,bd9ead6b-3150-4a50-9bd3-2b5ffdb916af)
2017-08-17 17:40:01,673 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,bd9ead6b-3150-4a50-9bd3-2b5ffdb916af) with count 80
2017-08-17 17:40:01,673 TRACE [main] Person$[Person] - model kept, creating reference with count 80
2017-08-17 17:40:01,673 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,bd9ead6b-3150-4a50-9bd3-2b5ffdb916af,79)),90fbae54-e420-42e7-926a-ca3365d5c005)
2017-08-17 17:40:01,673 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,bd9ead6b-3150-4a50-9bd3-2b5ffdb916af,79)),90fbae54-e420-42e7-926a-ca3365d5c005) with count 81
2017-08-17 17:40:01,673 TRACE [main] Person$[Person] - model kept, creating reference with count 81
2017-08-17 17:40:01,673 TRACE [main] Person$[Person] - updating Person(Oleg,None,9547eb6a-716b-4890-8cbd-7f6c98de3a12)
2017-08-17 17:40:01,673 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,9547eb6a-716b-4890-8cbd-7f6c98de3a12) with count 82
2017-08-17 17:40:01,673 TRACE [main] Person$[Person] - model kept, creating reference with count 82
2017-08-17 17:40:01,674 TRACE [main] Person$[Person] - updating Person(Oleg2,None,9547eb6a-716b-4890-8cbd-7f6c98de3a12)
2017-08-17 17:40:01,674 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,9547eb6a-716b-4890-8cbd-7f6c98de3a12) with count 83
2017-08-17 17:40:01,674 TRACE [main] Person$[Person] - model kept, creating reference with count 83
2017-08-17 17:40:01,674 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,9547eb6a-716b-4890-8cbd-7f6c98de3a12,82)),de5f5b75-8e61-4e00-aac1-4927e9e8360a)
2017-08-17 17:40:01,674 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,9547eb6a-716b-4890-8cbd-7f6c98de3a12,82)),de5f5b75-8e61-4e00-aac1-4927e9e8360a) with count 84
2017-08-17 17:40:01,674 TRACE [main] Person$[Person] - model kept, creating reference with count 84
2017-08-17 17:40:01,674 TRACE [main] Person$[Person] - updating Person(Oleg,None,923532ed-7256-4318-8be3-a1a7637538fd)
2017-08-17 17:40:01,674 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,923532ed-7256-4318-8be3-a1a7637538fd) with count 85
2017-08-17 17:40:01,675 TRACE [main] Person$[Person] - model kept, creating reference with count 85
2017-08-17 17:40:01,675 TRACE [main] Person$[Person] - updating Person(Oleg2,None,923532ed-7256-4318-8be3-a1a7637538fd)
2017-08-17 17:40:01,675 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,923532ed-7256-4318-8be3-a1a7637538fd) with count 86
2017-08-17 17:40:01,675 TRACE [main] Person$[Person] - model kept, creating reference with count 86
2017-08-17 17:40:01,675 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,923532ed-7256-4318-8be3-a1a7637538fd,85)),8fd793f0-eb2b-4185-ae30-408ffff9eaa0)
2017-08-17 17:40:01,675 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,923532ed-7256-4318-8be3-a1a7637538fd,85)),8fd793f0-eb2b-4185-ae30-408ffff9eaa0) with count 87
2017-08-17 17:40:01,675 TRACE [main] Person$[Person] - model kept, creating reference with count 87
2017-08-17 17:40:01,675 TRACE [main] Person$[Person] - updating Person(Oleg,None,8178ca34-45e1-4fff-9b09-82c783a2f74b)
2017-08-17 17:40:01,676 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,8178ca34-45e1-4fff-9b09-82c783a2f74b) with count 88
2017-08-17 17:40:01,676 TRACE [main] Person$[Person] - model kept, creating reference with count 88
2017-08-17 17:40:01,676 TRACE [main] Person$[Person] - updating Person(Oleg2,None,8178ca34-45e1-4fff-9b09-82c783a2f74b)
2017-08-17 17:40:01,676 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,8178ca34-45e1-4fff-9b09-82c783a2f74b) with count 89
2017-08-17 17:40:01,676 TRACE [main] Person$[Person] - model kept, creating reference with count 89
2017-08-17 17:40:01,676 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,8178ca34-45e1-4fff-9b09-82c783a2f74b,88)),3dd96e4f-4c41-4c40-802d-3f2b6f83e137)
2017-08-17 17:40:01,676 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,8178ca34-45e1-4fff-9b09-82c783a2f74b,88)),3dd96e4f-4c41-4c40-802d-3f2b6f83e137) with count 90
2017-08-17 17:40:01,676 TRACE [main] Person$[Person] - model kept, creating reference with count 90
2017-08-17 17:40:02,676 INFO  [main] Counter[Person] - counter is 90
2017-08-17 17:40:02,679 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(9547eb6a-716b-4890-8cbd-7f6c98de3a12,Map(82 -> Person(Oleg,None,9547eb6a-716b-4890-8cbd-7f6c98de3a12), 83 -> Person(Oleg2,None,9547eb6a-716b-4890-8cbd-7f6c98de3a12)))
	(039a9cf8-de8a-4b33-86e3-56c25deba498,Map(76 -> Person(Oleg,None,039a9cf8-de8a-4b33-86e3-56c25deba498), 77 -> Person(Oleg2,None,039a9cf8-de8a-4b33-86e3-56c25deba498)))
	(8fd793f0-eb2b-4185-ae30-408ffff9eaa0,Map(87 -> Person(Igor,Some(Reference(class models.Person,923532ed-7256-4318-8be3-a1a7637538fd,85)),8fd793f0-eb2b-4185-ae30-408ffff9eaa0)))
	(b7e85611-b467-4b6a-87c1-94fbd63f443b,Map(72 -> Person(Igor,Some(Reference(class models.Person,30e74eb0-f895-4414-8fb7-36ae3a2ebf51,70)),b7e85611-b467-4b6a-87c1-94fbd63f443b)))
	(9e70b237-4653-4e19-8709-adbfee0b9591,Map(43 -> Person(Oleg,None,9e70b237-4653-4e19-8709-adbfee0b9591), 44 -> Person(Oleg2,None,9e70b237-4653-4e19-8709-adbfee0b9591)))
	(923532ed-7256-4318-8be3-a1a7637538fd,Map(85 -> Person(Oleg,None,923532ed-7256-4318-8be3-a1a7637538fd), 86 -> Person(Oleg2,None,923532ed-7256-4318-8be3-a1a7637538fd)))
	(e1626662-e53a-4d53-8c68-2034d05450af,Map(18 -> Person(Igor,Some(Reference(class models.Person,d8dc3f70-ad84-48b3-8d24-43ffbdabb0ef,16)),e1626662-e53a-4d53-8c68-2034d05450af)))
	(b39f4251-b4eb-4a5b-8c43-27d230e41f1b,Map(13 -> Person(Oleg,None,b39f4251-b4eb-4a5b-8c43-27d230e41f1b), 14 -> Person(Oleg2,None,b39f4251-b4eb-4a5b-8c43-27d230e41f1b)))
	(7e34bba3-cf3d-468f-aad0-383cc4b9b5bb,Map(55 -> Person(Oleg,None,7e34bba3-cf3d-468f-aad0-383cc4b9b5bb), 56 -> Person(Oleg2,None,7e34bba3-cf3d-468f-aad0-383cc4b9b5bb)))
	(6fa99ac7-394e-430a-8df6-c631dc00517b,Map(60 -> Person(Igor,Some(Reference(class models.Person,4e8441a2-c51a-4433-9e6b-ec3d4f408333,58)),6fa99ac7-394e-430a-8df6-c631dc00517b)))
	(de21f354-3d5a-4062-9cd5-659e64af0176,Map(15 -> Person(Igor,Some(Reference(class models.Person,b39f4251-b4eb-4a5b-8c43-27d230e41f1b,13)),de21f354-3d5a-4062-9cd5-659e64af0176)))
	(74a1bbf5-c6d1-438a-9d49-f30170ae6ca4,Map(36 -> Person(Igor,Some(Reference(class models.Person,b69ba8f9-6964-4fa6-8171-93dee7616043,34)),74a1bbf5-c6d1-438a-9d49-f30170ae6ca4)))
	(25d942d9-fef3-43cf-a85b-5f762c34d6e1,Map(33 -> Person(Igor,Some(Reference(class models.Person,41fa9023-449f-4596-a1ca-540fc3bdf377,31)),25d942d9-fef3-43cf-a85b-5f762c34d6e1)))
	(3dd96e4f-4c41-4c40-802d-3f2b6f83e137,Map(90 -> Person(Igor,Some(Reference(class models.Person,8178ca34-45e1-4fff-9b09-82c783a2f74b,88)),3dd96e4f-4c41-4c40-802d-3f2b6f83e137)))
	(a0a41d1e-d835-401b-9314-4f475f7a9437,Map(24 -> Person(Igor,Some(Reference(class models.Person,cc1fe27e-cd6c-43d4-92e1-11676ce4f03a,22)),a0a41d1e-d835-401b-9314-4f475f7a9437)))
	(369bb701-3bf5-4791-9ed2-99db4ed70a8c,Map(9 -> Person(Igor,Some(Reference(class models.Person,190e0d9e-dd9f-4441-be84-41f969fa1895,7)),369bb701-3bf5-4791-9ed2-99db4ed70a8c)))
	(6a550146-989b-481e-8b04-92c4aa0b6544,Map(28 -> Person(Oleg,None,6a550146-989b-481e-8b04-92c4aa0b6544), 29 -> Person(Oleg2,None,6a550146-989b-481e-8b04-92c4aa0b6544)))
	(de0990b7-44bc-4ca8-bc09-c44811be04a0,Map(64 -> Person(Oleg,None,de0990b7-44bc-4ca8-bc09-c44811be04a0), 65 -> Person(Oleg2,None,de0990b7-44bc-4ca8-bc09-c44811be04a0)))
	(8dec3f13-a124-4d67-8904-ab09f828fd7a,Map(49 -> Person(Oleg,None,8dec3f13-a124-4d67-8904-ab09f828fd7a), 50 -> Person(Oleg2,None,8dec3f13-a124-4d67-8904-ab09f828fd7a)))
	(334cd196-7d05-49b3-8fec-86044b7e45e3,Map(75 -> Person(Igor,Some(Reference(class models.Person,10b6e927-c6d3-4014-b27f-ad3116e11179,73)),334cd196-7d05-49b3-8fec-86044b7e45e3)))
	(c6d8cbb9-8499-4c20-97c0-b6a465f2fcfa,Map(4 -> Person(Oleg,None,c6d8cbb9-8499-4c20-97c0-b6a465f2fcfa), 5 -> Person(Oleg2,None,c6d8cbb9-8499-4c20-97c0-b6a465f2fcfa)))
	(339ac631-99da-4f13-85b8-87cada0d4bdf,Map(42 -> Person(Igor,Some(Reference(class models.Person,664498d4-d1bb-4106-b568-c5b1b9081014,40)),339ac631-99da-4f13-85b8-87cada0d4bdf)))
	(de5f5b75-8e61-4e00-aac1-4927e9e8360a,Map(84 -> Person(Igor,Some(Reference(class models.Person,9547eb6a-716b-4890-8cbd-7f6c98de3a12,82)),de5f5b75-8e61-4e00-aac1-4927e9e8360a)))
	(8b11e9af-e969-45ef-8400-1f8594afbdb6,Map(78 -> Person(Igor,Some(Reference(class models.Person,039a9cf8-de8a-4b33-86e3-56c25deba498,76)),8b11e9af-e969-45ef-8400-1f8594afbdb6)))
	(7dcd0627-e34b-4ef1-8893-3b5eb865782c,Map(51 -> Person(Igor,Some(Reference(class models.Person,8dec3f13-a124-4d67-8904-ab09f828fd7a,49)),7dcd0627-e34b-4ef1-8893-3b5eb865782c)))
	(41fa9023-449f-4596-a1ca-540fc3bdf377,Map(31 -> Person(Oleg,None,41fa9023-449f-4596-a1ca-540fc3bdf377), 32 -> Person(Oleg2,None,41fa9023-449f-4596-a1ca-540fc3bdf377)))
	(d0f540a0-3c0f-42d3-80fb-1a7381085af4,Map(39 -> Person(Igor,Some(Reference(class models.Person,6c9ad824-505f-480e-ac1f-ef80e863466c,37)),d0f540a0-3c0f-42d3-80fb-1a7381085af4)))
	(e601575a-1c46-4a90-9e73-a31181aa12f4,Map(19 -> Person(Oleg,None,e601575a-1c46-4a90-9e73-a31181aa12f4), 20 -> Person(Oleg2,None,e601575a-1c46-4a90-9e73-a31181aa12f4)))
	(62d7de73-3600-4724-bdc7-d010aa0d3166,Map(10 -> Person(Oleg,None,62d7de73-3600-4724-bdc7-d010aa0d3166), 11 -> Person(Oleg2,None,62d7de73-3600-4724-bdc7-d010aa0d3166)))
	(7f7f99b5-0055-49db-9670-32f1aaa061a2,Map(69 -> Person(Igor,Some(Reference(class models.Person,ede84201-d81e-4628-9dc0-03a37d1666ed,67)),7f7f99b5-0055-49db-9670-32f1aaa061a2)))
	(76302d79-12bf-4b3f-b053-3bb87b2172cf,Map(46 -> Person(Oleg,None,76302d79-12bf-4b3f-b053-3bb87b2172cf), 47 -> Person(Oleg2,None,76302d79-12bf-4b3f-b053-3bb87b2172cf)))
	(b69ba8f9-6964-4fa6-8171-93dee7616043,Map(34 -> Person(Oleg,None,b69ba8f9-6964-4fa6-8171-93dee7616043), 35 -> Person(Oleg2,None,b69ba8f9-6964-4fa6-8171-93dee7616043)))
	(06678b1f-56d3-42a3-9bbe-6e69fa20ca76,Map(61 -> Person(Oleg,None,06678b1f-56d3-42a3-9bbe-6e69fa20ca76), 62 -> Person(Oleg2,None,06678b1f-56d3-42a3-9bbe-6e69fa20ca76)))
	(ba196dda-d393-4cb9-98ab-9d726c62f79c,Map(30 -> Person(Igor,Some(Reference(class models.Person,6a550146-989b-481e-8b04-92c4aa0b6544,28)),ba196dda-d393-4cb9-98ab-9d726c62f79c)))
	(2e197317-9eb6-4442-9ce8-45e2849b30ff,Map(3 -> Person(Igor,Some(Reference(class models.Person,77a37a51-7980-4682-9b50-9e21c1d607cf,1)),2e197317-9eb6-4442-9ce8-45e2849b30ff)))
	(d8dc3f70-ad84-48b3-8d24-43ffbdabb0ef,Map(16 -> Person(Oleg,None,d8dc3f70-ad84-48b3-8d24-43ffbdabb0ef), 17 -> Person(Oleg2,None,d8dc3f70-ad84-48b3-8d24-43ffbdabb0ef)))
	(10b6e927-c6d3-4014-b27f-ad3116e11179,Map(73 -> Person(Oleg,None,10b6e927-c6d3-4014-b27f-ad3116e11179), 74 -> Person(Oleg2,None,10b6e927-c6d3-4014-b27f-ad3116e11179)))
	(ea0e670d-33ee-4d9f-9176-c47434a82511,Map(48 -> Person(Igor,Some(Reference(class models.Person,76302d79-12bf-4b3f-b053-3bb87b2172cf,46)),ea0e670d-33ee-4d9f-9176-c47434a82511)))
	(664498d4-d1bb-4106-b568-c5b1b9081014,Map(40 -> Person(Oleg,None,664498d4-d1bb-4106-b568-c5b1b9081014), 41 -> Person(Oleg2,None,664498d4-d1bb-4106-b568-c5b1b9081014)))
	(901b96d1-b547-44da-899d-71cb113e9b38,Map(63 -> Person(Igor,Some(Reference(class models.Person,06678b1f-56d3-42a3-9bbe-6e69fa20ca76,61)),901b96d1-b547-44da-899d-71cb113e9b38)))
	(bd9ead6b-3150-4a50-9bd3-2b5ffdb916af,Map(79 -> Person(Oleg,None,bd9ead6b-3150-4a50-9bd3-2b5ffdb916af), 80 -> Person(Oleg2,None,bd9ead6b-3150-4a50-9bd3-2b5ffdb916af)))
	(190e0d9e-dd9f-4441-be84-41f969fa1895,Map(7 -> Person(Oleg,None,190e0d9e-dd9f-4441-be84-41f969fa1895), 8 -> Person(Oleg2,None,190e0d9e-dd9f-4441-be84-41f969fa1895)))
	(1cdb5ca4-6c0b-4a3e-8424-523da11c3c68,Map(52 -> Person(Oleg,None,1cdb5ca4-6c0b-4a3e-8424-523da11c3c68), 53 -> Person(Oleg2,None,1cdb5ca4-6c0b-4a3e-8424-523da11c3c68)))
	(30e74eb0-f895-4414-8fb7-36ae3a2ebf51,Map(70 -> Person(Oleg,None,30e74eb0-f895-4414-8fb7-36ae3a2ebf51), 71 -> Person(Oleg2,None,30e74eb0-f895-4414-8fb7-36ae3a2ebf51)))
	(4e8441a2-c51a-4433-9e6b-ec3d4f408333,Map(58 -> Person(Oleg,None,4e8441a2-c51a-4433-9e6b-ec3d4f408333), 59 -> Person(Oleg2,None,4e8441a2-c51a-4433-9e6b-ec3d4f408333)))
	(ee3af41b-5f0b-4299-9727-8047ae9ea569,Map(25 -> Person(Oleg,None,ee3af41b-5f0b-4299-9727-8047ae9ea569), 26 -> Person(Oleg2,None,ee3af41b-5f0b-4299-9727-8047ae9ea569)))
	(90fbae54-e420-42e7-926a-ca3365d5c005,Map(81 -> Person(Igor,Some(Reference(class models.Person,bd9ead6b-3150-4a50-9bd3-2b5ffdb916af,79)),90fbae54-e420-42e7-926a-ca3365d5c005)))
	(7fab0b05-d6be-4e80-96dc-5bd9a744f551,Map(57 -> Person(Igor,Some(Reference(class models.Person,7e34bba3-cf3d-468f-aad0-383cc4b9b5bb,55)),7fab0b05-d6be-4e80-96dc-5bd9a744f551)))
	(8178ca34-45e1-4fff-9b09-82c783a2f74b,Map(88 -> Person(Oleg,None,8178ca34-45e1-4fff-9b09-82c783a2f74b), 89 -> Person(Oleg2,None,8178ca34-45e1-4fff-9b09-82c783a2f74b)))
	(ede84201-d81e-4628-9dc0-03a37d1666ed,Map(67 -> Person(Oleg,None,ede84201-d81e-4628-9dc0-03a37d1666ed), 68 -> Person(Oleg2,None,ede84201-d81e-4628-9dc0-03a37d1666ed)))
	(a3ff4fb2-bd98-4afb-906e-a0c3bdc2d7a6,Map(45 -> Person(Igor,Some(Reference(class models.Person,9e70b237-4653-4e19-8709-adbfee0b9591,43)),a3ff4fb2-bd98-4afb-906e-a0c3bdc2d7a6)))
	(4a978546-66d4-43af-b1de-4d79db651165,Map(21 -> Person(Igor,Some(Reference(class models.Person,e601575a-1c46-4a90-9e73-a31181aa12f4,19)),4a978546-66d4-43af-b1de-4d79db651165)))
	(cc1fe27e-cd6c-43d4-92e1-11676ce4f03a,Map(22 -> Person(Oleg,None,cc1fe27e-cd6c-43d4-92e1-11676ce4f03a), 23 -> Person(Oleg2,None,cc1fe27e-cd6c-43d4-92e1-11676ce4f03a)))
	(2cccf01d-6755-4536-95b7-67edb74aae98,Map(12 -> Person(Igor,Some(Reference(class models.Person,62d7de73-3600-4724-bdc7-d010aa0d3166,10)),2cccf01d-6755-4536-95b7-67edb74aae98)))
	(6c9ad824-505f-480e-ac1f-ef80e863466c,Map(37 -> Person(Oleg,None,6c9ad824-505f-480e-ac1f-ef80e863466c), 38 -> Person(Oleg2,None,6c9ad824-505f-480e-ac1f-ef80e863466c)))
	(8e83efcd-0130-45d5-a6d7-d53a8a97e940,Map(54 -> Person(Igor,Some(Reference(class models.Person,1cdb5ca4-6c0b-4a3e-8424-523da11c3c68,52)),8e83efcd-0130-45d5-a6d7-d53a8a97e940)))
	(ffc0bcfc-db05-4bb2-99bd-f96972f98d38,Map(27 -> Person(Igor,Some(Reference(class models.Person,ee3af41b-5f0b-4299-9727-8047ae9ea569,25)),ffc0bcfc-db05-4bb2-99bd-f96972f98d38)))
	(d380368f-9d27-4672-8e1e-d858d1465531,Map(66 -> Person(Igor,Some(Reference(class models.Person,de0990b7-44bc-4ca8-bc09-c44811be04a0,64)),d380368f-9d27-4672-8e1e-d858d1465531)))
	(77a37a51-7980-4682-9b50-9e21c1d607cf,Map(1 -> Person(Oleg,None,77a37a51-7980-4682-9b50-9e21c1d607cf), 2 -> Person(Oleg2,None,77a37a51-7980-4682-9b50-9e21c1d607cf)))
	(4aab2d58-4248-44cb-a7d0-555cd183e73b,Map(6 -> Person(Igor,Some(Reference(class models.Person,c6d8cbb9-8499-4c20-97c0-b6a465f2fcfa,4)),4aab2d58-4248-44cb-a7d0-555cd183e73b)))

2017-08-17 17:40:09,700 TRACE [main] Person$[Person] - updating Person(Oleg,None,771a1633-7d88-485f-b3eb-f684892be798)
2017-08-17 17:40:09,722 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,771a1633-7d88-485f-b3eb-f684892be798) with count 1
2017-08-17 17:40:09,734 TRACE [main] Person$[Person] - model kept, creating reference with count 1
2017-08-17 17:40:09,736 TRACE [main] Person$[Person] - updating Person(Oleg2,None,771a1633-7d88-485f-b3eb-f684892be798)
2017-08-17 17:40:09,736 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,771a1633-7d88-485f-b3eb-f684892be798) with count 2
2017-08-17 17:40:09,736 TRACE [main] Person$[Person] - model kept, creating reference with count 2
2017-08-17 17:40:09,736 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,771a1633-7d88-485f-b3eb-f684892be798,1)),6341c37d-04d0-4c36-85bb-a81a881db88b)
2017-08-17 17:40:09,737 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,771a1633-7d88-485f-b3eb-f684892be798,1)),6341c37d-04d0-4c36-85bb-a81a881db88b) with count 3
2017-08-17 17:40:09,737 TRACE [main] Person$[Person] - model kept, creating reference with count 3
2017-08-17 17:40:09,737 TRACE [main] Person$[Person] - updating Person(Oleg,None,c1ce3661-14b8-4f71-b2b3-b0f9a295235a)
2017-08-17 17:40:09,737 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,c1ce3661-14b8-4f71-b2b3-b0f9a295235a) with count 4
2017-08-17 17:40:09,737 TRACE [main] Person$[Person] - model kept, creating reference with count 4
2017-08-17 17:40:09,737 TRACE [main] Person$[Person] - updating Person(Oleg2,None,c1ce3661-14b8-4f71-b2b3-b0f9a295235a)
2017-08-17 17:40:09,737 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,c1ce3661-14b8-4f71-b2b3-b0f9a295235a) with count 5
2017-08-17 17:40:09,737 TRACE [main] Person$[Person] - model kept, creating reference with count 5
2017-08-17 17:40:09,737 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,c1ce3661-14b8-4f71-b2b3-b0f9a295235a,4)),ac458c4a-0cd6-46d9-a327-87cc9135ca2a)
2017-08-17 17:40:09,737 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,c1ce3661-14b8-4f71-b2b3-b0f9a295235a,4)),ac458c4a-0cd6-46d9-a327-87cc9135ca2a) with count 6
2017-08-17 17:40:09,738 TRACE [main] Person$[Person] - model kept, creating reference with count 6
2017-08-17 17:40:09,738 TRACE [main] Person$[Person] - updating Person(Oleg,None,ebe05469-b1b4-4dbc-9f41-66e1d7ecba5a)
2017-08-17 17:40:09,738 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,ebe05469-b1b4-4dbc-9f41-66e1d7ecba5a) with count 7
2017-08-17 17:40:09,738 TRACE [main] Person$[Person] - model kept, creating reference with count 7
2017-08-17 17:40:09,738 TRACE [main] Person$[Person] - updating Person(Oleg2,None,ebe05469-b1b4-4dbc-9f41-66e1d7ecba5a)
2017-08-17 17:40:09,738 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,ebe05469-b1b4-4dbc-9f41-66e1d7ecba5a) with count 8
2017-08-17 17:40:09,738 TRACE [main] Person$[Person] - model kept, creating reference with count 8
2017-08-17 17:40:09,738 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,ebe05469-b1b4-4dbc-9f41-66e1d7ecba5a,7)),dc7596c8-ed9d-436d-ba87-a7faf21e95c0)
2017-08-17 17:40:09,738 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,ebe05469-b1b4-4dbc-9f41-66e1d7ecba5a,7)),dc7596c8-ed9d-436d-ba87-a7faf21e95c0) with count 9
2017-08-17 17:40:09,738 TRACE [main] Person$[Person] - model kept, creating reference with count 9
2017-08-17 17:40:09,739 TRACE [main] Person$[Person] - updating Person(Oleg,None,7207b95a-a926-45fb-9fc0-f90be358bde8)
2017-08-17 17:40:09,739 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,7207b95a-a926-45fb-9fc0-f90be358bde8) with count 10
2017-08-17 17:40:09,739 TRACE [main] Person$[Person] - model kept, creating reference with count 10
2017-08-17 17:40:09,739 TRACE [main] Person$[Person] - updating Person(Oleg2,None,7207b95a-a926-45fb-9fc0-f90be358bde8)
2017-08-17 17:40:09,739 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,7207b95a-a926-45fb-9fc0-f90be358bde8) with count 11
2017-08-17 17:40:09,739 TRACE [main] Person$[Person] - model kept, creating reference with count 11
2017-08-17 17:40:09,739 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,7207b95a-a926-45fb-9fc0-f90be358bde8,10)),bc9bfd61-2a98-4c2d-a6f0-4d9726f4fa46)
2017-08-17 17:40:09,739 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,7207b95a-a926-45fb-9fc0-f90be358bde8,10)),bc9bfd61-2a98-4c2d-a6f0-4d9726f4fa46) with count 12
2017-08-17 17:40:09,739 TRACE [main] Person$[Person] - model kept, creating reference with count 12
2017-08-17 17:40:09,739 TRACE [main] Person$[Person] - updating Person(Oleg,None,351e2185-bc41-463c-a4af-24140b00cf43)
2017-08-17 17:40:09,739 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,351e2185-bc41-463c-a4af-24140b00cf43) with count 13
2017-08-17 17:40:09,739 TRACE [main] Person$[Person] - model kept, creating reference with count 13
2017-08-17 17:40:09,740 TRACE [main] Person$[Person] - updating Person(Oleg2,None,351e2185-bc41-463c-a4af-24140b00cf43)
2017-08-17 17:40:09,740 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,351e2185-bc41-463c-a4af-24140b00cf43) with count 14
2017-08-17 17:40:09,740 TRACE [main] Person$[Person] - model kept, creating reference with count 14
2017-08-17 17:40:09,740 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,351e2185-bc41-463c-a4af-24140b00cf43,13)),428ea93e-8a9c-49f3-83a2-4dbf432319ac)
2017-08-17 17:40:09,740 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,351e2185-bc41-463c-a4af-24140b00cf43,13)),428ea93e-8a9c-49f3-83a2-4dbf432319ac) with count 15
2017-08-17 17:40:09,740 TRACE [main] Person$[Person] - model kept, creating reference with count 15
2017-08-17 17:40:09,740 TRACE [main] Person$[Person] - updating Person(Oleg,None,5fe71bd4-9e78-4736-9838-ae6364252ce8)
2017-08-17 17:40:09,740 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,5fe71bd4-9e78-4736-9838-ae6364252ce8) with count 16
2017-08-17 17:40:09,740 TRACE [main] Person$[Person] - model kept, creating reference with count 16
2017-08-17 17:40:09,740 TRACE [main] Person$[Person] - updating Person(Oleg2,None,5fe71bd4-9e78-4736-9838-ae6364252ce8)
2017-08-17 17:40:09,740 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,5fe71bd4-9e78-4736-9838-ae6364252ce8) with count 17
2017-08-17 17:40:09,740 TRACE [main] Person$[Person] - model kept, creating reference with count 17
2017-08-17 17:40:09,740 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,5fe71bd4-9e78-4736-9838-ae6364252ce8,16)),7d536197-2cfa-4e7f-8c92-3f3c5916826e)
2017-08-17 17:40:09,741 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,5fe71bd4-9e78-4736-9838-ae6364252ce8,16)),7d536197-2cfa-4e7f-8c92-3f3c5916826e) with count 18
2017-08-17 17:40:09,741 TRACE [main] Person$[Person] - model kept, creating reference with count 18
2017-08-17 17:40:09,741 TRACE [main] Person$[Person] - updating Person(Oleg,None,e81cb405-ebe7-459e-baf0-2543726c9032)
2017-08-17 17:40:09,741 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,e81cb405-ebe7-459e-baf0-2543726c9032) with count 19
2017-08-17 17:40:09,741 TRACE [main] Person$[Person] - model kept, creating reference with count 19
2017-08-17 17:40:09,741 TRACE [main] Person$[Person] - updating Person(Oleg2,None,e81cb405-ebe7-459e-baf0-2543726c9032)
2017-08-17 17:40:09,741 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,e81cb405-ebe7-459e-baf0-2543726c9032) with count 20
2017-08-17 17:40:09,741 TRACE [main] Person$[Person] - model kept, creating reference with count 20
2017-08-17 17:40:09,741 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,e81cb405-ebe7-459e-baf0-2543726c9032,19)),e7145aa4-9369-47bc-a0fd-9fa1b5ee8ea8)
2017-08-17 17:40:09,741 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,e81cb405-ebe7-459e-baf0-2543726c9032,19)),e7145aa4-9369-47bc-a0fd-9fa1b5ee8ea8) with count 21
2017-08-17 17:40:09,741 TRACE [main] Person$[Person] - model kept, creating reference with count 21
2017-08-17 17:40:09,741 TRACE [main] Person$[Person] - updating Person(Oleg,None,49beba30-1b9e-4947-8358-ff6004b896bb)
2017-08-17 17:40:09,741 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,49beba30-1b9e-4947-8358-ff6004b896bb) with count 22
2017-08-17 17:40:09,742 TRACE [main] Person$[Person] - model kept, creating reference with count 22
2017-08-17 17:40:09,742 TRACE [main] Person$[Person] - updating Person(Oleg2,None,49beba30-1b9e-4947-8358-ff6004b896bb)
2017-08-17 17:40:09,742 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,49beba30-1b9e-4947-8358-ff6004b896bb) with count 23
2017-08-17 17:40:09,742 TRACE [main] Person$[Person] - model kept, creating reference with count 23
2017-08-17 17:40:09,742 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,49beba30-1b9e-4947-8358-ff6004b896bb,22)),03e9b2f6-e06f-4ec2-8e56-199e981fc190)
2017-08-17 17:40:09,742 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,49beba30-1b9e-4947-8358-ff6004b896bb,22)),03e9b2f6-e06f-4ec2-8e56-199e981fc190) with count 24
2017-08-17 17:40:09,742 TRACE [main] Person$[Person] - model kept, creating reference with count 24
2017-08-17 17:40:09,743 TRACE [main] Person$[Person] - updating Person(Oleg,None,58af8748-c4ae-4099-b69e-f781586cbf1f)
2017-08-17 17:40:09,743 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,58af8748-c4ae-4099-b69e-f781586cbf1f) with count 25
2017-08-17 17:40:09,743 TRACE [main] Person$[Person] - model kept, creating reference with count 25
2017-08-17 17:40:09,743 TRACE [main] Person$[Person] - updating Person(Oleg2,None,58af8748-c4ae-4099-b69e-f781586cbf1f)
2017-08-17 17:40:09,743 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,58af8748-c4ae-4099-b69e-f781586cbf1f) with count 26
2017-08-17 17:40:09,743 TRACE [main] Person$[Person] - model kept, creating reference with count 26
2017-08-17 17:40:09,743 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,58af8748-c4ae-4099-b69e-f781586cbf1f,25)),3964294f-85c7-4a56-b62c-cb97eb78b5c9)
2017-08-17 17:40:09,743 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,58af8748-c4ae-4099-b69e-f781586cbf1f,25)),3964294f-85c7-4a56-b62c-cb97eb78b5c9) with count 27
2017-08-17 17:40:09,744 TRACE [main] Person$[Person] - model kept, creating reference with count 27
2017-08-17 17:40:09,744 TRACE [main] Person$[Person] - updating Person(Oleg,None,844509a9-b508-4ee4-bcb7-5e0c993da12d)
2017-08-17 17:40:09,744 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,844509a9-b508-4ee4-bcb7-5e0c993da12d) with count 28
2017-08-17 17:40:09,744 TRACE [main] Person$[Person] - model kept, creating reference with count 28
2017-08-17 17:40:09,744 TRACE [main] Person$[Person] - updating Person(Oleg2,None,844509a9-b508-4ee4-bcb7-5e0c993da12d)
2017-08-17 17:40:09,744 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,844509a9-b508-4ee4-bcb7-5e0c993da12d) with count 29
2017-08-17 17:40:09,744 TRACE [main] Person$[Person] - model kept, creating reference with count 29
2017-08-17 17:40:09,744 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,844509a9-b508-4ee4-bcb7-5e0c993da12d,28)),f46f7d17-f273-4f42-a62c-28f6c0c3c236)
2017-08-17 17:40:09,744 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,844509a9-b508-4ee4-bcb7-5e0c993da12d,28)),f46f7d17-f273-4f42-a62c-28f6c0c3c236) with count 30
2017-08-17 17:40:09,745 TRACE [main] Person$[Person] - model kept, creating reference with count 30
2017-08-17 17:40:09,745 TRACE [main] Person$[Person] - updating Person(Oleg,None,24931094-f405-4242-ab05-90a9eb9cdc56)
2017-08-17 17:40:09,745 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,24931094-f405-4242-ab05-90a9eb9cdc56) with count 31
2017-08-17 17:40:09,745 TRACE [main] Person$[Person] - model kept, creating reference with count 31
2017-08-17 17:40:09,745 TRACE [main] Person$[Person] - updating Person(Oleg2,None,24931094-f405-4242-ab05-90a9eb9cdc56)
2017-08-17 17:40:09,745 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,24931094-f405-4242-ab05-90a9eb9cdc56) with count 32
2017-08-17 17:40:09,745 TRACE [main] Person$[Person] - model kept, creating reference with count 32
2017-08-17 17:40:09,745 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,24931094-f405-4242-ab05-90a9eb9cdc56,31)),37369201-19de-42c0-b300-f88d64843dcf)
2017-08-17 17:40:09,745 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,24931094-f405-4242-ab05-90a9eb9cdc56,31)),37369201-19de-42c0-b300-f88d64843dcf) with count 33
2017-08-17 17:40:09,746 TRACE [main] Person$[Person] - model kept, creating reference with count 33
2017-08-17 17:40:09,746 TRACE [main] Person$[Person] - updating Person(Oleg,None,42f4aa65-6e64-434f-ab53-d717f366b446)
2017-08-17 17:40:09,746 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,42f4aa65-6e64-434f-ab53-d717f366b446) with count 34
2017-08-17 17:40:09,746 TRACE [main] Person$[Person] - model kept, creating reference with count 34
2017-08-17 17:40:09,746 TRACE [main] Person$[Person] - updating Person(Oleg2,None,42f4aa65-6e64-434f-ab53-d717f366b446)
2017-08-17 17:40:09,746 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,42f4aa65-6e64-434f-ab53-d717f366b446) with count 35
2017-08-17 17:40:09,746 TRACE [main] Person$[Person] - model kept, creating reference with count 35
2017-08-17 17:40:09,747 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,42f4aa65-6e64-434f-ab53-d717f366b446,34)),304c65c2-b931-4a23-9af0-08dca2bee49a)
2017-08-17 17:40:09,747 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,42f4aa65-6e64-434f-ab53-d717f366b446,34)),304c65c2-b931-4a23-9af0-08dca2bee49a) with count 36
2017-08-17 17:40:09,747 TRACE [main] Person$[Person] - model kept, creating reference with count 36
2017-08-17 17:40:09,747 TRACE [main] Person$[Person] - updating Person(Oleg,None,2efc486d-97ac-4a5b-9171-2903fafb5edf)
2017-08-17 17:40:09,747 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,2efc486d-97ac-4a5b-9171-2903fafb5edf) with count 37
2017-08-17 17:40:09,747 TRACE [main] Person$[Person] - model kept, creating reference with count 37
2017-08-17 17:40:09,747 TRACE [main] Person$[Person] - updating Person(Oleg2,None,2efc486d-97ac-4a5b-9171-2903fafb5edf)
2017-08-17 17:40:09,747 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,2efc486d-97ac-4a5b-9171-2903fafb5edf) with count 38
2017-08-17 17:40:09,748 TRACE [main] Person$[Person] - model kept, creating reference with count 38
2017-08-17 17:40:09,748 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,2efc486d-97ac-4a5b-9171-2903fafb5edf,37)),03112fcf-0e2f-4c68-9cbf-e22d409452a6)
2017-08-17 17:40:09,748 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,2efc486d-97ac-4a5b-9171-2903fafb5edf,37)),03112fcf-0e2f-4c68-9cbf-e22d409452a6) with count 39
2017-08-17 17:40:09,748 TRACE [main] Person$[Person] - model kept, creating reference with count 39
2017-08-17 17:40:09,748 TRACE [main] Person$[Person] - updating Person(Oleg,None,9ac5a181-499d-4e41-a23e-fd94200d17d2)
2017-08-17 17:40:09,748 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,9ac5a181-499d-4e41-a23e-fd94200d17d2) with count 40
2017-08-17 17:40:09,748 TRACE [main] Person$[Person] - model kept, creating reference with count 40
2017-08-17 17:40:09,749 TRACE [main] Person$[Person] - updating Person(Oleg2,None,9ac5a181-499d-4e41-a23e-fd94200d17d2)
2017-08-17 17:40:09,749 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,9ac5a181-499d-4e41-a23e-fd94200d17d2) with count 41
2017-08-17 17:40:09,749 TRACE [main] Person$[Person] - model kept, creating reference with count 41
2017-08-17 17:40:09,749 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,9ac5a181-499d-4e41-a23e-fd94200d17d2,40)),f6620afa-d0e4-4d8e-a610-2329e454218c)
2017-08-17 17:40:09,749 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,9ac5a181-499d-4e41-a23e-fd94200d17d2,40)),f6620afa-d0e4-4d8e-a610-2329e454218c) with count 42
2017-08-17 17:40:09,749 TRACE [main] Person$[Person] - model kept, creating reference with count 42
2017-08-17 17:40:09,750 TRACE [main] Person$[Person] - updating Person(Oleg,None,f7e009f0-f961-4360-aa86-c662345094d9)
2017-08-17 17:40:09,750 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,f7e009f0-f961-4360-aa86-c662345094d9) with count 43
2017-08-17 17:40:09,750 TRACE [main] Person$[Person] - model kept, creating reference with count 43
2017-08-17 17:40:09,750 TRACE [main] Person$[Person] - updating Person(Oleg2,None,f7e009f0-f961-4360-aa86-c662345094d9)
2017-08-17 17:40:09,750 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,f7e009f0-f961-4360-aa86-c662345094d9) with count 44
2017-08-17 17:40:09,751 TRACE [main] Person$[Person] - model kept, creating reference with count 44
2017-08-17 17:40:09,751 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,f7e009f0-f961-4360-aa86-c662345094d9,43)),c1ca0436-40cd-47d2-8ddf-027c1d4b71f5)
2017-08-17 17:40:09,751 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,f7e009f0-f961-4360-aa86-c662345094d9,43)),c1ca0436-40cd-47d2-8ddf-027c1d4b71f5) with count 45
2017-08-17 17:40:09,751 TRACE [main] Person$[Person] - model kept, creating reference with count 45
2017-08-17 17:40:09,751 TRACE [main] Person$[Person] - updating Person(Oleg,None,092d28d1-c194-4a09-9b2c-86dca3fea01b)
2017-08-17 17:40:09,751 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,092d28d1-c194-4a09-9b2c-86dca3fea01b) with count 46
2017-08-17 17:40:09,752 TRACE [main] Person$[Person] - model kept, creating reference with count 46
2017-08-17 17:40:09,752 TRACE [main] Person$[Person] - updating Person(Oleg2,None,092d28d1-c194-4a09-9b2c-86dca3fea01b)
2017-08-17 17:40:09,752 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,092d28d1-c194-4a09-9b2c-86dca3fea01b) with count 47
2017-08-17 17:40:09,752 TRACE [main] Person$[Person] - model kept, creating reference with count 47
2017-08-17 17:40:09,752 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,092d28d1-c194-4a09-9b2c-86dca3fea01b,46)),1b76549a-a8c1-4a32-aa6d-685d419b423b)
2017-08-17 17:40:09,752 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,092d28d1-c194-4a09-9b2c-86dca3fea01b,46)),1b76549a-a8c1-4a32-aa6d-685d419b423b) with count 48
2017-08-17 17:40:09,752 TRACE [main] Person$[Person] - model kept, creating reference with count 48
2017-08-17 17:40:09,753 TRACE [main] Person$[Person] - updating Person(Oleg,None,7d1d03cd-1417-446d-83b1-18c34f5deaf1)
2017-08-17 17:40:09,753 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,7d1d03cd-1417-446d-83b1-18c34f5deaf1) with count 49
2017-08-17 17:40:09,753 TRACE [main] Person$[Person] - model kept, creating reference with count 49
2017-08-17 17:40:09,753 TRACE [main] Person$[Person] - updating Person(Oleg2,None,7d1d03cd-1417-446d-83b1-18c34f5deaf1)
2017-08-17 17:40:09,753 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,7d1d03cd-1417-446d-83b1-18c34f5deaf1) with count 50
2017-08-17 17:40:09,753 TRACE [main] Person$[Person] - model kept, creating reference with count 50
2017-08-17 17:40:09,753 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,7d1d03cd-1417-446d-83b1-18c34f5deaf1,49)),1cf1ff87-56c1-4c7a-9fa0-c9108cf1e2fe)
2017-08-17 17:40:09,754 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,7d1d03cd-1417-446d-83b1-18c34f5deaf1,49)),1cf1ff87-56c1-4c7a-9fa0-c9108cf1e2fe) with count 51
2017-08-17 17:40:09,754 TRACE [main] Person$[Person] - model kept, creating reference with count 51
2017-08-17 17:40:09,754 TRACE [main] Person$[Person] - updating Person(Oleg,None,06551c44-c72a-4163-9980-e7514c1b2dbb)
2017-08-17 17:40:09,754 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,06551c44-c72a-4163-9980-e7514c1b2dbb) with count 52
2017-08-17 17:40:09,754 TRACE [main] Person$[Person] - model kept, creating reference with count 52
2017-08-17 17:40:09,754 TRACE [main] Person$[Person] - updating Person(Oleg2,None,06551c44-c72a-4163-9980-e7514c1b2dbb)
2017-08-17 17:40:09,754 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,06551c44-c72a-4163-9980-e7514c1b2dbb) with count 53
2017-08-17 17:40:09,755 TRACE [main] Person$[Person] - model kept, creating reference with count 53
2017-08-17 17:40:09,755 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,06551c44-c72a-4163-9980-e7514c1b2dbb,52)),6cfcb2c6-6307-4ce5-86d6-b7c107a68276)
2017-08-17 17:40:09,755 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,06551c44-c72a-4163-9980-e7514c1b2dbb,52)),6cfcb2c6-6307-4ce5-86d6-b7c107a68276) with count 54
2017-08-17 17:40:09,755 TRACE [main] Person$[Person] - model kept, creating reference with count 54
2017-08-17 17:40:09,755 TRACE [main] Person$[Person] - updating Person(Oleg,None,d317e3b2-dd69-45a8-b246-00d5f67025a9)
2017-08-17 17:40:09,755 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,d317e3b2-dd69-45a8-b246-00d5f67025a9) with count 55
2017-08-17 17:40:09,755 TRACE [main] Person$[Person] - model kept, creating reference with count 55
2017-08-17 17:40:09,756 TRACE [main] Person$[Person] - updating Person(Oleg2,None,d317e3b2-dd69-45a8-b246-00d5f67025a9)
2017-08-17 17:40:09,756 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,d317e3b2-dd69-45a8-b246-00d5f67025a9) with count 56
2017-08-17 17:40:09,756 TRACE [main] Person$[Person] - model kept, creating reference with count 56
2017-08-17 17:40:09,757 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,d317e3b2-dd69-45a8-b246-00d5f67025a9,55)),52e24f38-d6e9-4587-a510-783cd1022855)
2017-08-17 17:40:09,757 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,d317e3b2-dd69-45a8-b246-00d5f67025a9,55)),52e24f38-d6e9-4587-a510-783cd1022855) with count 57
2017-08-17 17:40:09,757 TRACE [main] Person$[Person] - model kept, creating reference with count 57
2017-08-17 17:40:09,758 TRACE [main] Person$[Person] - updating Person(Oleg,None,0fdc3d2a-09e2-40f7-9c1c-0e812ac289a5)
2017-08-17 17:40:09,758 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,0fdc3d2a-09e2-40f7-9c1c-0e812ac289a5) with count 58
2017-08-17 17:40:09,758 TRACE [main] Person$[Person] - model kept, creating reference with count 58
2017-08-17 17:40:09,758 TRACE [main] Person$[Person] - updating Person(Oleg2,None,0fdc3d2a-09e2-40f7-9c1c-0e812ac289a5)
2017-08-17 17:40:09,758 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,0fdc3d2a-09e2-40f7-9c1c-0e812ac289a5) with count 59
2017-08-17 17:40:09,758 TRACE [main] Person$[Person] - model kept, creating reference with count 59
2017-08-17 17:40:09,758 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,0fdc3d2a-09e2-40f7-9c1c-0e812ac289a5,58)),bd236bd5-9ed4-4e95-94be-b2ff6d7e6b3e)
2017-08-17 17:40:09,758 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,0fdc3d2a-09e2-40f7-9c1c-0e812ac289a5,58)),bd236bd5-9ed4-4e95-94be-b2ff6d7e6b3e) with count 60
2017-08-17 17:40:09,758 TRACE [main] Person$[Person] - model kept, creating reference with count 60
2017-08-17 17:40:09,758 TRACE [main] Person$[Person] - updating Person(Oleg,None,3d491938-a27c-461a-804f-410c38e51b88)
2017-08-17 17:40:09,758 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,3d491938-a27c-461a-804f-410c38e51b88) with count 61
2017-08-17 17:40:09,759 TRACE [main] Person$[Person] - model kept, creating reference with count 61
2017-08-17 17:40:09,759 TRACE [main] Person$[Person] - updating Person(Oleg2,None,3d491938-a27c-461a-804f-410c38e51b88)
2017-08-17 17:40:09,759 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,3d491938-a27c-461a-804f-410c38e51b88) with count 62
2017-08-17 17:40:09,759 TRACE [main] Person$[Person] - model kept, creating reference with count 62
2017-08-17 17:40:09,759 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,3d491938-a27c-461a-804f-410c38e51b88,61)),c2e37bf0-4e9c-4050-bf57-9493a710466a)
2017-08-17 17:40:09,759 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,3d491938-a27c-461a-804f-410c38e51b88,61)),c2e37bf0-4e9c-4050-bf57-9493a710466a) with count 63
2017-08-17 17:40:09,759 TRACE [main] Person$[Person] - model kept, creating reference with count 63
2017-08-17 17:40:09,759 TRACE [main] Person$[Person] - updating Person(Oleg,None,926e0bcd-e27a-4a86-bfa3-c3da3b6e8cd7)
2017-08-17 17:40:09,759 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,926e0bcd-e27a-4a86-bfa3-c3da3b6e8cd7) with count 64
2017-08-17 17:40:09,763 TRACE [main] Person$[Person] - model kept, creating reference with count 64
2017-08-17 17:40:09,763 TRACE [main] Person$[Person] - updating Person(Oleg2,None,926e0bcd-e27a-4a86-bfa3-c3da3b6e8cd7)
2017-08-17 17:40:09,763 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,926e0bcd-e27a-4a86-bfa3-c3da3b6e8cd7) with count 65
2017-08-17 17:40:09,764 TRACE [main] Person$[Person] - model kept, creating reference with count 65
2017-08-17 17:40:09,764 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,926e0bcd-e27a-4a86-bfa3-c3da3b6e8cd7,64)),fa1d24c7-b314-40ae-8044-a98506294e24)
2017-08-17 17:40:09,764 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,926e0bcd-e27a-4a86-bfa3-c3da3b6e8cd7,64)),fa1d24c7-b314-40ae-8044-a98506294e24) with count 66
2017-08-17 17:40:09,768 TRACE [main] Person$[Person] - model kept, creating reference with count 66
2017-08-17 17:40:09,768 TRACE [main] Person$[Person] - updating Person(Oleg,None,b82d3c6a-96a6-4b00-a9d5-92110b2b8d7a)
2017-08-17 17:40:09,769 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,b82d3c6a-96a6-4b00-a9d5-92110b2b8d7a) with count 67
2017-08-17 17:40:09,769 TRACE [main] Person$[Person] - model kept, creating reference with count 67
2017-08-17 17:40:09,769 TRACE [main] Person$[Person] - updating Person(Oleg2,None,b82d3c6a-96a6-4b00-a9d5-92110b2b8d7a)
2017-08-17 17:40:09,769 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,b82d3c6a-96a6-4b00-a9d5-92110b2b8d7a) with count 68
2017-08-17 17:40:09,770 TRACE [main] Person$[Person] - model kept, creating reference with count 68
2017-08-17 17:40:09,770 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,b82d3c6a-96a6-4b00-a9d5-92110b2b8d7a,67)),97e8b466-5a8c-4cdc-b6ce-8e866478ec9f)
2017-08-17 17:40:09,770 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,b82d3c6a-96a6-4b00-a9d5-92110b2b8d7a,67)),97e8b466-5a8c-4cdc-b6ce-8e866478ec9f) with count 69
2017-08-17 17:40:09,770 TRACE [main] Person$[Person] - model kept, creating reference with count 69
2017-08-17 17:40:09,770 TRACE [main] Person$[Person] - updating Person(Oleg,None,7802e748-1336-4a94-b2e4-c2b525b332c1)
2017-08-17 17:40:09,770 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,7802e748-1336-4a94-b2e4-c2b525b332c1) with count 70
2017-08-17 17:40:09,770 TRACE [main] Person$[Person] - model kept, creating reference with count 70
2017-08-17 17:40:09,770 TRACE [main] Person$[Person] - updating Person(Oleg2,None,7802e748-1336-4a94-b2e4-c2b525b332c1)
2017-08-17 17:40:09,770 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,7802e748-1336-4a94-b2e4-c2b525b332c1) with count 71
2017-08-17 17:40:09,770 TRACE [main] Person$[Person] - model kept, creating reference with count 71
2017-08-17 17:40:09,771 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,7802e748-1336-4a94-b2e4-c2b525b332c1,70)),3e1e4deb-92c3-442e-93ba-100c579bd088)
2017-08-17 17:40:09,771 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,7802e748-1336-4a94-b2e4-c2b525b332c1,70)),3e1e4deb-92c3-442e-93ba-100c579bd088) with count 72
2017-08-17 17:40:09,771 TRACE [main] Person$[Person] - model kept, creating reference with count 72
2017-08-17 17:40:09,771 TRACE [main] Person$[Person] - updating Person(Oleg,None,dafedf11-319d-4269-82e9-56a18f4745a3)
2017-08-17 17:40:09,771 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,dafedf11-319d-4269-82e9-56a18f4745a3) with count 73
2017-08-17 17:40:09,771 TRACE [main] Person$[Person] - model kept, creating reference with count 73
2017-08-17 17:40:09,771 TRACE [main] Person$[Person] - updating Person(Oleg2,None,dafedf11-319d-4269-82e9-56a18f4745a3)
2017-08-17 17:40:09,771 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,dafedf11-319d-4269-82e9-56a18f4745a3) with count 74
2017-08-17 17:40:09,771 TRACE [main] Person$[Person] - model kept, creating reference with count 74
2017-08-17 17:40:09,771 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,dafedf11-319d-4269-82e9-56a18f4745a3,73)),65667d8f-ef16-4e03-8f64-6cb2fa8fc605)
2017-08-17 17:40:09,771 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,dafedf11-319d-4269-82e9-56a18f4745a3,73)),65667d8f-ef16-4e03-8f64-6cb2fa8fc605) with count 75
2017-08-17 17:40:09,771 TRACE [main] Person$[Person] - model kept, creating reference with count 75
2017-08-17 17:40:09,771 TRACE [main] Person$[Person] - updating Person(Oleg,None,82292fd8-2db3-45d0-ba8a-c748a48bbd4a)
2017-08-17 17:40:09,772 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,82292fd8-2db3-45d0-ba8a-c748a48bbd4a) with count 76
2017-08-17 17:40:09,772 TRACE [main] Person$[Person] - model kept, creating reference with count 76
2017-08-17 17:40:09,772 TRACE [main] Person$[Person] - updating Person(Oleg2,None,82292fd8-2db3-45d0-ba8a-c748a48bbd4a)
2017-08-17 17:40:09,772 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,82292fd8-2db3-45d0-ba8a-c748a48bbd4a) with count 77
2017-08-17 17:40:09,774 TRACE [main] Person$[Person] - model kept, creating reference with count 77
2017-08-17 17:40:09,774 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,82292fd8-2db3-45d0-ba8a-c748a48bbd4a,76)),bcd11f6d-450e-4cf1-95b7-50ddd737ca71)
2017-08-17 17:40:09,774 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,82292fd8-2db3-45d0-ba8a-c748a48bbd4a,76)),bcd11f6d-450e-4cf1-95b7-50ddd737ca71) with count 78
2017-08-17 17:40:09,774 TRACE [main] Person$[Person] - model kept, creating reference with count 78
2017-08-17 17:40:09,774 TRACE [main] Person$[Person] - updating Person(Oleg,None,b3972465-f3c2-482f-b47c-c2c676950754)
2017-08-17 17:40:09,774 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,b3972465-f3c2-482f-b47c-c2c676950754) with count 79
2017-08-17 17:40:09,774 TRACE [main] Person$[Person] - model kept, creating reference with count 79
2017-08-17 17:40:09,774 TRACE [main] Person$[Person] - updating Person(Oleg2,None,b3972465-f3c2-482f-b47c-c2c676950754)
2017-08-17 17:40:09,775 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,b3972465-f3c2-482f-b47c-c2c676950754) with count 80
2017-08-17 17:40:09,775 TRACE [main] Person$[Person] - model kept, creating reference with count 80
2017-08-17 17:40:09,775 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,b3972465-f3c2-482f-b47c-c2c676950754,79)),dc275c53-29f5-4c53-8fd1-11010e8112ae)
2017-08-17 17:40:09,775 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,b3972465-f3c2-482f-b47c-c2c676950754,79)),dc275c53-29f5-4c53-8fd1-11010e8112ae) with count 81
2017-08-17 17:40:09,775 TRACE [main] Person$[Person] - model kept, creating reference with count 81
2017-08-17 17:40:09,775 TRACE [main] Person$[Person] - updating Person(Oleg,None,c14f2c73-e271-420f-acb2-198da5f5e828)
2017-08-17 17:40:09,775 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,c14f2c73-e271-420f-acb2-198da5f5e828) with count 82
2017-08-17 17:40:09,775 TRACE [main] Person$[Person] - model kept, creating reference with count 82
2017-08-17 17:40:09,775 TRACE [main] Person$[Person] - updating Person(Oleg2,None,c14f2c73-e271-420f-acb2-198da5f5e828)
2017-08-17 17:40:09,775 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,c14f2c73-e271-420f-acb2-198da5f5e828) with count 83
2017-08-17 17:40:09,775 TRACE [main] Person$[Person] - model kept, creating reference with count 83
2017-08-17 17:40:09,775 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,c14f2c73-e271-420f-acb2-198da5f5e828,82)),ce8ec6d1-5eab-4218-b593-32ceb0ca9566)
2017-08-17 17:40:09,775 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,c14f2c73-e271-420f-acb2-198da5f5e828,82)),ce8ec6d1-5eab-4218-b593-32ceb0ca9566) with count 84
2017-08-17 17:40:09,775 TRACE [main] Person$[Person] - model kept, creating reference with count 84
2017-08-17 17:40:09,776 TRACE [main] Person$[Person] - updating Person(Oleg,None,dfe6b1de-2652-43bb-b977-8aea0f02540c)
2017-08-17 17:40:09,776 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,dfe6b1de-2652-43bb-b977-8aea0f02540c) with count 85
2017-08-17 17:40:09,776 TRACE [main] Person$[Person] - model kept, creating reference with count 85
2017-08-17 17:40:09,776 TRACE [main] Person$[Person] - updating Person(Oleg2,None,dfe6b1de-2652-43bb-b977-8aea0f02540c)
2017-08-17 17:40:09,776 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,dfe6b1de-2652-43bb-b977-8aea0f02540c) with count 86
2017-08-17 17:40:09,776 TRACE [main] Person$[Person] - model kept, creating reference with count 86
2017-08-17 17:40:09,776 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,dfe6b1de-2652-43bb-b977-8aea0f02540c,85)),43ed19a3-2e75-4052-b12e-cb9faafc2958)
2017-08-17 17:40:09,776 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,dfe6b1de-2652-43bb-b977-8aea0f02540c,85)),43ed19a3-2e75-4052-b12e-cb9faafc2958) with count 87
2017-08-17 17:40:09,776 TRACE [main] Person$[Person] - model kept, creating reference with count 87
2017-08-17 17:40:09,776 TRACE [main] Person$[Person] - updating Person(Oleg,None,396324a6-516d-4bfb-a5ab-4315af86ad8f)
2017-08-17 17:40:09,777 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,396324a6-516d-4bfb-a5ab-4315af86ad8f) with count 88
2017-08-17 17:40:09,777 TRACE [main] Person$[Person] - model kept, creating reference with count 88
2017-08-17 17:40:09,777 TRACE [main] Person$[Person] - updating Person(Oleg2,None,396324a6-516d-4bfb-a5ab-4315af86ad8f)
2017-08-17 17:40:09,777 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,396324a6-516d-4bfb-a5ab-4315af86ad8f) with count 89
2017-08-17 17:40:09,777 TRACE [main] Person$[Person] - model kept, creating reference with count 89
2017-08-17 17:40:09,777 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,396324a6-516d-4bfb-a5ab-4315af86ad8f,88)),46de0811-b34a-4146-a820-f02e9f1c350a)
2017-08-17 17:40:09,777 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,396324a6-516d-4bfb-a5ab-4315af86ad8f,88)),46de0811-b34a-4146-a820-f02e9f1c350a) with count 90
2017-08-17 17:40:09,777 TRACE [main] Person$[Person] - model kept, creating reference with count 90
2017-08-17 17:40:10,777 INFO  [main] Counter[Person] - counter is 90
2017-08-17 17:40:10,780 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(c1ce3661-14b8-4f71-b2b3-b0f9a295235a,Map(4 -> Person(Oleg,None,c1ce3661-14b8-4f71-b2b3-b0f9a295235a), 5 -> Person(Oleg2,None,c1ce3661-14b8-4f71-b2b3-b0f9a295235a)))
	(06551c44-c72a-4163-9980-e7514c1b2dbb,Map(52 -> Person(Oleg,None,06551c44-c72a-4163-9980-e7514c1b2dbb), 53 -> Person(Oleg2,None,06551c44-c72a-4163-9980-e7514c1b2dbb)))
	(ce8ec6d1-5eab-4218-b593-32ceb0ca9566,Map(84 -> Person(Igor,Some(Reference(class models.Person,c14f2c73-e271-420f-acb2-198da5f5e828,82)),ce8ec6d1-5eab-4218-b593-32ceb0ca9566)))
	(49beba30-1b9e-4947-8358-ff6004b896bb,Map(22 -> Person(Oleg,None,49beba30-1b9e-4947-8358-ff6004b896bb), 23 -> Person(Oleg2,None,49beba30-1b9e-4947-8358-ff6004b896bb)))
	(f6620afa-d0e4-4d8e-a610-2329e454218c,Map(42 -> Person(Igor,Some(Reference(class models.Person,9ac5a181-499d-4e41-a23e-fd94200d17d2,40)),f6620afa-d0e4-4d8e-a610-2329e454218c)))
	(24931094-f405-4242-ab05-90a9eb9cdc56,Map(31 -> Person(Oleg,None,24931094-f405-4242-ab05-90a9eb9cdc56), 32 -> Person(Oleg2,None,24931094-f405-4242-ab05-90a9eb9cdc56)))
	(7d1d03cd-1417-446d-83b1-18c34f5deaf1,Map(49 -> Person(Oleg,None,7d1d03cd-1417-446d-83b1-18c34f5deaf1), 50 -> Person(Oleg2,None,7d1d03cd-1417-446d-83b1-18c34f5deaf1)))
	(e81cb405-ebe7-459e-baf0-2543726c9032,Map(19 -> Person(Oleg,None,e81cb405-ebe7-459e-baf0-2543726c9032), 20 -> Person(Oleg2,None,e81cb405-ebe7-459e-baf0-2543726c9032)))
	(dafedf11-319d-4269-82e9-56a18f4745a3,Map(73 -> Person(Oleg,None,dafedf11-319d-4269-82e9-56a18f4745a3), 74 -> Person(Oleg2,None,dafedf11-319d-4269-82e9-56a18f4745a3)))
	(c1ca0436-40cd-47d2-8ddf-027c1d4b71f5,Map(45 -> Person(Igor,Some(Reference(class models.Person,f7e009f0-f961-4360-aa86-c662345094d9,43)),c1ca0436-40cd-47d2-8ddf-027c1d4b71f5)))
	(bc9bfd61-2a98-4c2d-a6f0-4d9726f4fa46,Map(12 -> Person(Igor,Some(Reference(class models.Person,7207b95a-a926-45fb-9fc0-f90be358bde8,10)),bc9bfd61-2a98-4c2d-a6f0-4d9726f4fa46)))
	(9ac5a181-499d-4e41-a23e-fd94200d17d2,Map(40 -> Person(Oleg,None,9ac5a181-499d-4e41-a23e-fd94200d17d2), 41 -> Person(Oleg2,None,9ac5a181-499d-4e41-a23e-fd94200d17d2)))
	(42f4aa65-6e64-434f-ab53-d717f366b446,Map(34 -> Person(Oleg,None,42f4aa65-6e64-434f-ab53-d717f366b446), 35 -> Person(Oleg2,None,42f4aa65-6e64-434f-ab53-d717f366b446)))
	(82292fd8-2db3-45d0-ba8a-c748a48bbd4a,Map(76 -> Person(Oleg,None,82292fd8-2db3-45d0-ba8a-c748a48bbd4a), 77 -> Person(Oleg2,None,82292fd8-2db3-45d0-ba8a-c748a48bbd4a)))
	(37369201-19de-42c0-b300-f88d64843dcf,Map(33 -> Person(Igor,Some(Reference(class models.Person,24931094-f405-4242-ab05-90a9eb9cdc56,31)),37369201-19de-42c0-b300-f88d64843dcf)))
	(926e0bcd-e27a-4a86-bfa3-c3da3b6e8cd7,Map(64 -> Person(Oleg,None,926e0bcd-e27a-4a86-bfa3-c3da3b6e8cd7), 65 -> Person(Oleg2,None,926e0bcd-e27a-4a86-bfa3-c3da3b6e8cd7)))
	(52e24f38-d6e9-4587-a510-783cd1022855,Map(57 -> Person(Igor,Some(Reference(class models.Person,d317e3b2-dd69-45a8-b246-00d5f67025a9,55)),52e24f38-d6e9-4587-a510-783cd1022855)))
	(dfe6b1de-2652-43bb-b977-8aea0f02540c,Map(85 -> Person(Oleg,None,dfe6b1de-2652-43bb-b977-8aea0f02540c), 86 -> Person(Oleg2,None,dfe6b1de-2652-43bb-b977-8aea0f02540c)))
	(f46f7d17-f273-4f42-a62c-28f6c0c3c236,Map(30 -> Person(Igor,Some(Reference(class models.Person,844509a9-b508-4ee4-bcb7-5e0c993da12d,28)),f46f7d17-f273-4f42-a62c-28f6c0c3c236)))
	(e7145aa4-9369-47bc-a0fd-9fa1b5ee8ea8,Map(21 -> Person(Igor,Some(Reference(class models.Person,e81cb405-ebe7-459e-baf0-2543726c9032,19)),e7145aa4-9369-47bc-a0fd-9fa1b5ee8ea8)))
	(ebe05469-b1b4-4dbc-9f41-66e1d7ecba5a,Map(7 -> Person(Oleg,None,ebe05469-b1b4-4dbc-9f41-66e1d7ecba5a), 8 -> Person(Oleg2,None,ebe05469-b1b4-4dbc-9f41-66e1d7ecba5a)))
	(c14f2c73-e271-420f-acb2-198da5f5e828,Map(82 -> Person(Oleg,None,c14f2c73-e271-420f-acb2-198da5f5e828), 83 -> Person(Oleg2,None,c14f2c73-e271-420f-acb2-198da5f5e828)))
	(58af8748-c4ae-4099-b69e-f781586cbf1f,Map(25 -> Person(Oleg,None,58af8748-c4ae-4099-b69e-f781586cbf1f), 26 -> Person(Oleg2,None,58af8748-c4ae-4099-b69e-f781586cbf1f)))
	(0fdc3d2a-09e2-40f7-9c1c-0e812ac289a5,Map(58 -> Person(Oleg,None,0fdc3d2a-09e2-40f7-9c1c-0e812ac289a5), 59 -> Person(Oleg2,None,0fdc3d2a-09e2-40f7-9c1c-0e812ac289a5)))
	(03e9b2f6-e06f-4ec2-8e56-199e981fc190,Map(24 -> Person(Igor,Some(Reference(class models.Person,49beba30-1b9e-4947-8358-ff6004b896bb,22)),03e9b2f6-e06f-4ec2-8e56-199e981fc190)))
	(844509a9-b508-4ee4-bcb7-5e0c993da12d,Map(28 -> Person(Oleg,None,844509a9-b508-4ee4-bcb7-5e0c993da12d), 29 -> Person(Oleg2,None,844509a9-b508-4ee4-bcb7-5e0c993da12d)))
	(396324a6-516d-4bfb-a5ab-4315af86ad8f,Map(88 -> Person(Oleg,None,396324a6-516d-4bfb-a5ab-4315af86ad8f), 89 -> Person(Oleg2,None,396324a6-516d-4bfb-a5ab-4315af86ad8f)))
	(dc7596c8-ed9d-436d-ba87-a7faf21e95c0,Map(9 -> Person(Igor,Some(Reference(class models.Person,ebe05469-b1b4-4dbc-9f41-66e1d7ecba5a,7)),dc7596c8-ed9d-436d-ba87-a7faf21e95c0)))
	(304c65c2-b931-4a23-9af0-08dca2bee49a,Map(36 -> Person(Igor,Some(Reference(class models.Person,42f4aa65-6e64-434f-ab53-d717f366b446,34)),304c65c2-b931-4a23-9af0-08dca2bee49a)))
	(03112fcf-0e2f-4c68-9cbf-e22d409452a6,Map(39 -> Person(Igor,Some(Reference(class models.Person,2efc486d-97ac-4a5b-9171-2903fafb5edf,37)),03112fcf-0e2f-4c68-9cbf-e22d409452a6)))
	(3964294f-85c7-4a56-b62c-cb97eb78b5c9,Map(27 -> Person(Igor,Some(Reference(class models.Person,58af8748-c4ae-4099-b69e-f781586cbf1f,25)),3964294f-85c7-4a56-b62c-cb97eb78b5c9)))
	(771a1633-7d88-485f-b3eb-f684892be798,Map(1 -> Person(Oleg,None,771a1633-7d88-485f-b3eb-f684892be798), 2 -> Person(Oleg2,None,771a1633-7d88-485f-b3eb-f684892be798)))
	(5fe71bd4-9e78-4736-9838-ae6364252ce8,Map(16 -> Person(Oleg,None,5fe71bd4-9e78-4736-9838-ae6364252ce8), 17 -> Person(Oleg2,None,5fe71bd4-9e78-4736-9838-ae6364252ce8)))
	(1cf1ff87-56c1-4c7a-9fa0-c9108cf1e2fe,Map(51 -> Person(Igor,Some(Reference(class models.Person,7d1d03cd-1417-446d-83b1-18c34f5deaf1,49)),1cf1ff87-56c1-4c7a-9fa0-c9108cf1e2fe)))
	(b82d3c6a-96a6-4b00-a9d5-92110b2b8d7a,Map(67 -> Person(Oleg,None,b82d3c6a-96a6-4b00-a9d5-92110b2b8d7a), 68 -> Person(Oleg2,None,b82d3c6a-96a6-4b00-a9d5-92110b2b8d7a)))
	(7d536197-2cfa-4e7f-8c92-3f3c5916826e,Map(18 -> Person(Igor,Some(Reference(class models.Person,5fe71bd4-9e78-4736-9838-ae6364252ce8,16)),7d536197-2cfa-4e7f-8c92-3f3c5916826e)))
	(bd236bd5-9ed4-4e95-94be-b2ff6d7e6b3e,Map(60 -> Person(Igor,Some(Reference(class models.Person,0fdc3d2a-09e2-40f7-9c1c-0e812ac289a5,58)),bd236bd5-9ed4-4e95-94be-b2ff6d7e6b3e)))
	(d317e3b2-dd69-45a8-b246-00d5f67025a9,Map(55 -> Person(Oleg,None,d317e3b2-dd69-45a8-b246-00d5f67025a9), 56 -> Person(Oleg2,None,d317e3b2-dd69-45a8-b246-00d5f67025a9)))
	(6341c37d-04d0-4c36-85bb-a81a881db88b,Map(3 -> Person(Igor,Some(Reference(class models.Person,771a1633-7d88-485f-b3eb-f684892be798,1)),6341c37d-04d0-4c36-85bb-a81a881db88b)))
	(7207b95a-a926-45fb-9fc0-f90be358bde8,Map(10 -> Person(Oleg,None,7207b95a-a926-45fb-9fc0-f90be358bde8), 11 -> Person(Oleg2,None,7207b95a-a926-45fb-9fc0-f90be358bde8)))
	(65667d8f-ef16-4e03-8f64-6cb2fa8fc605,Map(75 -> Person(Igor,Some(Reference(class models.Person,dafedf11-319d-4269-82e9-56a18f4745a3,73)),65667d8f-ef16-4e03-8f64-6cb2fa8fc605)))
	(3d491938-a27c-461a-804f-410c38e51b88,Map(61 -> Person(Oleg,None,3d491938-a27c-461a-804f-410c38e51b88), 62 -> Person(Oleg2,None,3d491938-a27c-461a-804f-410c38e51b88)))
	(43ed19a3-2e75-4052-b12e-cb9faafc2958,Map(87 -> Person(Igor,Some(Reference(class models.Person,dfe6b1de-2652-43bb-b977-8aea0f02540c,85)),43ed19a3-2e75-4052-b12e-cb9faafc2958)))
	(b3972465-f3c2-482f-b47c-c2c676950754,Map(79 -> Person(Oleg,None,b3972465-f3c2-482f-b47c-c2c676950754), 80 -> Person(Oleg2,None,b3972465-f3c2-482f-b47c-c2c676950754)))
	(f7e009f0-f961-4360-aa86-c662345094d9,Map(43 -> Person(Oleg,None,f7e009f0-f961-4360-aa86-c662345094d9), 44 -> Person(Oleg2,None,f7e009f0-f961-4360-aa86-c662345094d9)))
	(97e8b466-5a8c-4cdc-b6ce-8e866478ec9f,Map(69 -> Person(Igor,Some(Reference(class models.Person,b82d3c6a-96a6-4b00-a9d5-92110b2b8d7a,67)),97e8b466-5a8c-4cdc-b6ce-8e866478ec9f)))
	(bcd11f6d-450e-4cf1-95b7-50ddd737ca71,Map(78 -> Person(Igor,Some(Reference(class models.Person,82292fd8-2db3-45d0-ba8a-c748a48bbd4a,76)),bcd11f6d-450e-4cf1-95b7-50ddd737ca71)))
	(46de0811-b34a-4146-a820-f02e9f1c350a,Map(90 -> Person(Igor,Some(Reference(class models.Person,396324a6-516d-4bfb-a5ab-4315af86ad8f,88)),46de0811-b34a-4146-a820-f02e9f1c350a)))
	(7802e748-1336-4a94-b2e4-c2b525b332c1,Map(70 -> Person(Oleg,None,7802e748-1336-4a94-b2e4-c2b525b332c1), 71 -> Person(Oleg2,None,7802e748-1336-4a94-b2e4-c2b525b332c1)))
	(092d28d1-c194-4a09-9b2c-86dca3fea01b,Map(46 -> Person(Oleg,None,092d28d1-c194-4a09-9b2c-86dca3fea01b), 47 -> Person(Oleg2,None,092d28d1-c194-4a09-9b2c-86dca3fea01b)))
	(c2e37bf0-4e9c-4050-bf57-9493a710466a,Map(63 -> Person(Igor,Some(Reference(class models.Person,3d491938-a27c-461a-804f-410c38e51b88,61)),c2e37bf0-4e9c-4050-bf57-9493a710466a)))
	(1b76549a-a8c1-4a32-aa6d-685d419b423b,Map(48 -> Person(Igor,Some(Reference(class models.Person,092d28d1-c194-4a09-9b2c-86dca3fea01b,46)),1b76549a-a8c1-4a32-aa6d-685d419b423b)))
	(3e1e4deb-92c3-442e-93ba-100c579bd088,Map(72 -> Person(Igor,Some(Reference(class models.Person,7802e748-1336-4a94-b2e4-c2b525b332c1,70)),3e1e4deb-92c3-442e-93ba-100c579bd088)))
	(fa1d24c7-b314-40ae-8044-a98506294e24,Map(66 -> Person(Igor,Some(Reference(class models.Person,926e0bcd-e27a-4a86-bfa3-c3da3b6e8cd7,64)),fa1d24c7-b314-40ae-8044-a98506294e24)))
	(2efc486d-97ac-4a5b-9171-2903fafb5edf,Map(37 -> Person(Oleg,None,2efc486d-97ac-4a5b-9171-2903fafb5edf), 38 -> Person(Oleg2,None,2efc486d-97ac-4a5b-9171-2903fafb5edf)))
	(428ea93e-8a9c-49f3-83a2-4dbf432319ac,Map(15 -> Person(Igor,Some(Reference(class models.Person,351e2185-bc41-463c-a4af-24140b00cf43,13)),428ea93e-8a9c-49f3-83a2-4dbf432319ac)))
	(dc275c53-29f5-4c53-8fd1-11010e8112ae,Map(81 -> Person(Igor,Some(Reference(class models.Person,b3972465-f3c2-482f-b47c-c2c676950754,79)),dc275c53-29f5-4c53-8fd1-11010e8112ae)))
	(6cfcb2c6-6307-4ce5-86d6-b7c107a68276,Map(54 -> Person(Igor,Some(Reference(class models.Person,06551c44-c72a-4163-9980-e7514c1b2dbb,52)),6cfcb2c6-6307-4ce5-86d6-b7c107a68276)))
	(ac458c4a-0cd6-46d9-a327-87cc9135ca2a,Map(6 -> Person(Igor,Some(Reference(class models.Person,c1ce3661-14b8-4f71-b2b3-b0f9a295235a,4)),ac458c4a-0cd6-46d9-a327-87cc9135ca2a)))
	(351e2185-bc41-463c-a4af-24140b00cf43,Map(13 -> Person(Oleg,None,351e2185-bc41-463c-a4af-24140b00cf43), 14 -> Person(Oleg2,None,351e2185-bc41-463c-a4af-24140b00cf43)))

2017-08-17 17:40:38,505 TRACE [main] Person$[Person] - updating Person(Oleg,None,b152dc12-0a46-43a9-8e40-45558af516a3)
2017-08-17 17:40:38,528 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,b152dc12-0a46-43a9-8e40-45558af516a3) with count 1
2017-08-17 17:40:38,542 TRACE [main] Person$[Person] - model kept, creating reference with count 1
2017-08-17 17:40:38,544 TRACE [main] Person$[Person] - updating Person(Oleg2,None,b152dc12-0a46-43a9-8e40-45558af516a3)
2017-08-17 17:40:38,545 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,b152dc12-0a46-43a9-8e40-45558af516a3) with count 2
2017-08-17 17:40:38,545 TRACE [main] Person$[Person] - model kept, creating reference with count 2
2017-08-17 17:40:38,545 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,b152dc12-0a46-43a9-8e40-45558af516a3,1)),a511bbed-3178-44c3-b955-dda4542d266f)
2017-08-17 17:40:38,546 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,b152dc12-0a46-43a9-8e40-45558af516a3,1)),a511bbed-3178-44c3-b955-dda4542d266f) with count 3
2017-08-17 17:40:38,546 TRACE [main] Person$[Person] - model kept, creating reference with count 3
2017-08-17 17:40:38,546 TRACE [main] Person$[Person] - updating Person(Oleg,None,da8d0eae-6b20-475f-a8d0-c6ebd6b864f6)
2017-08-17 17:40:38,546 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,da8d0eae-6b20-475f-a8d0-c6ebd6b864f6) with count 4
2017-08-17 17:40:38,546 TRACE [main] Person$[Person] - model kept, creating reference with count 4
2017-08-17 17:40:38,546 TRACE [main] Person$[Person] - updating Person(Oleg2,None,da8d0eae-6b20-475f-a8d0-c6ebd6b864f6)
2017-08-17 17:40:38,546 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,da8d0eae-6b20-475f-a8d0-c6ebd6b864f6) with count 5
2017-08-17 17:40:38,546 TRACE [main] Person$[Person] - model kept, creating reference with count 5
2017-08-17 17:40:38,546 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,da8d0eae-6b20-475f-a8d0-c6ebd6b864f6,4)),b699f3b3-4067-4d40-8f97-6e183b16311a)
2017-08-17 17:40:38,546 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,da8d0eae-6b20-475f-a8d0-c6ebd6b864f6,4)),b699f3b3-4067-4d40-8f97-6e183b16311a) with count 6
2017-08-17 17:40:38,547 TRACE [main] Person$[Person] - model kept, creating reference with count 6
2017-08-17 17:40:38,547 TRACE [main] Person$[Person] - updating Person(Oleg,None,4557c666-203a-4956-86a6-b80bf8e111d4)
2017-08-17 17:40:38,547 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,4557c666-203a-4956-86a6-b80bf8e111d4) with count 7
2017-08-17 17:40:38,547 TRACE [main] Person$[Person] - model kept, creating reference with count 7
2017-08-17 17:40:38,547 TRACE [main] Person$[Person] - updating Person(Oleg2,None,4557c666-203a-4956-86a6-b80bf8e111d4)
2017-08-17 17:40:38,547 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,4557c666-203a-4956-86a6-b80bf8e111d4) with count 8
2017-08-17 17:40:38,547 TRACE [main] Person$[Person] - model kept, creating reference with count 8
2017-08-17 17:40:38,547 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,4557c666-203a-4956-86a6-b80bf8e111d4,7)),24acfedf-ad9c-41a5-8738-6b167b16f927)
2017-08-17 17:40:38,547 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,4557c666-203a-4956-86a6-b80bf8e111d4,7)),24acfedf-ad9c-41a5-8738-6b167b16f927) with count 9
2017-08-17 17:40:38,548 TRACE [main] Person$[Person] - model kept, creating reference with count 9
2017-08-17 17:40:38,548 TRACE [main] Person$[Person] - updating Person(Oleg,None,af760565-7efe-4cb9-a040-8f984a2506f1)
2017-08-17 17:40:38,548 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,af760565-7efe-4cb9-a040-8f984a2506f1) with count 10
2017-08-17 17:40:38,548 TRACE [main] Person$[Person] - model kept, creating reference with count 10
2017-08-17 17:40:38,548 TRACE [main] Person$[Person] - updating Person(Oleg2,None,af760565-7efe-4cb9-a040-8f984a2506f1)
2017-08-17 17:40:38,548 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,af760565-7efe-4cb9-a040-8f984a2506f1) with count 11
2017-08-17 17:40:38,548 TRACE [main] Person$[Person] - model kept, creating reference with count 11
2017-08-17 17:40:38,548 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,af760565-7efe-4cb9-a040-8f984a2506f1,10)),1532e08e-dc92-4e3f-b297-c9a8f1e351f9)
2017-08-17 17:40:38,549 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,af760565-7efe-4cb9-a040-8f984a2506f1,10)),1532e08e-dc92-4e3f-b297-c9a8f1e351f9) with count 12
2017-08-17 17:40:38,549 TRACE [main] Person$[Person] - model kept, creating reference with count 12
2017-08-17 17:40:38,549 TRACE [main] Person$[Person] - updating Person(Oleg,None,9a5d5a98-6f8b-4680-8d79-43bd1f33dc5e)
2017-08-17 17:40:38,549 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,9a5d5a98-6f8b-4680-8d79-43bd1f33dc5e) with count 13
2017-08-17 17:40:38,549 TRACE [main] Person$[Person] - model kept, creating reference with count 13
2017-08-17 17:40:38,549 TRACE [main] Person$[Person] - updating Person(Oleg2,None,9a5d5a98-6f8b-4680-8d79-43bd1f33dc5e)
2017-08-17 17:40:38,550 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,9a5d5a98-6f8b-4680-8d79-43bd1f33dc5e) with count 14
2017-08-17 17:40:38,550 TRACE [main] Person$[Person] - model kept, creating reference with count 14
2017-08-17 17:40:38,550 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,9a5d5a98-6f8b-4680-8d79-43bd1f33dc5e,13)),6aa2e131-62eb-4b0c-8d45-27d04238c787)
2017-08-17 17:40:38,550 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,9a5d5a98-6f8b-4680-8d79-43bd1f33dc5e,13)),6aa2e131-62eb-4b0c-8d45-27d04238c787) with count 15
2017-08-17 17:40:38,550 TRACE [main] Person$[Person] - model kept, creating reference with count 15
2017-08-17 17:40:38,550 TRACE [main] Person$[Person] - updating Person(Oleg,None,2c528012-5c35-4d96-a0bc-312e0f658d97)
2017-08-17 17:40:38,550 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,2c528012-5c35-4d96-a0bc-312e0f658d97) with count 16
2017-08-17 17:40:38,550 TRACE [main] Person$[Person] - model kept, creating reference with count 16
2017-08-17 17:40:38,550 TRACE [main] Person$[Person] - updating Person(Oleg2,None,2c528012-5c35-4d96-a0bc-312e0f658d97)
2017-08-17 17:40:38,551 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,2c528012-5c35-4d96-a0bc-312e0f658d97) with count 17
2017-08-17 17:40:38,551 TRACE [main] Person$[Person] - model kept, creating reference with count 17
2017-08-17 17:40:38,551 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,2c528012-5c35-4d96-a0bc-312e0f658d97,16)),7e135f3b-0f19-4f8f-80a2-6b8bd7b3067e)
2017-08-17 17:40:38,551 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,2c528012-5c35-4d96-a0bc-312e0f658d97,16)),7e135f3b-0f19-4f8f-80a2-6b8bd7b3067e) with count 18
2017-08-17 17:40:38,551 TRACE [main] Person$[Person] - model kept, creating reference with count 18
2017-08-17 17:40:38,551 TRACE [main] Person$[Person] - updating Person(Oleg,None,2c43a776-9c8c-48b8-9b0f-fb47b70938c6)
2017-08-17 17:40:38,551 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,2c43a776-9c8c-48b8-9b0f-fb47b70938c6) with count 19
2017-08-17 17:40:38,551 TRACE [main] Person$[Person] - model kept, creating reference with count 19
2017-08-17 17:40:38,551 TRACE [main] Person$[Person] - updating Person(Oleg2,None,2c43a776-9c8c-48b8-9b0f-fb47b70938c6)
2017-08-17 17:40:38,552 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,2c43a776-9c8c-48b8-9b0f-fb47b70938c6) with count 20
2017-08-17 17:40:38,552 TRACE [main] Person$[Person] - model kept, creating reference with count 20
2017-08-17 17:40:38,552 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,2c43a776-9c8c-48b8-9b0f-fb47b70938c6,19)),f47f0d9a-8e9c-4e43-876e-60159c57c639)
2017-08-17 17:40:38,552 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,2c43a776-9c8c-48b8-9b0f-fb47b70938c6,19)),f47f0d9a-8e9c-4e43-876e-60159c57c639) with count 21
2017-08-17 17:40:38,552 TRACE [main] Person$[Person] - model kept, creating reference with count 21
2017-08-17 17:40:38,552 TRACE [main] Person$[Person] - updating Person(Oleg,None,4c95880b-6b86-4134-be66-4fd452f4c478)
2017-08-17 17:40:38,552 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,4c95880b-6b86-4134-be66-4fd452f4c478) with count 22
2017-08-17 17:40:38,552 TRACE [main] Person$[Person] - model kept, creating reference with count 22
2017-08-17 17:40:38,553 TRACE [main] Person$[Person] - updating Person(Oleg2,None,4c95880b-6b86-4134-be66-4fd452f4c478)
2017-08-17 17:40:38,553 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,4c95880b-6b86-4134-be66-4fd452f4c478) with count 23
2017-08-17 17:40:38,553 TRACE [main] Person$[Person] - model kept, creating reference with count 23
2017-08-17 17:40:38,553 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,4c95880b-6b86-4134-be66-4fd452f4c478,22)),144d6be8-9757-4348-b44d-419308d53f52)
2017-08-17 17:40:38,553 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,4c95880b-6b86-4134-be66-4fd452f4c478,22)),144d6be8-9757-4348-b44d-419308d53f52) with count 24
2017-08-17 17:40:38,554 TRACE [main] Person$[Person] - model kept, creating reference with count 24
2017-08-17 17:40:38,554 TRACE [main] Person$[Person] - updating Person(Oleg,None,526bb594-92b2-4659-8a0b-48a9c489d16d)
2017-08-17 17:40:38,554 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,526bb594-92b2-4659-8a0b-48a9c489d16d) with count 25
2017-08-17 17:40:38,554 TRACE [main] Person$[Person] - model kept, creating reference with count 25
2017-08-17 17:40:38,554 TRACE [main] Person$[Person] - updating Person(Oleg2,None,526bb594-92b2-4659-8a0b-48a9c489d16d)
2017-08-17 17:40:38,554 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,526bb594-92b2-4659-8a0b-48a9c489d16d) with count 26
2017-08-17 17:40:38,555 TRACE [main] Person$[Person] - model kept, creating reference with count 26
2017-08-17 17:40:38,555 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,526bb594-92b2-4659-8a0b-48a9c489d16d,25)),d4110a7a-802f-443c-9028-393f67d0be01)
2017-08-17 17:40:38,555 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,526bb594-92b2-4659-8a0b-48a9c489d16d,25)),d4110a7a-802f-443c-9028-393f67d0be01) with count 27
2017-08-17 17:40:38,555 TRACE [main] Person$[Person] - model kept, creating reference with count 27
2017-08-17 17:40:38,555 TRACE [main] Person$[Person] - updating Person(Oleg,None,1fc9e4b3-8ece-4b49-a7f2-739937e11b20)
2017-08-17 17:40:38,555 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,1fc9e4b3-8ece-4b49-a7f2-739937e11b20) with count 28
2017-08-17 17:40:38,555 TRACE [main] Person$[Person] - model kept, creating reference with count 28
2017-08-17 17:40:38,556 TRACE [main] Person$[Person] - updating Person(Oleg2,None,1fc9e4b3-8ece-4b49-a7f2-739937e11b20)
2017-08-17 17:40:38,556 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,1fc9e4b3-8ece-4b49-a7f2-739937e11b20) with count 29
2017-08-17 17:40:38,556 TRACE [main] Person$[Person] - model kept, creating reference with count 29
2017-08-17 17:40:38,556 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,1fc9e4b3-8ece-4b49-a7f2-739937e11b20,28)),6e4bfd26-7250-440d-a60f-9871e481125d)
2017-08-17 17:40:38,556 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,1fc9e4b3-8ece-4b49-a7f2-739937e11b20,28)),6e4bfd26-7250-440d-a60f-9871e481125d) with count 30
2017-08-17 17:40:38,556 TRACE [main] Person$[Person] - model kept, creating reference with count 30
2017-08-17 17:40:38,556 TRACE [main] Person$[Person] - updating Person(Oleg,None,58b10a8d-8fe5-40ce-a2f8-d0f7fedc8ff9)
2017-08-17 17:40:38,556 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,58b10a8d-8fe5-40ce-a2f8-d0f7fedc8ff9) with count 31
2017-08-17 17:40:38,557 TRACE [main] Person$[Person] - model kept, creating reference with count 31
2017-08-17 17:40:38,557 TRACE [main] Person$[Person] - updating Person(Oleg2,None,58b10a8d-8fe5-40ce-a2f8-d0f7fedc8ff9)
2017-08-17 17:40:38,557 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,58b10a8d-8fe5-40ce-a2f8-d0f7fedc8ff9) with count 32
2017-08-17 17:40:38,557 TRACE [main] Person$[Person] - model kept, creating reference with count 32
2017-08-17 17:40:38,557 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,58b10a8d-8fe5-40ce-a2f8-d0f7fedc8ff9,31)),b8dada32-85c7-477a-b027-0b11c3be1e5a)
2017-08-17 17:40:38,557 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,58b10a8d-8fe5-40ce-a2f8-d0f7fedc8ff9,31)),b8dada32-85c7-477a-b027-0b11c3be1e5a) with count 33
2017-08-17 17:40:38,557 TRACE [main] Person$[Person] - model kept, creating reference with count 33
2017-08-17 17:40:38,557 TRACE [main] Person$[Person] - updating Person(Oleg,None,ac7f53d2-bfd7-4e62-837a-6476691fc6d5)
2017-08-17 17:40:38,558 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,ac7f53d2-bfd7-4e62-837a-6476691fc6d5) with count 34
2017-08-17 17:40:38,558 TRACE [main] Person$[Person] - model kept, creating reference with count 34
2017-08-17 17:40:38,558 TRACE [main] Person$[Person] - updating Person(Oleg2,None,ac7f53d2-bfd7-4e62-837a-6476691fc6d5)
2017-08-17 17:40:38,558 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,ac7f53d2-bfd7-4e62-837a-6476691fc6d5) with count 35
2017-08-17 17:40:38,558 TRACE [main] Person$[Person] - model kept, creating reference with count 35
2017-08-17 17:40:38,558 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,ac7f53d2-bfd7-4e62-837a-6476691fc6d5,34)),0e022e34-9195-4650-915d-d7542e8ee3e8)
2017-08-17 17:40:38,558 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,ac7f53d2-bfd7-4e62-837a-6476691fc6d5,34)),0e022e34-9195-4650-915d-d7542e8ee3e8) with count 36
2017-08-17 17:40:38,558 TRACE [main] Person$[Person] - model kept, creating reference with count 36
2017-08-17 17:40:38,559 TRACE [main] Person$[Person] - updating Person(Oleg,None,7f1f564a-a8cc-4c68-9dcf-b117500d420a)
2017-08-17 17:40:38,559 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,7f1f564a-a8cc-4c68-9dcf-b117500d420a) with count 37
2017-08-17 17:40:38,559 TRACE [main] Person$[Person] - model kept, creating reference with count 37
2017-08-17 17:40:38,559 TRACE [main] Person$[Person] - updating Person(Oleg2,None,7f1f564a-a8cc-4c68-9dcf-b117500d420a)
2017-08-17 17:40:38,559 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,7f1f564a-a8cc-4c68-9dcf-b117500d420a) with count 38
2017-08-17 17:40:38,559 TRACE [main] Person$[Person] - model kept, creating reference with count 38
2017-08-17 17:40:38,559 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,7f1f564a-a8cc-4c68-9dcf-b117500d420a,37)),6923bb4a-4a10-468a-9fc0-b803abc46f18)
2017-08-17 17:40:38,559 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,7f1f564a-a8cc-4c68-9dcf-b117500d420a,37)),6923bb4a-4a10-468a-9fc0-b803abc46f18) with count 39
2017-08-17 17:40:38,559 TRACE [main] Person$[Person] - model kept, creating reference with count 39
2017-08-17 17:40:38,560 TRACE [main] Person$[Person] - updating Person(Oleg,None,3ff58834-5051-44be-bd91-03dd3f3ba34a)
2017-08-17 17:40:38,560 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,3ff58834-5051-44be-bd91-03dd3f3ba34a) with count 40
2017-08-17 17:40:38,560 TRACE [main] Person$[Person] - model kept, creating reference with count 40
2017-08-17 17:40:38,560 TRACE [main] Person$[Person] - updating Person(Oleg2,None,3ff58834-5051-44be-bd91-03dd3f3ba34a)
2017-08-17 17:40:38,560 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,3ff58834-5051-44be-bd91-03dd3f3ba34a) with count 41
2017-08-17 17:40:38,560 TRACE [main] Person$[Person] - model kept, creating reference with count 41
2017-08-17 17:40:38,560 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,3ff58834-5051-44be-bd91-03dd3f3ba34a,40)),b4382142-500c-4867-9aa6-8b47a6615961)
2017-08-17 17:40:38,560 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,3ff58834-5051-44be-bd91-03dd3f3ba34a,40)),b4382142-500c-4867-9aa6-8b47a6615961) with count 42
2017-08-17 17:40:38,561 TRACE [main] Person$[Person] - model kept, creating reference with count 42
2017-08-17 17:40:38,561 TRACE [main] Person$[Person] - updating Person(Oleg,None,063ddb70-8429-410e-9377-d2699364373a)
2017-08-17 17:40:38,561 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,063ddb70-8429-410e-9377-d2699364373a) with count 43
2017-08-17 17:40:38,561 TRACE [main] Person$[Person] - model kept, creating reference with count 43
2017-08-17 17:40:38,561 TRACE [main] Person$[Person] - updating Person(Oleg2,None,063ddb70-8429-410e-9377-d2699364373a)
2017-08-17 17:40:38,561 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,063ddb70-8429-410e-9377-d2699364373a) with count 44
2017-08-17 17:40:38,562 TRACE [main] Person$[Person] - model kept, creating reference with count 44
2017-08-17 17:40:38,562 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,063ddb70-8429-410e-9377-d2699364373a,43)),d81e102f-9259-4a3d-9780-113ecc1d7f32)
2017-08-17 17:40:38,562 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,063ddb70-8429-410e-9377-d2699364373a,43)),d81e102f-9259-4a3d-9780-113ecc1d7f32) with count 45
2017-08-17 17:40:38,562 TRACE [main] Person$[Person] - model kept, creating reference with count 45
2017-08-17 17:40:38,562 TRACE [main] Person$[Person] - updating Person(Oleg,None,627c6a91-9cd3-457d-9168-06ae39796b6f)
2017-08-17 17:40:38,562 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,627c6a91-9cd3-457d-9168-06ae39796b6f) with count 46
2017-08-17 17:40:38,562 TRACE [main] Person$[Person] - model kept, creating reference with count 46
2017-08-17 17:40:38,562 TRACE [main] Person$[Person] - updating Person(Oleg2,None,627c6a91-9cd3-457d-9168-06ae39796b6f)
2017-08-17 17:40:38,562 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,627c6a91-9cd3-457d-9168-06ae39796b6f) with count 47
2017-08-17 17:40:38,563 TRACE [main] Person$[Person] - model kept, creating reference with count 47
2017-08-17 17:40:38,563 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,627c6a91-9cd3-457d-9168-06ae39796b6f,46)),da1f24fa-1116-401f-b79b-7f549caa5b3e)
2017-08-17 17:40:38,563 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,627c6a91-9cd3-457d-9168-06ae39796b6f,46)),da1f24fa-1116-401f-b79b-7f549caa5b3e) with count 48
2017-08-17 17:40:38,563 TRACE [main] Person$[Person] - model kept, creating reference with count 48
2017-08-17 17:40:38,563 TRACE [main] Person$[Person] - updating Person(Oleg,None,890ae6e0-9342-4a6c-8cb6-d8845d5cf24a)
2017-08-17 17:40:38,563 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,890ae6e0-9342-4a6c-8cb6-d8845d5cf24a) with count 49
2017-08-17 17:40:38,564 TRACE [main] Person$[Person] - model kept, creating reference with count 49
2017-08-17 17:40:38,564 TRACE [main] Person$[Person] - updating Person(Oleg2,None,890ae6e0-9342-4a6c-8cb6-d8845d5cf24a)
2017-08-17 17:40:38,564 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,890ae6e0-9342-4a6c-8cb6-d8845d5cf24a) with count 50
2017-08-17 17:40:38,564 TRACE [main] Person$[Person] - model kept, creating reference with count 50
2017-08-17 17:40:38,564 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,890ae6e0-9342-4a6c-8cb6-d8845d5cf24a,49)),d941d144-8e85-4dff-9974-e966228141e0)
2017-08-17 17:40:38,564 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,890ae6e0-9342-4a6c-8cb6-d8845d5cf24a,49)),d941d144-8e85-4dff-9974-e966228141e0) with count 51
2017-08-17 17:40:38,565 TRACE [main] Person$[Person] - model kept, creating reference with count 51
2017-08-17 17:40:38,565 TRACE [main] Person$[Person] - updating Person(Oleg,None,7d666ff0-1d29-4061-aa0a-4143636af93d)
2017-08-17 17:40:38,565 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,7d666ff0-1d29-4061-aa0a-4143636af93d) with count 52
2017-08-17 17:40:38,565 TRACE [main] Person$[Person] - model kept, creating reference with count 52
2017-08-17 17:40:38,565 TRACE [main] Person$[Person] - updating Person(Oleg2,None,7d666ff0-1d29-4061-aa0a-4143636af93d)
2017-08-17 17:40:38,565 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,7d666ff0-1d29-4061-aa0a-4143636af93d) with count 53
2017-08-17 17:40:38,565 TRACE [main] Person$[Person] - model kept, creating reference with count 53
2017-08-17 17:40:38,565 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,7d666ff0-1d29-4061-aa0a-4143636af93d,52)),211886f8-61eb-4a36-82a6-813cdaf3af88)
2017-08-17 17:40:38,566 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,7d666ff0-1d29-4061-aa0a-4143636af93d,52)),211886f8-61eb-4a36-82a6-813cdaf3af88) with count 54
2017-08-17 17:40:38,566 TRACE [main] Person$[Person] - model kept, creating reference with count 54
2017-08-17 17:40:38,566 TRACE [main] Person$[Person] - updating Person(Oleg,None,50fa1419-9d71-4e46-b1e7-4e69e3673239)
2017-08-17 17:40:38,566 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,50fa1419-9d71-4e46-b1e7-4e69e3673239) with count 55
2017-08-17 17:40:38,566 TRACE [main] Person$[Person] - model kept, creating reference with count 55
2017-08-17 17:40:38,566 TRACE [main] Person$[Person] - updating Person(Oleg2,None,50fa1419-9d71-4e46-b1e7-4e69e3673239)
2017-08-17 17:40:38,566 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,50fa1419-9d71-4e46-b1e7-4e69e3673239) with count 56
2017-08-17 17:40:38,567 TRACE [main] Person$[Person] - model kept, creating reference with count 56
2017-08-17 17:40:38,567 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,50fa1419-9d71-4e46-b1e7-4e69e3673239,55)),7c646382-924b-4a71-8c28-6bfa12a651de)
2017-08-17 17:40:38,567 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,50fa1419-9d71-4e46-b1e7-4e69e3673239,55)),7c646382-924b-4a71-8c28-6bfa12a651de) with count 57
2017-08-17 17:40:38,567 TRACE [main] Person$[Person] - model kept, creating reference with count 57
2017-08-17 17:40:38,567 TRACE [main] Person$[Person] - updating Person(Oleg,None,351d2cd8-38a5-44dc-8d69-a09759b1473c)
2017-08-17 17:40:38,567 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,351d2cd8-38a5-44dc-8d69-a09759b1473c) with count 58
2017-08-17 17:40:38,568 TRACE [main] Person$[Person] - model kept, creating reference with count 58
2017-08-17 17:40:38,568 TRACE [main] Person$[Person] - updating Person(Oleg2,None,351d2cd8-38a5-44dc-8d69-a09759b1473c)
2017-08-17 17:40:38,568 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,351d2cd8-38a5-44dc-8d69-a09759b1473c) with count 59
2017-08-17 17:40:38,568 TRACE [main] Person$[Person] - model kept, creating reference with count 59
2017-08-17 17:40:38,568 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,351d2cd8-38a5-44dc-8d69-a09759b1473c,58)),b49c8040-555b-4983-8788-c20d6b3d775f)
2017-08-17 17:40:38,568 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,351d2cd8-38a5-44dc-8d69-a09759b1473c,58)),b49c8040-555b-4983-8788-c20d6b3d775f) with count 60
2017-08-17 17:40:38,568 TRACE [main] Person$[Person] - model kept, creating reference with count 60
2017-08-17 17:40:38,568 TRACE [main] Person$[Person] - updating Person(Oleg,None,74ffbdb4-f7fa-41a6-a672-965a8bb5fc5c)
2017-08-17 17:40:38,568 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,74ffbdb4-f7fa-41a6-a672-965a8bb5fc5c) with count 61
2017-08-17 17:40:38,569 TRACE [main] Person$[Person] - model kept, creating reference with count 61
2017-08-17 17:40:38,569 TRACE [main] Person$[Person] - updating Person(Oleg2,None,74ffbdb4-f7fa-41a6-a672-965a8bb5fc5c)
2017-08-17 17:40:38,569 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,74ffbdb4-f7fa-41a6-a672-965a8bb5fc5c) with count 62
2017-08-17 17:40:38,569 TRACE [main] Person$[Person] - model kept, creating reference with count 62
2017-08-17 17:40:38,569 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,74ffbdb4-f7fa-41a6-a672-965a8bb5fc5c,61)),ba2afad6-ba3f-443f-a456-f15ffc17bb1d)
2017-08-17 17:40:38,569 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,74ffbdb4-f7fa-41a6-a672-965a8bb5fc5c,61)),ba2afad6-ba3f-443f-a456-f15ffc17bb1d) with count 63
2017-08-17 17:40:38,570 TRACE [main] Person$[Person] - model kept, creating reference with count 63
2017-08-17 17:40:38,570 TRACE [main] Person$[Person] - updating Person(Oleg,None,dfe0963d-c13c-4e50-bfa8-a4fa53189afc)
2017-08-17 17:40:38,570 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,dfe0963d-c13c-4e50-bfa8-a4fa53189afc) with count 64
2017-08-17 17:40:38,570 TRACE [main] Person$[Person] - model kept, creating reference with count 64
2017-08-17 17:40:38,570 TRACE [main] Person$[Person] - updating Person(Oleg2,None,dfe0963d-c13c-4e50-bfa8-a4fa53189afc)
2017-08-17 17:40:38,570 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,dfe0963d-c13c-4e50-bfa8-a4fa53189afc) with count 65
2017-08-17 17:40:38,571 TRACE [main] Person$[Person] - model kept, creating reference with count 65
2017-08-17 17:40:38,571 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,dfe0963d-c13c-4e50-bfa8-a4fa53189afc,64)),08b70d6a-7bfa-4003-94f3-785e8f568da5)
2017-08-17 17:40:38,571 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,dfe0963d-c13c-4e50-bfa8-a4fa53189afc,64)),08b70d6a-7bfa-4003-94f3-785e8f568da5) with count 66
2017-08-17 17:40:38,571 TRACE [main] Person$[Person] - model kept, creating reference with count 66
2017-08-17 17:40:38,571 TRACE [main] Person$[Person] - updating Person(Oleg,None,cd1b4791-8495-4d62-8260-14aee381f2dc)
2017-08-17 17:40:38,571 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,cd1b4791-8495-4d62-8260-14aee381f2dc) with count 67
2017-08-17 17:40:38,571 TRACE [main] Person$[Person] - model kept, creating reference with count 67
2017-08-17 17:40:38,571 TRACE [main] Person$[Person] - updating Person(Oleg2,None,cd1b4791-8495-4d62-8260-14aee381f2dc)
2017-08-17 17:40:38,572 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,cd1b4791-8495-4d62-8260-14aee381f2dc) with count 68
2017-08-17 17:40:38,572 TRACE [main] Person$[Person] - model kept, creating reference with count 68
2017-08-17 17:40:38,572 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,cd1b4791-8495-4d62-8260-14aee381f2dc,67)),9b95e4f9-07ed-427b-a034-20b676a71b39)
2017-08-17 17:40:38,572 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,cd1b4791-8495-4d62-8260-14aee381f2dc,67)),9b95e4f9-07ed-427b-a034-20b676a71b39) with count 69
2017-08-17 17:40:38,572 TRACE [main] Person$[Person] - model kept, creating reference with count 69
2017-08-17 17:40:38,572 TRACE [main] Person$[Person] - updating Person(Oleg,None,3c7d3452-1a53-4baf-80fb-d9d50d0f7148)
2017-08-17 17:40:38,572 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,3c7d3452-1a53-4baf-80fb-d9d50d0f7148) with count 70
2017-08-17 17:40:38,573 TRACE [main] Person$[Person] - model kept, creating reference with count 70
2017-08-17 17:40:38,573 TRACE [main] Person$[Person] - updating Person(Oleg2,None,3c7d3452-1a53-4baf-80fb-d9d50d0f7148)
2017-08-17 17:40:38,573 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,3c7d3452-1a53-4baf-80fb-d9d50d0f7148) with count 71
2017-08-17 17:40:38,573 TRACE [main] Person$[Person] - model kept, creating reference with count 71
2017-08-17 17:40:38,573 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,3c7d3452-1a53-4baf-80fb-d9d50d0f7148,70)),22515952-6ec3-481d-8895-de6459909412)
2017-08-17 17:40:38,573 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,3c7d3452-1a53-4baf-80fb-d9d50d0f7148,70)),22515952-6ec3-481d-8895-de6459909412) with count 72
2017-08-17 17:40:38,573 TRACE [main] Person$[Person] - model kept, creating reference with count 72
2017-08-17 17:40:38,573 TRACE [main] Person$[Person] - updating Person(Oleg,None,e0979b92-c7f7-4bff-8dbd-4e0087850bf2)
2017-08-17 17:40:38,573 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,e0979b92-c7f7-4bff-8dbd-4e0087850bf2) with count 73
2017-08-17 17:40:38,574 TRACE [main] Person$[Person] - model kept, creating reference with count 73
2017-08-17 17:40:38,574 TRACE [main] Person$[Person] - updating Person(Oleg2,None,e0979b92-c7f7-4bff-8dbd-4e0087850bf2)
2017-08-17 17:40:38,574 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,e0979b92-c7f7-4bff-8dbd-4e0087850bf2) with count 74
2017-08-17 17:40:38,574 TRACE [main] Person$[Person] - model kept, creating reference with count 74
2017-08-17 17:40:38,574 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,e0979b92-c7f7-4bff-8dbd-4e0087850bf2,73)),23adcac6-2981-4fbb-90af-467d9ac11305)
2017-08-17 17:40:38,574 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,e0979b92-c7f7-4bff-8dbd-4e0087850bf2,73)),23adcac6-2981-4fbb-90af-467d9ac11305) with count 75
2017-08-17 17:40:38,574 TRACE [main] Person$[Person] - model kept, creating reference with count 75
2017-08-17 17:40:38,574 TRACE [main] Person$[Person] - updating Person(Oleg,None,10717546-7e0f-4499-8eef-d8f15a331c1a)
2017-08-17 17:40:38,575 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,10717546-7e0f-4499-8eef-d8f15a331c1a) with count 76
2017-08-17 17:40:38,575 TRACE [main] Person$[Person] - model kept, creating reference with count 76
2017-08-17 17:40:38,575 TRACE [main] Person$[Person] - updating Person(Oleg2,None,10717546-7e0f-4499-8eef-d8f15a331c1a)
2017-08-17 17:40:38,575 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,10717546-7e0f-4499-8eef-d8f15a331c1a) with count 77
2017-08-17 17:40:38,575 TRACE [main] Person$[Person] - model kept, creating reference with count 77
2017-08-17 17:40:38,575 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,10717546-7e0f-4499-8eef-d8f15a331c1a,76)),9303a215-357e-44b4-996b-99f828de803e)
2017-08-17 17:40:38,575 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,10717546-7e0f-4499-8eef-d8f15a331c1a,76)),9303a215-357e-44b4-996b-99f828de803e) with count 78
2017-08-17 17:40:38,576 TRACE [main] Person$[Person] - model kept, creating reference with count 78
2017-08-17 17:40:38,576 TRACE [main] Person$[Person] - updating Person(Oleg,None,0d80c791-982d-4942-a4c2-3a00ee4c0d4a)
2017-08-17 17:40:38,576 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,0d80c791-982d-4942-a4c2-3a00ee4c0d4a) with count 79
2017-08-17 17:40:38,576 TRACE [main] Person$[Person] - model kept, creating reference with count 79
2017-08-17 17:40:38,576 TRACE [main] Person$[Person] - updating Person(Oleg2,None,0d80c791-982d-4942-a4c2-3a00ee4c0d4a)
2017-08-17 17:40:38,576 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,0d80c791-982d-4942-a4c2-3a00ee4c0d4a) with count 80
2017-08-17 17:40:38,576 TRACE [main] Person$[Person] - model kept, creating reference with count 80
2017-08-17 17:40:38,576 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,0d80c791-982d-4942-a4c2-3a00ee4c0d4a,79)),a8cfa999-bd16-46e6-bc32-c129b47102b3)
2017-08-17 17:40:38,577 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,0d80c791-982d-4942-a4c2-3a00ee4c0d4a,79)),a8cfa999-bd16-46e6-bc32-c129b47102b3) with count 81
2017-08-17 17:40:38,577 TRACE [main] Person$[Person] - model kept, creating reference with count 81
2017-08-17 17:40:38,577 TRACE [main] Person$[Person] - updating Person(Oleg,None,b187a860-ca4f-48bd-b088-7ad139dae763)
2017-08-17 17:40:38,577 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,b187a860-ca4f-48bd-b088-7ad139dae763) with count 82
2017-08-17 17:40:38,577 TRACE [main] Person$[Person] - model kept, creating reference with count 82
2017-08-17 17:40:38,577 TRACE [main] Person$[Person] - updating Person(Oleg2,None,b187a860-ca4f-48bd-b088-7ad139dae763)
2017-08-17 17:40:38,578 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,b187a860-ca4f-48bd-b088-7ad139dae763) with count 83
2017-08-17 17:40:38,578 TRACE [main] Person$[Person] - model kept, creating reference with count 83
2017-08-17 17:40:38,578 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,b187a860-ca4f-48bd-b088-7ad139dae763,82)),3eb2cf4f-27a0-43f8-b75e-c6683a13ad89)
2017-08-17 17:40:38,578 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,b187a860-ca4f-48bd-b088-7ad139dae763,82)),3eb2cf4f-27a0-43f8-b75e-c6683a13ad89) with count 84
2017-08-17 17:40:38,578 TRACE [main] Person$[Person] - model kept, creating reference with count 84
2017-08-17 17:40:38,578 TRACE [main] Person$[Person] - updating Person(Oleg,None,5e001bc8-7a57-4465-be4b-7a21fee8b643)
2017-08-17 17:40:38,578 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,5e001bc8-7a57-4465-be4b-7a21fee8b643) with count 85
2017-08-17 17:40:38,580 TRACE [main] Person$[Person] - model kept, creating reference with count 85
2017-08-17 17:40:38,581 TRACE [main] Person$[Person] - updating Person(Oleg2,None,5e001bc8-7a57-4465-be4b-7a21fee8b643)
2017-08-17 17:40:38,581 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,5e001bc8-7a57-4465-be4b-7a21fee8b643) with count 86
2017-08-17 17:40:38,581 TRACE [main] Person$[Person] - model kept, creating reference with count 86
2017-08-17 17:40:38,582 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,5e001bc8-7a57-4465-be4b-7a21fee8b643,85)),24d8957f-aa34-4b40-b37a-242e7aac362f)
2017-08-17 17:40:38,582 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,5e001bc8-7a57-4465-be4b-7a21fee8b643,85)),24d8957f-aa34-4b40-b37a-242e7aac362f) with count 87
2017-08-17 17:40:38,583 TRACE [main] Person$[Person] - model kept, creating reference with count 87
2017-08-17 17:40:38,583 TRACE [main] Person$[Person] - updating Person(Oleg,None,3aae7534-66b4-4f27-ba3b-62482f0ccf92)
2017-08-17 17:40:38,583 TRACE [main] Keeper[Person] - keeping model Person(Oleg,None,3aae7534-66b4-4f27-ba3b-62482f0ccf92) with count 88
2017-08-17 17:40:38,584 TRACE [main] Person$[Person] - model kept, creating reference with count 88
2017-08-17 17:40:38,584 TRACE [main] Person$[Person] - updating Person(Oleg2,None,3aae7534-66b4-4f27-ba3b-62482f0ccf92)
2017-08-17 17:40:38,584 TRACE [main] Keeper[Person] - keeping model Person(Oleg2,None,3aae7534-66b4-4f27-ba3b-62482f0ccf92) with count 89
2017-08-17 17:40:38,584 TRACE [main] Person$[Person] - model kept, creating reference with count 89
2017-08-17 17:40:38,584 TRACE [main] Person$[Person] - updating Person(Igor,Some(Reference(class models.Person,3aae7534-66b4-4f27-ba3b-62482f0ccf92,88)),c9e01a8a-a4a4-4c4b-b19c-bb9b15c9d06d)
2017-08-17 17:40:38,584 TRACE [main] Keeper[Person] - keeping model Person(Igor,Some(Reference(class models.Person,3aae7534-66b4-4f27-ba3b-62482f0ccf92,88)),c9e01a8a-a4a4-4c4b-b19c-bb9b15c9d06d) with count 90
2017-08-17 17:40:38,584 TRACE [main] Person$[Person] - model kept, creating reference with count 90
2017-08-17 17:40:39,584 INFO  [main] Counter[Person] - counter is 90
2017-08-17 17:40:39,587 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(1532e08e-dc92-4e3f-b297-c9a8f1e351f9,Map(12 -> Person(Igor,Some(Reference(class models.Person,af760565-7efe-4cb9-a040-8f984a2506f1,10)),1532e08e-dc92-4e3f-b297-c9a8f1e351f9)))
	(74ffbdb4-f7fa-41a6-a672-965a8bb5fc5c,Map(61 -> Person(Oleg,None,74ffbdb4-f7fa-41a6-a672-965a8bb5fc5c), 62 -> Person(Oleg2,None,74ffbdb4-f7fa-41a6-a672-965a8bb5fc5c)))
	(351d2cd8-38a5-44dc-8d69-a09759b1473c,Map(58 -> Person(Oleg,None,351d2cd8-38a5-44dc-8d69-a09759b1473c), 59 -> Person(Oleg2,None,351d2cd8-38a5-44dc-8d69-a09759b1473c)))
	(7f1f564a-a8cc-4c68-9dcf-b117500d420a,Map(37 -> Person(Oleg,None,7f1f564a-a8cc-4c68-9dcf-b117500d420a), 38 -> Person(Oleg2,None,7f1f564a-a8cc-4c68-9dcf-b117500d420a)))
	(6e4bfd26-7250-440d-a60f-9871e481125d,Map(30 -> Person(Igor,Some(Reference(class models.Person,1fc9e4b3-8ece-4b49-a7f2-739937e11b20,28)),6e4bfd26-7250-440d-a60f-9871e481125d)))
	(5e001bc8-7a57-4465-be4b-7a21fee8b643,Map(85 -> Person(Oleg,None,5e001bc8-7a57-4465-be4b-7a21fee8b643), 86 -> Person(Oleg2,None,5e001bc8-7a57-4465-be4b-7a21fee8b643)))
	(08b70d6a-7bfa-4003-94f3-785e8f568da5,Map(66 -> Person(Igor,Some(Reference(class models.Person,dfe0963d-c13c-4e50-bfa8-a4fa53189afc,64)),08b70d6a-7bfa-4003-94f3-785e8f568da5)))
	(7d666ff0-1d29-4061-aa0a-4143636af93d,Map(52 -> Person(Oleg,None,7d666ff0-1d29-4061-aa0a-4143636af93d), 53 -> Person(Oleg2,None,7d666ff0-1d29-4061-aa0a-4143636af93d)))
	(3aae7534-66b4-4f27-ba3b-62482f0ccf92,Map(88 -> Person(Oleg,None,3aae7534-66b4-4f27-ba3b-62482f0ccf92), 89 -> Person(Oleg2,None,3aae7534-66b4-4f27-ba3b-62482f0ccf92)))
	(0d80c791-982d-4942-a4c2-3a00ee4c0d4a,Map(79 -> Person(Oleg,None,0d80c791-982d-4942-a4c2-3a00ee4c0d4a), 80 -> Person(Oleg2,None,0d80c791-982d-4942-a4c2-3a00ee4c0d4a)))
	(ac7f53d2-bfd7-4e62-837a-6476691fc6d5,Map(34 -> Person(Oleg,None,ac7f53d2-bfd7-4e62-837a-6476691fc6d5), 35 -> Person(Oleg2,None,ac7f53d2-bfd7-4e62-837a-6476691fc6d5)))
	(7e135f3b-0f19-4f8f-80a2-6b8bd7b3067e,Map(18 -> Person(Igor,Some(Reference(class models.Person,2c528012-5c35-4d96-a0bc-312e0f658d97,16)),7e135f3b-0f19-4f8f-80a2-6b8bd7b3067e)))
	(f47f0d9a-8e9c-4e43-876e-60159c57c639,Map(21 -> Person(Igor,Some(Reference(class models.Person,2c43a776-9c8c-48b8-9b0f-fb47b70938c6,19)),f47f0d9a-8e9c-4e43-876e-60159c57c639)))
	(a511bbed-3178-44c3-b955-dda4542d266f,Map(3 -> Person(Igor,Some(Reference(class models.Person,b152dc12-0a46-43a9-8e40-45558af516a3,1)),a511bbed-3178-44c3-b955-dda4542d266f)))
	(4c95880b-6b86-4134-be66-4fd452f4c478,Map(22 -> Person(Oleg,None,4c95880b-6b86-4134-be66-4fd452f4c478), 23 -> Person(Oleg2,None,4c95880b-6b86-4134-be66-4fd452f4c478)))
	(dfe0963d-c13c-4e50-bfa8-a4fa53189afc,Map(64 -> Person(Oleg,None,dfe0963d-c13c-4e50-bfa8-a4fa53189afc), 65 -> Person(Oleg2,None,dfe0963d-c13c-4e50-bfa8-a4fa53189afc)))
	(144d6be8-9757-4348-b44d-419308d53f52,Map(24 -> Person(Igor,Some(Reference(class models.Person,4c95880b-6b86-4134-be66-4fd452f4c478,22)),144d6be8-9757-4348-b44d-419308d53f52)))
	(9b95e4f9-07ed-427b-a034-20b676a71b39,Map(69 -> Person(Igor,Some(Reference(class models.Person,cd1b4791-8495-4d62-8260-14aee381f2dc,67)),9b95e4f9-07ed-427b-a034-20b676a71b39)))
	(9303a215-357e-44b4-996b-99f828de803e,Map(78 -> Person(Igor,Some(Reference(class models.Person,10717546-7e0f-4499-8eef-d8f15a331c1a,76)),9303a215-357e-44b4-996b-99f828de803e)))
	(10717546-7e0f-4499-8eef-d8f15a331c1a,Map(76 -> Person(Oleg,None,10717546-7e0f-4499-8eef-d8f15a331c1a), 77 -> Person(Oleg2,None,10717546-7e0f-4499-8eef-d8f15a331c1a)))
	(211886f8-61eb-4a36-82a6-813cdaf3af88,Map(54 -> Person(Igor,Some(Reference(class models.Person,7d666ff0-1d29-4061-aa0a-4143636af93d,52)),211886f8-61eb-4a36-82a6-813cdaf3af88)))
	(7c646382-924b-4a71-8c28-6bfa12a651de,Map(57 -> Person(Igor,Some(Reference(class models.Person,50fa1419-9d71-4e46-b1e7-4e69e3673239,55)),7c646382-924b-4a71-8c28-6bfa12a651de)))
	(2c43a776-9c8c-48b8-9b0f-fb47b70938c6,Map(19 -> Person(Oleg,None,2c43a776-9c8c-48b8-9b0f-fb47b70938c6), 20 -> Person(Oleg2,None,2c43a776-9c8c-48b8-9b0f-fb47b70938c6)))
	(b8dada32-85c7-477a-b027-0b11c3be1e5a,Map(33 -> Person(Igor,Some(Reference(class models.Person,58b10a8d-8fe5-40ce-a2f8-d0f7fedc8ff9,31)),b8dada32-85c7-477a-b027-0b11c3be1e5a)))
	(50fa1419-9d71-4e46-b1e7-4e69e3673239,Map(55 -> Person(Oleg,None,50fa1419-9d71-4e46-b1e7-4e69e3673239), 56 -> Person(Oleg2,None,50fa1419-9d71-4e46-b1e7-4e69e3673239)))
	(b152dc12-0a46-43a9-8e40-45558af516a3,Map(1 -> Person(Oleg,None,b152dc12-0a46-43a9-8e40-45558af516a3), 2 -> Person(Oleg2,None,b152dc12-0a46-43a9-8e40-45558af516a3)))
	(da1f24fa-1116-401f-b79b-7f549caa5b3e,Map(48 -> Person(Igor,Some(Reference(class models.Person,627c6a91-9cd3-457d-9168-06ae39796b6f,46)),da1f24fa-1116-401f-b79b-7f549caa5b3e)))
	(ba2afad6-ba3f-443f-a456-f15ffc17bb1d,Map(63 -> Person(Igor,Some(Reference(class models.Person,74ffbdb4-f7fa-41a6-a672-965a8bb5fc5c,61)),ba2afad6-ba3f-443f-a456-f15ffc17bb1d)))
	(890ae6e0-9342-4a6c-8cb6-d8845d5cf24a,Map(49 -> Person(Oleg,None,890ae6e0-9342-4a6c-8cb6-d8845d5cf24a), 50 -> Person(Oleg2,None,890ae6e0-9342-4a6c-8cb6-d8845d5cf24a)))
	(4557c666-203a-4956-86a6-b80bf8e111d4,Map(7 -> Person(Oleg,None,4557c666-203a-4956-86a6-b80bf8e111d4), 8 -> Person(Oleg2,None,4557c666-203a-4956-86a6-b80bf8e111d4)))
	(24d8957f-aa34-4b40-b37a-242e7aac362f,Map(87 -> Person(Igor,Some(Reference(class models.Person,5e001bc8-7a57-4465-be4b-7a21fee8b643,85)),24d8957f-aa34-4b40-b37a-242e7aac362f)))
	(1fc9e4b3-8ece-4b49-a7f2-739937e11b20,Map(28 -> Person(Oleg,None,1fc9e4b3-8ece-4b49-a7f2-739937e11b20), 29 -> Person(Oleg2,None,1fc9e4b3-8ece-4b49-a7f2-739937e11b20)))
	(cd1b4791-8495-4d62-8260-14aee381f2dc,Map(67 -> Person(Oleg,None,cd1b4791-8495-4d62-8260-14aee381f2dc), 68 -> Person(Oleg2,None,cd1b4791-8495-4d62-8260-14aee381f2dc)))
	(e0979b92-c7f7-4bff-8dbd-4e0087850bf2,Map(73 -> Person(Oleg,None,e0979b92-c7f7-4bff-8dbd-4e0087850bf2), 74 -> Person(Oleg2,None,e0979b92-c7f7-4bff-8dbd-4e0087850bf2)))
	(58b10a8d-8fe5-40ce-a2f8-d0f7fedc8ff9,Map(31 -> Person(Oleg,None,58b10a8d-8fe5-40ce-a2f8-d0f7fedc8ff9), 32 -> Person(Oleg2,None,58b10a8d-8fe5-40ce-a2f8-d0f7fedc8ff9)))
	(d4110a7a-802f-443c-9028-393f67d0be01,Map(27 -> Person(Igor,Some(Reference(class models.Person,526bb594-92b2-4659-8a0b-48a9c489d16d,25)),d4110a7a-802f-443c-9028-393f67d0be01)))
	(d941d144-8e85-4dff-9974-e966228141e0,Map(51 -> Person(Igor,Some(Reference(class models.Person,890ae6e0-9342-4a6c-8cb6-d8845d5cf24a,49)),d941d144-8e85-4dff-9974-e966228141e0)))
	(af760565-7efe-4cb9-a040-8f984a2506f1,Map(10 -> Person(Oleg,None,af760565-7efe-4cb9-a040-8f984a2506f1), 11 -> Person(Oleg2,None,af760565-7efe-4cb9-a040-8f984a2506f1)))
	(063ddb70-8429-410e-9377-d2699364373a,Map(43 -> Person(Oleg,None,063ddb70-8429-410e-9377-d2699364373a), 44 -> Person(Oleg2,None,063ddb70-8429-410e-9377-d2699364373a)))
	(3c7d3452-1a53-4baf-80fb-d9d50d0f7148,Map(70 -> Person(Oleg,None,3c7d3452-1a53-4baf-80fb-d9d50d0f7148), 71 -> Person(Oleg2,None,3c7d3452-1a53-4baf-80fb-d9d50d0f7148)))
	(b4382142-500c-4867-9aa6-8b47a6615961,Map(42 -> Person(Igor,Some(Reference(class models.Person,3ff58834-5051-44be-bd91-03dd3f3ba34a,40)),b4382142-500c-4867-9aa6-8b47a6615961)))
	(a8cfa999-bd16-46e6-bc32-c129b47102b3,Map(81 -> Person(Igor,Some(Reference(class models.Person,0d80c791-982d-4942-a4c2-3a00ee4c0d4a,79)),a8cfa999-bd16-46e6-bc32-c129b47102b3)))
	(3ff58834-5051-44be-bd91-03dd3f3ba34a,Map(40 -> Person(Oleg,None,3ff58834-5051-44be-bd91-03dd3f3ba34a), 41 -> Person(Oleg2,None,3ff58834-5051-44be-bd91-03dd3f3ba34a)))
	(b49c8040-555b-4983-8788-c20d6b3d775f,Map(60 -> Person(Igor,Some(Reference(class models.Person,351d2cd8-38a5-44dc-8d69-a09759b1473c,58)),b49c8040-555b-4983-8788-c20d6b3d775f)))
	(9a5d5a98-6f8b-4680-8d79-43bd1f33dc5e,Map(13 -> Person(Oleg,None,9a5d5a98-6f8b-4680-8d79-43bd1f33dc5e), 14 -> Person(Oleg2,None,9a5d5a98-6f8b-4680-8d79-43bd1f33dc5e)))
	(6923bb4a-4a10-468a-9fc0-b803abc46f18,Map(39 -> Person(Igor,Some(Reference(class models.Person,7f1f564a-a8cc-4c68-9dcf-b117500d420a,37)),6923bb4a-4a10-468a-9fc0-b803abc46f18)))
	(526bb594-92b2-4659-8a0b-48a9c489d16d,Map(25 -> Person(Oleg,None,526bb594-92b2-4659-8a0b-48a9c489d16d), 26 -> Person(Oleg2,None,526bb594-92b2-4659-8a0b-48a9c489d16d)))
	(3eb2cf4f-27a0-43f8-b75e-c6683a13ad89,Map(84 -> Person(Igor,Some(Reference(class models.Person,b187a860-ca4f-48bd-b088-7ad139dae763,82)),3eb2cf4f-27a0-43f8-b75e-c6683a13ad89)))
	(da8d0eae-6b20-475f-a8d0-c6ebd6b864f6,Map(4 -> Person(Oleg,None,da8d0eae-6b20-475f-a8d0-c6ebd6b864f6), 5 -> Person(Oleg2,None,da8d0eae-6b20-475f-a8d0-c6ebd6b864f6)))
	(b187a860-ca4f-48bd-b088-7ad139dae763,Map(82 -> Person(Oleg,None,b187a860-ca4f-48bd-b088-7ad139dae763), 83 -> Person(Oleg2,None,b187a860-ca4f-48bd-b088-7ad139dae763)))
	(24acfedf-ad9c-41a5-8738-6b167b16f927,Map(9 -> Person(Igor,Some(Reference(class models.Person,4557c666-203a-4956-86a6-b80bf8e111d4,7)),24acfedf-ad9c-41a5-8738-6b167b16f927)))
	(22515952-6ec3-481d-8895-de6459909412,Map(72 -> Person(Igor,Some(Reference(class models.Person,3c7d3452-1a53-4baf-80fb-d9d50d0f7148,70)),22515952-6ec3-481d-8895-de6459909412)))
	(6aa2e131-62eb-4b0c-8d45-27d04238c787,Map(15 -> Person(Igor,Some(Reference(class models.Person,9a5d5a98-6f8b-4680-8d79-43bd1f33dc5e,13)),6aa2e131-62eb-4b0c-8d45-27d04238c787)))
	(23adcac6-2981-4fbb-90af-467d9ac11305,Map(75 -> Person(Igor,Some(Reference(class models.Person,e0979b92-c7f7-4bff-8dbd-4e0087850bf2,73)),23adcac6-2981-4fbb-90af-467d9ac11305)))
	(0e022e34-9195-4650-915d-d7542e8ee3e8,Map(36 -> Person(Igor,Some(Reference(class models.Person,ac7f53d2-bfd7-4e62-837a-6476691fc6d5,34)),0e022e34-9195-4650-915d-d7542e8ee3e8)))
	(c9e01a8a-a4a4-4c4b-b19c-bb9b15c9d06d,Map(90 -> Person(Igor,Some(Reference(class models.Person,3aae7534-66b4-4f27-ba3b-62482f0ccf92,88)),c9e01a8a-a4a4-4c4b-b19c-bb9b15c9d06d)))
	(2c528012-5c35-4d96-a0bc-312e0f658d97,Map(16 -> Person(Oleg,None,2c528012-5c35-4d96-a0bc-312e0f658d97), 17 -> Person(Oleg2,None,2c528012-5c35-4d96-a0bc-312e0f658d97)))
	(d81e102f-9259-4a3d-9780-113ecc1d7f32,Map(45 -> Person(Igor,Some(Reference(class models.Person,063ddb70-8429-410e-9377-d2699364373a,43)),d81e102f-9259-4a3d-9780-113ecc1d7f32)))
	(b699f3b3-4067-4d40-8f97-6e183b16311a,Map(6 -> Person(Igor,Some(Reference(class models.Person,da8d0eae-6b20-475f-a8d0-c6ebd6b864f6,4)),b699f3b3-4067-4d40-8f97-6e183b16311a)))
	(627c6a91-9cd3-457d-9168-06ae39796b6f,Map(46 -> Person(Oleg,None,627c6a91-9cd3-457d-9168-06ae39796b6f), 47 -> Person(Oleg2,None,627c6a91-9cd3-457d-9168-06ae39796b6f)))

2017-08-17 17:41:16,157 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bf7766ad-1c4a-451b-a4f9-034419689142'))
2017-08-17 17:41:16,174 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bf7766ad-1c4a-451b-a4f9-034419689142')) with count 1
2017-08-17 17:41:16,176 TRACE [main] Person$[Person] - model kept, creating reference with count 1
2017-08-17 17:41:16,178 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bf7766ad-1c4a-451b-a4f9-034419689142'))
2017-08-17 17:41:16,179 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bf7766ad-1c4a-451b-a4f9-034419689142')) with count 2
2017-08-17 17:41:16,179 TRACE [main] Person$[Person] - model kept, creating reference with count 2
2017-08-17 17:41:16,180 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,bf7766ad-1c4a-451b-a4f9-034419689142,1)),id -> java.util.UUID('a51a5ed6-9904-4bb9-91c9-ddd3b4d5830f'))
2017-08-17 17:41:16,180 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,bf7766ad-1c4a-451b-a4f9-034419689142,1)),id -> java.util.UUID('a51a5ed6-9904-4bb9-91c9-ddd3b4d5830f')) with count 3
2017-08-17 17:41:16,180 TRACE [main] Person$[Person] - model kept, creating reference with count 3
2017-08-17 17:41:16,180 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9930391a-d702-4d74-8bdc-284c0e438259'))
2017-08-17 17:41:16,181 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9930391a-d702-4d74-8bdc-284c0e438259')) with count 4
2017-08-17 17:41:16,181 TRACE [main] Person$[Person] - model kept, creating reference with count 4
2017-08-17 17:41:16,181 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9930391a-d702-4d74-8bdc-284c0e438259'))
2017-08-17 17:41:16,181 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9930391a-d702-4d74-8bdc-284c0e438259')) with count 5
2017-08-17 17:41:16,181 TRACE [main] Person$[Person] - model kept, creating reference with count 5
2017-08-17 17:41:16,182 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,9930391a-d702-4d74-8bdc-284c0e438259,4)),id -> java.util.UUID('377e811f-0397-4f33-bc75-3f93d643b057'))
2017-08-17 17:41:16,182 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,9930391a-d702-4d74-8bdc-284c0e438259,4)),id -> java.util.UUID('377e811f-0397-4f33-bc75-3f93d643b057')) with count 6
2017-08-17 17:41:16,182 TRACE [main] Person$[Person] - model kept, creating reference with count 6
2017-08-17 17:41:16,183 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1a5cfdc1-6d93-411c-afca-4448c771ffbe'))
2017-08-17 17:41:16,183 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1a5cfdc1-6d93-411c-afca-4448c771ffbe')) with count 7
2017-08-17 17:41:16,183 TRACE [main] Person$[Person] - model kept, creating reference with count 7
2017-08-17 17:41:16,183 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1a5cfdc1-6d93-411c-afca-4448c771ffbe'))
2017-08-17 17:41:16,183 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1a5cfdc1-6d93-411c-afca-4448c771ffbe')) with count 8
2017-08-17 17:41:16,184 TRACE [main] Person$[Person] - model kept, creating reference with count 8
2017-08-17 17:41:16,184 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,1a5cfdc1-6d93-411c-afca-4448c771ffbe,7)),id -> java.util.UUID('97bf01f7-1b97-45a6-96f9-f5a0d8cb0911'))
2017-08-17 17:41:16,184 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,1a5cfdc1-6d93-411c-afca-4448c771ffbe,7)),id -> java.util.UUID('97bf01f7-1b97-45a6-96f9-f5a0d8cb0911')) with count 9
2017-08-17 17:41:16,184 TRACE [main] Person$[Person] - model kept, creating reference with count 9
2017-08-17 17:41:16,185 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0735e9b2-a3b4-4753-96e3-b7d3452d5b89'))
2017-08-17 17:41:16,185 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0735e9b2-a3b4-4753-96e3-b7d3452d5b89')) with count 10
2017-08-17 17:41:16,185 TRACE [main] Person$[Person] - model kept, creating reference with count 10
2017-08-17 17:41:16,185 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0735e9b2-a3b4-4753-96e3-b7d3452d5b89'))
2017-08-17 17:41:16,185 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0735e9b2-a3b4-4753-96e3-b7d3452d5b89')) with count 11
2017-08-17 17:41:16,185 TRACE [main] Person$[Person] - model kept, creating reference with count 11
2017-08-17 17:41:16,186 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,0735e9b2-a3b4-4753-96e3-b7d3452d5b89,10)),id -> java.util.UUID('0c2c86eb-9fae-4bb9-a6e1-7c6d19b70544'))
2017-08-17 17:41:16,186 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,0735e9b2-a3b4-4753-96e3-b7d3452d5b89,10)),id -> java.util.UUID('0c2c86eb-9fae-4bb9-a6e1-7c6d19b70544')) with count 12
2017-08-17 17:41:16,186 TRACE [main] Person$[Person] - model kept, creating reference with count 12
2017-08-17 17:41:16,187 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('90967dbb-4dab-4c48-82ee-e0e1d55d230a'))
2017-08-17 17:41:16,187 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('90967dbb-4dab-4c48-82ee-e0e1d55d230a')) with count 13
2017-08-17 17:41:16,187 TRACE [main] Person$[Person] - model kept, creating reference with count 13
2017-08-17 17:41:16,187 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('90967dbb-4dab-4c48-82ee-e0e1d55d230a'))
2017-08-17 17:41:16,188 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('90967dbb-4dab-4c48-82ee-e0e1d55d230a')) with count 14
2017-08-17 17:41:16,188 TRACE [main] Person$[Person] - model kept, creating reference with count 14
2017-08-17 17:41:16,188 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,90967dbb-4dab-4c48-82ee-e0e1d55d230a,13)),id -> java.util.UUID('30b8421a-398d-47de-9243-336ac593cdc4'))
2017-08-17 17:41:16,188 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,90967dbb-4dab-4c48-82ee-e0e1d55d230a,13)),id -> java.util.UUID('30b8421a-398d-47de-9243-336ac593cdc4')) with count 15
2017-08-17 17:41:16,188 TRACE [main] Person$[Person] - model kept, creating reference with count 15
2017-08-17 17:41:16,189 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1f7ca2e0-5bd6-4eb7-9835-f36b16fe3503'))
2017-08-17 17:41:16,189 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1f7ca2e0-5bd6-4eb7-9835-f36b16fe3503')) with count 16
2017-08-17 17:41:16,189 TRACE [main] Person$[Person] - model kept, creating reference with count 16
2017-08-17 17:41:16,189 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1f7ca2e0-5bd6-4eb7-9835-f36b16fe3503'))
2017-08-17 17:41:16,189 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1f7ca2e0-5bd6-4eb7-9835-f36b16fe3503')) with count 17
2017-08-17 17:41:16,189 TRACE [main] Person$[Person] - model kept, creating reference with count 17
2017-08-17 17:41:16,190 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,1f7ca2e0-5bd6-4eb7-9835-f36b16fe3503,16)),id -> java.util.UUID('d5e06e8c-3069-4d3c-af1d-570c6c0d1559'))
2017-08-17 17:41:16,190 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,1f7ca2e0-5bd6-4eb7-9835-f36b16fe3503,16)),id -> java.util.UUID('d5e06e8c-3069-4d3c-af1d-570c6c0d1559')) with count 18
2017-08-17 17:41:16,190 TRACE [main] Person$[Person] - model kept, creating reference with count 18
2017-08-17 17:41:16,191 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5da6cede-dcc0-495f-9535-a75f2b5a5ffc'))
2017-08-17 17:41:16,191 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5da6cede-dcc0-495f-9535-a75f2b5a5ffc')) with count 19
2017-08-17 17:41:16,191 TRACE [main] Person$[Person] - model kept, creating reference with count 19
2017-08-17 17:41:16,192 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5da6cede-dcc0-495f-9535-a75f2b5a5ffc'))
2017-08-17 17:41:16,192 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5da6cede-dcc0-495f-9535-a75f2b5a5ffc')) with count 20
2017-08-17 17:41:16,192 TRACE [main] Person$[Person] - model kept, creating reference with count 20
2017-08-17 17:41:16,192 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,5da6cede-dcc0-495f-9535-a75f2b5a5ffc,19)),id -> java.util.UUID('795be574-87f7-4fa9-9472-ee50ed488128'))
2017-08-17 17:41:16,192 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,5da6cede-dcc0-495f-9535-a75f2b5a5ffc,19)),id -> java.util.UUID('795be574-87f7-4fa9-9472-ee50ed488128')) with count 21
2017-08-17 17:41:16,192 TRACE [main] Person$[Person] - model kept, creating reference with count 21
2017-08-17 17:41:16,193 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d17d42d6-226b-40d1-a499-ef9f5d00f6de'))
2017-08-17 17:41:16,193 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d17d42d6-226b-40d1-a499-ef9f5d00f6de')) with count 22
2017-08-17 17:41:16,193 TRACE [main] Person$[Person] - model kept, creating reference with count 22
2017-08-17 17:41:16,194 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d17d42d6-226b-40d1-a499-ef9f5d00f6de'))
2017-08-17 17:41:16,194 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d17d42d6-226b-40d1-a499-ef9f5d00f6de')) with count 23
2017-08-17 17:41:16,194 TRACE [main] Person$[Person] - model kept, creating reference with count 23
2017-08-17 17:41:16,195 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,d17d42d6-226b-40d1-a499-ef9f5d00f6de,22)),id -> java.util.UUID('756a1ff6-b9a1-48c7-85cd-2445d0284110'))
2017-08-17 17:41:16,195 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,d17d42d6-226b-40d1-a499-ef9f5d00f6de,22)),id -> java.util.UUID('756a1ff6-b9a1-48c7-85cd-2445d0284110')) with count 24
2017-08-17 17:41:16,195 TRACE [main] Person$[Person] - model kept, creating reference with count 24
2017-08-17 17:41:16,195 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7c0583ec-bf33-47c4-bfd4-251dee47289b'))
2017-08-17 17:41:16,195 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7c0583ec-bf33-47c4-bfd4-251dee47289b')) with count 25
2017-08-17 17:41:16,196 TRACE [main] Person$[Person] - model kept, creating reference with count 25
2017-08-17 17:41:16,196 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7c0583ec-bf33-47c4-bfd4-251dee47289b'))
2017-08-17 17:41:16,196 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7c0583ec-bf33-47c4-bfd4-251dee47289b')) with count 26
2017-08-17 17:41:16,196 TRACE [main] Person$[Person] - model kept, creating reference with count 26
2017-08-17 17:41:16,196 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7c0583ec-bf33-47c4-bfd4-251dee47289b,25)),id -> java.util.UUID('8bf7ffd8-d75e-44f1-a3f5-536c9d43372b'))
2017-08-17 17:41:16,197 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7c0583ec-bf33-47c4-bfd4-251dee47289b,25)),id -> java.util.UUID('8bf7ffd8-d75e-44f1-a3f5-536c9d43372b')) with count 27
2017-08-17 17:41:16,197 TRACE [main] Person$[Person] - model kept, creating reference with count 27
2017-08-17 17:41:16,197 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4ca47450-547e-4037-aca9-60f6c3cb8ef2'))
2017-08-17 17:41:16,197 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4ca47450-547e-4037-aca9-60f6c3cb8ef2')) with count 28
2017-08-17 17:41:16,197 TRACE [main] Person$[Person] - model kept, creating reference with count 28
2017-08-17 17:41:16,197 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4ca47450-547e-4037-aca9-60f6c3cb8ef2'))
2017-08-17 17:41:16,198 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4ca47450-547e-4037-aca9-60f6c3cb8ef2')) with count 29
2017-08-17 17:41:16,198 TRACE [main] Person$[Person] - model kept, creating reference with count 29
2017-08-17 17:41:16,198 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,4ca47450-547e-4037-aca9-60f6c3cb8ef2,28)),id -> java.util.UUID('3e15d376-91fa-4aaa-a9b3-454e46280d88'))
2017-08-17 17:41:16,199 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,4ca47450-547e-4037-aca9-60f6c3cb8ef2,28)),id -> java.util.UUID('3e15d376-91fa-4aaa-a9b3-454e46280d88')) with count 30
2017-08-17 17:41:16,199 TRACE [main] Person$[Person] - model kept, creating reference with count 30
2017-08-17 17:41:16,199 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a2bfccef-b07e-4def-9706-6df47fcc13a3'))
2017-08-17 17:41:16,199 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a2bfccef-b07e-4def-9706-6df47fcc13a3')) with count 31
2017-08-17 17:41:16,199 TRACE [main] Person$[Person] - model kept, creating reference with count 31
2017-08-17 17:41:16,200 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a2bfccef-b07e-4def-9706-6df47fcc13a3'))
2017-08-17 17:41:16,200 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a2bfccef-b07e-4def-9706-6df47fcc13a3')) with count 32
2017-08-17 17:41:16,200 TRACE [main] Person$[Person] - model kept, creating reference with count 32
2017-08-17 17:41:16,200 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a2bfccef-b07e-4def-9706-6df47fcc13a3,31)),id -> java.util.UUID('e73bb3b3-651d-4c12-bc4f-987c23099efa'))
2017-08-17 17:41:16,200 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a2bfccef-b07e-4def-9706-6df47fcc13a3,31)),id -> java.util.UUID('e73bb3b3-651d-4c12-bc4f-987c23099efa')) with count 33
2017-08-17 17:41:16,200 TRACE [main] Person$[Person] - model kept, creating reference with count 33
2017-08-17 17:41:16,201 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('91e8e19f-6d85-401f-941e-21e9b801118e'))
2017-08-17 17:41:16,201 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('91e8e19f-6d85-401f-941e-21e9b801118e')) with count 34
2017-08-17 17:41:16,201 TRACE [main] Person$[Person] - model kept, creating reference with count 34
2017-08-17 17:41:16,202 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('91e8e19f-6d85-401f-941e-21e9b801118e'))
2017-08-17 17:41:16,202 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('91e8e19f-6d85-401f-941e-21e9b801118e')) with count 35
2017-08-17 17:41:16,202 TRACE [main] Person$[Person] - model kept, creating reference with count 35
2017-08-17 17:41:16,202 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,91e8e19f-6d85-401f-941e-21e9b801118e,34)),id -> java.util.UUID('d004a325-35e5-45b5-ba8f-4c01b32194d3'))
2017-08-17 17:41:16,202 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,91e8e19f-6d85-401f-941e-21e9b801118e,34)),id -> java.util.UUID('d004a325-35e5-45b5-ba8f-4c01b32194d3')) with count 36
2017-08-17 17:41:16,203 TRACE [main] Person$[Person] - model kept, creating reference with count 36
2017-08-17 17:41:16,203 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2b2f5e65-2093-4ca8-aea6-bb72b919895e'))
2017-08-17 17:41:16,203 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2b2f5e65-2093-4ca8-aea6-bb72b919895e')) with count 37
2017-08-17 17:41:16,203 TRACE [main] Person$[Person] - model kept, creating reference with count 37
2017-08-17 17:41:16,203 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2b2f5e65-2093-4ca8-aea6-bb72b919895e'))
2017-08-17 17:41:16,203 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2b2f5e65-2093-4ca8-aea6-bb72b919895e')) with count 38
2017-08-17 17:41:16,204 TRACE [main] Person$[Person] - model kept, creating reference with count 38
2017-08-17 17:41:16,204 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,2b2f5e65-2093-4ca8-aea6-bb72b919895e,37)),id -> java.util.UUID('c9499f77-e737-4406-b9ee-cd29b2e17bd4'))
2017-08-17 17:41:16,204 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,2b2f5e65-2093-4ca8-aea6-bb72b919895e,37)),id -> java.util.UUID('c9499f77-e737-4406-b9ee-cd29b2e17bd4')) with count 39
2017-08-17 17:41:16,204 TRACE [main] Person$[Person] - model kept, creating reference with count 39
2017-08-17 17:41:16,204 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('84a42215-7d1a-4146-8345-cb0356b47847'))
2017-08-17 17:41:16,204 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('84a42215-7d1a-4146-8345-cb0356b47847')) with count 40
2017-08-17 17:41:16,205 TRACE [main] Person$[Person] - model kept, creating reference with count 40
2017-08-17 17:41:16,205 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('84a42215-7d1a-4146-8345-cb0356b47847'))
2017-08-17 17:41:16,205 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('84a42215-7d1a-4146-8345-cb0356b47847')) with count 41
2017-08-17 17:41:16,205 TRACE [main] Person$[Person] - model kept, creating reference with count 41
2017-08-17 17:41:16,205 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,84a42215-7d1a-4146-8345-cb0356b47847,40)),id -> java.util.UUID('3ecd0888-ba7d-4d4a-830f-29dbf36100fc'))
2017-08-17 17:41:16,206 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,84a42215-7d1a-4146-8345-cb0356b47847,40)),id -> java.util.UUID('3ecd0888-ba7d-4d4a-830f-29dbf36100fc')) with count 42
2017-08-17 17:41:16,206 TRACE [main] Person$[Person] - model kept, creating reference with count 42
2017-08-17 17:41:16,206 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5e3be7eb-c7a6-428d-8cab-0a7be190dd29'))
2017-08-17 17:41:16,206 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5e3be7eb-c7a6-428d-8cab-0a7be190dd29')) with count 43
2017-08-17 17:41:16,206 TRACE [main] Person$[Person] - model kept, creating reference with count 43
2017-08-17 17:41:16,207 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5e3be7eb-c7a6-428d-8cab-0a7be190dd29'))
2017-08-17 17:41:16,207 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5e3be7eb-c7a6-428d-8cab-0a7be190dd29')) with count 44
2017-08-17 17:41:16,207 TRACE [main] Person$[Person] - model kept, creating reference with count 44
2017-08-17 17:41:16,207 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,5e3be7eb-c7a6-428d-8cab-0a7be190dd29,43)),id -> java.util.UUID('6dbe8f40-3780-4509-aa9d-197140b7d43d'))
2017-08-17 17:41:16,207 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,5e3be7eb-c7a6-428d-8cab-0a7be190dd29,43)),id -> java.util.UUID('6dbe8f40-3780-4509-aa9d-197140b7d43d')) with count 45
2017-08-17 17:41:16,207 TRACE [main] Person$[Person] - model kept, creating reference with count 45
2017-08-17 17:41:16,208 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3e73d46c-998e-4303-bb78-3ea6b2a180c9'))
2017-08-17 17:41:16,208 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3e73d46c-998e-4303-bb78-3ea6b2a180c9')) with count 46
2017-08-17 17:41:16,208 TRACE [main] Person$[Person] - model kept, creating reference with count 46
2017-08-17 17:41:16,208 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3e73d46c-998e-4303-bb78-3ea6b2a180c9'))
2017-08-17 17:41:16,208 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3e73d46c-998e-4303-bb78-3ea6b2a180c9')) with count 47
2017-08-17 17:41:16,208 TRACE [main] Person$[Person] - model kept, creating reference with count 47
2017-08-17 17:41:16,209 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,3e73d46c-998e-4303-bb78-3ea6b2a180c9,46)),id -> java.util.UUID('95da3889-6ac8-441a-b3dc-4e693aa3d4de'))
2017-08-17 17:41:16,209 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,3e73d46c-998e-4303-bb78-3ea6b2a180c9,46)),id -> java.util.UUID('95da3889-6ac8-441a-b3dc-4e693aa3d4de')) with count 48
2017-08-17 17:41:16,209 TRACE [main] Person$[Person] - model kept, creating reference with count 48
2017-08-17 17:41:16,210 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cc7688d4-1500-4e6f-88b0-1bd80f690efd'))
2017-08-17 17:41:16,210 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cc7688d4-1500-4e6f-88b0-1bd80f690efd')) with count 49
2017-08-17 17:41:16,210 TRACE [main] Person$[Person] - model kept, creating reference with count 49
2017-08-17 17:41:16,210 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cc7688d4-1500-4e6f-88b0-1bd80f690efd'))
2017-08-17 17:41:16,210 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cc7688d4-1500-4e6f-88b0-1bd80f690efd')) with count 50
2017-08-17 17:41:16,211 TRACE [main] Person$[Person] - model kept, creating reference with count 50
2017-08-17 17:41:16,211 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,cc7688d4-1500-4e6f-88b0-1bd80f690efd,49)),id -> java.util.UUID('023f7954-4d73-400a-94eb-170e0fe85cb0'))
2017-08-17 17:41:16,211 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,cc7688d4-1500-4e6f-88b0-1bd80f690efd,49)),id -> java.util.UUID('023f7954-4d73-400a-94eb-170e0fe85cb0')) with count 51
2017-08-17 17:41:16,211 TRACE [main] Person$[Person] - model kept, creating reference with count 51
2017-08-17 17:41:16,212 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7ea3cff6-e1be-463f-b2af-721b0f592bfb'))
2017-08-17 17:41:16,212 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7ea3cff6-e1be-463f-b2af-721b0f592bfb')) with count 52
2017-08-17 17:41:16,212 TRACE [main] Person$[Person] - model kept, creating reference with count 52
2017-08-17 17:41:16,212 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7ea3cff6-e1be-463f-b2af-721b0f592bfb'))
2017-08-17 17:41:16,213 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7ea3cff6-e1be-463f-b2af-721b0f592bfb')) with count 53
2017-08-17 17:41:16,213 TRACE [main] Person$[Person] - model kept, creating reference with count 53
2017-08-17 17:41:16,213 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7ea3cff6-e1be-463f-b2af-721b0f592bfb,52)),id -> java.util.UUID('c92c6f07-457c-4acf-b698-94e6f739d80b'))
2017-08-17 17:41:16,213 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7ea3cff6-e1be-463f-b2af-721b0f592bfb,52)),id -> java.util.UUID('c92c6f07-457c-4acf-b698-94e6f739d80b')) with count 54
2017-08-17 17:41:16,213 TRACE [main] Person$[Person] - model kept, creating reference with count 54
2017-08-17 17:41:16,214 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a759c822-90a9-474c-afa9-3bb93a24d041'))
2017-08-17 17:41:16,214 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a759c822-90a9-474c-afa9-3bb93a24d041')) with count 55
2017-08-17 17:41:16,214 TRACE [main] Person$[Person] - model kept, creating reference with count 55
2017-08-17 17:41:16,214 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a759c822-90a9-474c-afa9-3bb93a24d041'))
2017-08-17 17:41:16,214 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a759c822-90a9-474c-afa9-3bb93a24d041')) with count 56
2017-08-17 17:41:16,214 TRACE [main] Person$[Person] - model kept, creating reference with count 56
2017-08-17 17:41:16,215 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a759c822-90a9-474c-afa9-3bb93a24d041,55)),id -> java.util.UUID('1d151031-e8a2-4301-a722-dd4671ea5092'))
2017-08-17 17:41:16,215 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a759c822-90a9-474c-afa9-3bb93a24d041,55)),id -> java.util.UUID('1d151031-e8a2-4301-a722-dd4671ea5092')) with count 57
2017-08-17 17:41:16,215 TRACE [main] Person$[Person] - model kept, creating reference with count 57
2017-08-17 17:41:16,215 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8e132d90-9d9c-47e9-ba37-2344c0f55c5a'))
2017-08-17 17:41:16,216 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8e132d90-9d9c-47e9-ba37-2344c0f55c5a')) with count 58
2017-08-17 17:41:16,216 TRACE [main] Person$[Person] - model kept, creating reference with count 58
2017-08-17 17:41:16,216 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8e132d90-9d9c-47e9-ba37-2344c0f55c5a'))
2017-08-17 17:41:16,216 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8e132d90-9d9c-47e9-ba37-2344c0f55c5a')) with count 59
2017-08-17 17:41:16,216 TRACE [main] Person$[Person] - model kept, creating reference with count 59
2017-08-17 17:41:16,217 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,8e132d90-9d9c-47e9-ba37-2344c0f55c5a,58)),id -> java.util.UUID('a243d15f-ea2d-4b0f-99eb-fd2ed7a48e7c'))
2017-08-17 17:41:16,217 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,8e132d90-9d9c-47e9-ba37-2344c0f55c5a,58)),id -> java.util.UUID('a243d15f-ea2d-4b0f-99eb-fd2ed7a48e7c')) with count 60
2017-08-17 17:41:16,217 TRACE [main] Person$[Person] - model kept, creating reference with count 60
2017-08-17 17:41:16,217 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c9ea938c-aa10-4ecd-ab03-d2ef0d51260b'))
2017-08-17 17:41:16,218 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c9ea938c-aa10-4ecd-ab03-d2ef0d51260b')) with count 61
2017-08-17 17:41:16,218 TRACE [main] Person$[Person] - model kept, creating reference with count 61
2017-08-17 17:41:16,218 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c9ea938c-aa10-4ecd-ab03-d2ef0d51260b'))
2017-08-17 17:41:16,218 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c9ea938c-aa10-4ecd-ab03-d2ef0d51260b')) with count 62
2017-08-17 17:41:16,218 TRACE [main] Person$[Person] - model kept, creating reference with count 62
2017-08-17 17:41:16,219 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,c9ea938c-aa10-4ecd-ab03-d2ef0d51260b,61)),id -> java.util.UUID('44020d5e-cddb-49ec-8cc6-0823eb948d95'))
2017-08-17 17:41:16,219 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,c9ea938c-aa10-4ecd-ab03-d2ef0d51260b,61)),id -> java.util.UUID('44020d5e-cddb-49ec-8cc6-0823eb948d95')) with count 63
2017-08-17 17:41:16,219 TRACE [main] Person$[Person] - model kept, creating reference with count 63
2017-08-17 17:41:16,220 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('27799bfd-7a49-45e8-bc0a-ff1ed74d3a9a'))
2017-08-17 17:41:16,220 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('27799bfd-7a49-45e8-bc0a-ff1ed74d3a9a')) with count 64
2017-08-17 17:41:16,220 TRACE [main] Person$[Person] - model kept, creating reference with count 64
2017-08-17 17:41:16,220 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('27799bfd-7a49-45e8-bc0a-ff1ed74d3a9a'))
2017-08-17 17:41:16,220 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('27799bfd-7a49-45e8-bc0a-ff1ed74d3a9a')) with count 65
2017-08-17 17:41:16,220 TRACE [main] Person$[Person] - model kept, creating reference with count 65
2017-08-17 17:41:16,221 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,27799bfd-7a49-45e8-bc0a-ff1ed74d3a9a,64)),id -> java.util.UUID('1a4e722d-f78b-4abc-8e36-7b3e75a5c9df'))
2017-08-17 17:41:16,221 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,27799bfd-7a49-45e8-bc0a-ff1ed74d3a9a,64)),id -> java.util.UUID('1a4e722d-f78b-4abc-8e36-7b3e75a5c9df')) with count 66
2017-08-17 17:41:16,221 TRACE [main] Person$[Person] - model kept, creating reference with count 66
2017-08-17 17:41:16,221 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7bad602e-586f-4803-8fc1-d3dc27a661c9'))
2017-08-17 17:41:16,221 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7bad602e-586f-4803-8fc1-d3dc27a661c9')) with count 67
2017-08-17 17:41:16,221 TRACE [main] Person$[Person] - model kept, creating reference with count 67
2017-08-17 17:41:16,222 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7bad602e-586f-4803-8fc1-d3dc27a661c9'))
2017-08-17 17:41:16,222 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7bad602e-586f-4803-8fc1-d3dc27a661c9')) with count 68
2017-08-17 17:41:16,222 TRACE [main] Person$[Person] - model kept, creating reference with count 68
2017-08-17 17:41:16,222 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7bad602e-586f-4803-8fc1-d3dc27a661c9,67)),id -> java.util.UUID('b892a4b0-2ab2-465f-b46b-665499eb3022'))
2017-08-17 17:41:16,222 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7bad602e-586f-4803-8fc1-d3dc27a661c9,67)),id -> java.util.UUID('b892a4b0-2ab2-465f-b46b-665499eb3022')) with count 69
2017-08-17 17:41:16,222 TRACE [main] Person$[Person] - model kept, creating reference with count 69
2017-08-17 17:41:16,222 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b9cbd95e-49f9-475e-9921-eef5c0ef547b'))
2017-08-17 17:41:16,222 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b9cbd95e-49f9-475e-9921-eef5c0ef547b')) with count 70
2017-08-17 17:41:16,223 TRACE [main] Person$[Person] - model kept, creating reference with count 70
2017-08-17 17:41:16,223 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b9cbd95e-49f9-475e-9921-eef5c0ef547b'))
2017-08-17 17:41:16,223 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b9cbd95e-49f9-475e-9921-eef5c0ef547b')) with count 71
2017-08-17 17:41:16,223 TRACE [main] Person$[Person] - model kept, creating reference with count 71
2017-08-17 17:41:16,223 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,b9cbd95e-49f9-475e-9921-eef5c0ef547b,70)),id -> java.util.UUID('e4d5664c-586a-486c-83bc-2a9513e5be69'))
2017-08-17 17:41:16,223 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,b9cbd95e-49f9-475e-9921-eef5c0ef547b,70)),id -> java.util.UUID('e4d5664c-586a-486c-83bc-2a9513e5be69')) with count 72
2017-08-17 17:41:16,223 TRACE [main] Person$[Person] - model kept, creating reference with count 72
2017-08-17 17:41:16,224 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('99f67748-59f5-4c5a-8dc6-1848d97d22fc'))
2017-08-17 17:41:16,224 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('99f67748-59f5-4c5a-8dc6-1848d97d22fc')) with count 73
2017-08-17 17:41:16,224 TRACE [main] Person$[Person] - model kept, creating reference with count 73
2017-08-17 17:41:16,224 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('99f67748-59f5-4c5a-8dc6-1848d97d22fc'))
2017-08-17 17:41:16,224 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('99f67748-59f5-4c5a-8dc6-1848d97d22fc')) with count 74
2017-08-17 17:41:16,224 TRACE [main] Person$[Person] - model kept, creating reference with count 74
2017-08-17 17:41:16,224 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,99f67748-59f5-4c5a-8dc6-1848d97d22fc,73)),id -> java.util.UUID('76adfdfb-637f-426e-8f64-db60aeda046d'))
2017-08-17 17:41:16,224 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,99f67748-59f5-4c5a-8dc6-1848d97d22fc,73)),id -> java.util.UUID('76adfdfb-637f-426e-8f64-db60aeda046d')) with count 75
2017-08-17 17:41:16,224 TRACE [main] Person$[Person] - model kept, creating reference with count 75
2017-08-17 17:41:16,225 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('62af3b74-f8ab-454b-b01e-d1f2b6913cc6'))
2017-08-17 17:41:16,225 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('62af3b74-f8ab-454b-b01e-d1f2b6913cc6')) with count 76
2017-08-17 17:41:16,225 TRACE [main] Person$[Person] - model kept, creating reference with count 76
2017-08-17 17:41:16,225 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('62af3b74-f8ab-454b-b01e-d1f2b6913cc6'))
2017-08-17 17:41:16,225 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('62af3b74-f8ab-454b-b01e-d1f2b6913cc6')) with count 77
2017-08-17 17:41:16,225 TRACE [main] Person$[Person] - model kept, creating reference with count 77
2017-08-17 17:41:16,226 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,62af3b74-f8ab-454b-b01e-d1f2b6913cc6,76)),id -> java.util.UUID('132d7a87-06a2-42b4-9d86-800df15f3d79'))
2017-08-17 17:41:16,226 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,62af3b74-f8ab-454b-b01e-d1f2b6913cc6,76)),id -> java.util.UUID('132d7a87-06a2-42b4-9d86-800df15f3d79')) with count 78
2017-08-17 17:41:16,226 TRACE [main] Person$[Person] - model kept, creating reference with count 78
2017-08-17 17:41:16,226 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d443cb6b-d48c-4a52-85f6-f4a91430552b'))
2017-08-17 17:41:16,226 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d443cb6b-d48c-4a52-85f6-f4a91430552b')) with count 79
2017-08-17 17:41:16,226 TRACE [main] Person$[Person] - model kept, creating reference with count 79
2017-08-17 17:41:16,226 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d443cb6b-d48c-4a52-85f6-f4a91430552b'))
2017-08-17 17:41:16,226 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d443cb6b-d48c-4a52-85f6-f4a91430552b')) with count 80
2017-08-17 17:41:16,227 TRACE [main] Person$[Person] - model kept, creating reference with count 80
2017-08-17 17:41:16,227 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,d443cb6b-d48c-4a52-85f6-f4a91430552b,79)),id -> java.util.UUID('dae704a0-b052-43e4-8524-7293767a0940'))
2017-08-17 17:41:16,227 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,d443cb6b-d48c-4a52-85f6-f4a91430552b,79)),id -> java.util.UUID('dae704a0-b052-43e4-8524-7293767a0940')) with count 81
2017-08-17 17:41:16,227 TRACE [main] Person$[Person] - model kept, creating reference with count 81
2017-08-17 17:41:16,227 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0911ffa9-90d8-43ec-91ca-6ed72b9676e9'))
2017-08-17 17:41:16,227 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0911ffa9-90d8-43ec-91ca-6ed72b9676e9')) with count 82
2017-08-17 17:41:16,228 TRACE [main] Person$[Person] - model kept, creating reference with count 82
2017-08-17 17:41:16,228 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0911ffa9-90d8-43ec-91ca-6ed72b9676e9'))
2017-08-17 17:41:16,228 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0911ffa9-90d8-43ec-91ca-6ed72b9676e9')) with count 83
2017-08-17 17:41:16,228 TRACE [main] Person$[Person] - model kept, creating reference with count 83
2017-08-17 17:41:16,228 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,0911ffa9-90d8-43ec-91ca-6ed72b9676e9,82)),id -> java.util.UUID('ccdcc159-8954-4eb2-bc50-4fdb789048c0'))
2017-08-17 17:41:16,228 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,0911ffa9-90d8-43ec-91ca-6ed72b9676e9,82)),id -> java.util.UUID('ccdcc159-8954-4eb2-bc50-4fdb789048c0')) with count 84
2017-08-17 17:41:16,228 TRACE [main] Person$[Person] - model kept, creating reference with count 84
2017-08-17 17:41:16,229 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a387e777-43ac-4f00-b088-605b234d030a'))
2017-08-17 17:41:16,229 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a387e777-43ac-4f00-b088-605b234d030a')) with count 85
2017-08-17 17:41:16,229 TRACE [main] Person$[Person] - model kept, creating reference with count 85
2017-08-17 17:41:16,230 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a387e777-43ac-4f00-b088-605b234d030a'))
2017-08-17 17:41:16,230 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a387e777-43ac-4f00-b088-605b234d030a')) with count 86
2017-08-17 17:41:16,230 TRACE [main] Person$[Person] - model kept, creating reference with count 86
2017-08-17 17:41:16,230 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a387e777-43ac-4f00-b088-605b234d030a,85)),id -> java.util.UUID('ca95be6b-9ddb-4834-af03-191b7712072e'))
2017-08-17 17:41:16,231 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a387e777-43ac-4f00-b088-605b234d030a,85)),id -> java.util.UUID('ca95be6b-9ddb-4834-af03-191b7712072e')) with count 87
2017-08-17 17:41:16,231 TRACE [main] Person$[Person] - model kept, creating reference with count 87
2017-08-17 17:41:16,231 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9f158978-1ee2-4e91-8e81-c2bc16f0f105'))
2017-08-17 17:41:16,231 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9f158978-1ee2-4e91-8e81-c2bc16f0f105')) with count 88
2017-08-17 17:41:16,231 TRACE [main] Person$[Person] - model kept, creating reference with count 88
2017-08-17 17:41:16,232 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9f158978-1ee2-4e91-8e81-c2bc16f0f105'))
2017-08-17 17:41:16,232 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9f158978-1ee2-4e91-8e81-c2bc16f0f105')) with count 89
2017-08-17 17:41:16,232 TRACE [main] Person$[Person] - model kept, creating reference with count 89
2017-08-17 17:41:16,232 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,9f158978-1ee2-4e91-8e81-c2bc16f0f105,88)),id -> java.util.UUID('0f20568a-8fc3-4664-828c-7c845d107de2'))
2017-08-17 17:41:16,232 TRACE [main] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,9f158978-1ee2-4e91-8e81-c2bc16f0f105,88)),id -> java.util.UUID('0f20568a-8fc3-4664-828c-7c845d107de2')) with count 90
2017-08-17 17:41:16,233 TRACE [main] Person$[Person] - model kept, creating reference with count 90
2017-08-17 17:41:17,233 INFO  [main] Counter[Person] - counter is 90
2017-08-17 17:41:17,236 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(90967dbb-4dab-4c48-82ee-e0e1d55d230a,Map(13 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('90967dbb-4dab-4c48-82ee-e0e1d55d230a')), 14 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('90967dbb-4dab-4c48-82ee-e0e1d55d230a'))))
	(b9cbd95e-49f9-475e-9921-eef5c0ef547b,Map(70 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b9cbd95e-49f9-475e-9921-eef5c0ef547b')), 71 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b9cbd95e-49f9-475e-9921-eef5c0ef547b'))))
	(a243d15f-ea2d-4b0f-99eb-fd2ed7a48e7c,Map(60 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,8e132d90-9d9c-47e9-ba37-2344c0f55c5a,58)),id -> java.util.UUID('a243d15f-ea2d-4b0f-99eb-fd2ed7a48e7c'))))
	(1d151031-e8a2-4301-a722-dd4671ea5092,Map(57 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a759c822-90a9-474c-afa9-3bb93a24d041,55)),id -> java.util.UUID('1d151031-e8a2-4301-a722-dd4671ea5092'))))
	(3e15d376-91fa-4aaa-a9b3-454e46280d88,Map(30 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,4ca47450-547e-4037-aca9-60f6c3cb8ef2,28)),id -> java.util.UUID('3e15d376-91fa-4aaa-a9b3-454e46280d88'))))
	(8bf7ffd8-d75e-44f1-a3f5-536c9d43372b,Map(27 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7c0583ec-bf33-47c4-bfd4-251dee47289b,25)),id -> java.util.UUID('8bf7ffd8-d75e-44f1-a3f5-536c9d43372b'))))
	(b892a4b0-2ab2-465f-b46b-665499eb3022,Map(69 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7bad602e-586f-4803-8fc1-d3dc27a661c9,67)),id -> java.util.UUID('b892a4b0-2ab2-465f-b46b-665499eb3022'))))
	(1a4e722d-f78b-4abc-8e36-7b3e75a5c9df,Map(66 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,27799bfd-7a49-45e8-bc0a-ff1ed74d3a9a,64)),id -> java.util.UUID('1a4e722d-f78b-4abc-8e36-7b3e75a5c9df'))))
	(4ca47450-547e-4037-aca9-60f6c3cb8ef2,Map(28 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4ca47450-547e-4037-aca9-60f6c3cb8ef2')), 29 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4ca47450-547e-4037-aca9-60f6c3cb8ef2'))))
	(d004a325-35e5-45b5-ba8f-4c01b32194d3,Map(36 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,91e8e19f-6d85-401f-941e-21e9b801118e,34)),id -> java.util.UUID('d004a325-35e5-45b5-ba8f-4c01b32194d3'))))
	(0f20568a-8fc3-4664-828c-7c845d107de2,Map(90 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,9f158978-1ee2-4e91-8e81-c2bc16f0f105,88)),id -> java.util.UUID('0f20568a-8fc3-4664-828c-7c845d107de2'))))
	(d443cb6b-d48c-4a52-85f6-f4a91430552b,Map(79 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d443cb6b-d48c-4a52-85f6-f4a91430552b')), 80 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d443cb6b-d48c-4a52-85f6-f4a91430552b'))))
	(99f67748-59f5-4c5a-8dc6-1848d97d22fc,Map(73 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('99f67748-59f5-4c5a-8dc6-1848d97d22fc')), 74 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('99f67748-59f5-4c5a-8dc6-1848d97d22fc'))))
	(2b2f5e65-2093-4ca8-aea6-bb72b919895e,Map(37 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2b2f5e65-2093-4ca8-aea6-bb72b919895e')), 38 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2b2f5e65-2093-4ca8-aea6-bb72b919895e'))))
	(1a5cfdc1-6d93-411c-afca-4448c771ffbe,Map(7 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1a5cfdc1-6d93-411c-afca-4448c771ffbe')), 8 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1a5cfdc1-6d93-411c-afca-4448c771ffbe'))))
	(7ea3cff6-e1be-463f-b2af-721b0f592bfb,Map(52 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7ea3cff6-e1be-463f-b2af-721b0f592bfb')), 53 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7ea3cff6-e1be-463f-b2af-721b0f592bfb'))))
	(8e132d90-9d9c-47e9-ba37-2344c0f55c5a,Map(58 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8e132d90-9d9c-47e9-ba37-2344c0f55c5a')), 59 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8e132d90-9d9c-47e9-ba37-2344c0f55c5a'))))
	(132d7a87-06a2-42b4-9d86-800df15f3d79,Map(78 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,62af3b74-f8ab-454b-b01e-d1f2b6913cc6,76)),id -> java.util.UUID('132d7a87-06a2-42b4-9d86-800df15f3d79'))))
	(7bad602e-586f-4803-8fc1-d3dc27a661c9,Map(67 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7bad602e-586f-4803-8fc1-d3dc27a661c9')), 68 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7bad602e-586f-4803-8fc1-d3dc27a661c9'))))
	(dae704a0-b052-43e4-8524-7293767a0940,Map(81 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,d443cb6b-d48c-4a52-85f6-f4a91430552b,79)),id -> java.util.UUID('dae704a0-b052-43e4-8524-7293767a0940'))))
	(0c2c86eb-9fae-4bb9-a6e1-7c6d19b70544,Map(12 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,0735e9b2-a3b4-4753-96e3-b7d3452d5b89,10)),id -> java.util.UUID('0c2c86eb-9fae-4bb9-a6e1-7c6d19b70544'))))
	(95da3889-6ac8-441a-b3dc-4e693aa3d4de,Map(48 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,3e73d46c-998e-4303-bb78-3ea6b2a180c9,46)),id -> java.util.UUID('95da3889-6ac8-441a-b3dc-4e693aa3d4de'))))
	(7c0583ec-bf33-47c4-bfd4-251dee47289b,Map(25 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7c0583ec-bf33-47c4-bfd4-251dee47289b')), 26 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7c0583ec-bf33-47c4-bfd4-251dee47289b'))))
	(1f7ca2e0-5bd6-4eb7-9835-f36b16fe3503,Map(16 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1f7ca2e0-5bd6-4eb7-9835-f36b16fe3503')), 17 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1f7ca2e0-5bd6-4eb7-9835-f36b16fe3503'))))
	(5e3be7eb-c7a6-428d-8cab-0a7be190dd29,Map(43 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5e3be7eb-c7a6-428d-8cab-0a7be190dd29')), 44 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5e3be7eb-c7a6-428d-8cab-0a7be190dd29'))))
	(d17d42d6-226b-40d1-a499-ef9f5d00f6de,Map(22 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d17d42d6-226b-40d1-a499-ef9f5d00f6de')), 23 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d17d42d6-226b-40d1-a499-ef9f5d00f6de'))))
	(795be574-87f7-4fa9-9472-ee50ed488128,Map(21 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,5da6cede-dcc0-495f-9535-a75f2b5a5ffc,19)),id -> java.util.UUID('795be574-87f7-4fa9-9472-ee50ed488128'))))
	(e4d5664c-586a-486c-83bc-2a9513e5be69,Map(72 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,b9cbd95e-49f9-475e-9921-eef5c0ef547b,70)),id -> java.util.UUID('e4d5664c-586a-486c-83bc-2a9513e5be69'))))
	(ca95be6b-9ddb-4834-af03-191b7712072e,Map(87 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a387e777-43ac-4f00-b088-605b234d030a,85)),id -> java.util.UUID('ca95be6b-9ddb-4834-af03-191b7712072e'))))
	(62af3b74-f8ab-454b-b01e-d1f2b6913cc6,Map(76 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('62af3b74-f8ab-454b-b01e-d1f2b6913cc6')), 77 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('62af3b74-f8ab-454b-b01e-d1f2b6913cc6'))))
	(c92c6f07-457c-4acf-b698-94e6f739d80b,Map(54 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7ea3cff6-e1be-463f-b2af-721b0f592bfb,52)),id -> java.util.UUID('c92c6f07-457c-4acf-b698-94e6f739d80b'))))
	(27799bfd-7a49-45e8-bc0a-ff1ed74d3a9a,Map(64 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('27799bfd-7a49-45e8-bc0a-ff1ed74d3a9a')), 65 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('27799bfd-7a49-45e8-bc0a-ff1ed74d3a9a'))))
	(cc7688d4-1500-4e6f-88b0-1bd80f690efd,Map(49 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cc7688d4-1500-4e6f-88b0-1bd80f690efd')), 50 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cc7688d4-1500-4e6f-88b0-1bd80f690efd'))))
	(a387e777-43ac-4f00-b088-605b234d030a,Map(85 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a387e777-43ac-4f00-b088-605b234d030a')), 86 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a387e777-43ac-4f00-b088-605b234d030a'))))
	(97bf01f7-1b97-45a6-96f9-f5a0d8cb0911,Map(9 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,1a5cfdc1-6d93-411c-afca-4448c771ffbe,7)),id -> java.util.UUID('97bf01f7-1b97-45a6-96f9-f5a0d8cb0911'))))
	(9f158978-1ee2-4e91-8e81-c2bc16f0f105,Map(88 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9f158978-1ee2-4e91-8e81-c2bc16f0f105')), 89 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9f158978-1ee2-4e91-8e81-c2bc16f0f105'))))
	(bf7766ad-1c4a-451b-a4f9-034419689142,Map(1 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bf7766ad-1c4a-451b-a4f9-034419689142')), 2 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bf7766ad-1c4a-451b-a4f9-034419689142'))))
	(d5e06e8c-3069-4d3c-af1d-570c6c0d1559,Map(18 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,1f7ca2e0-5bd6-4eb7-9835-f36b16fe3503,16)),id -> java.util.UUID('d5e06e8c-3069-4d3c-af1d-570c6c0d1559'))))
	(30b8421a-398d-47de-9243-336ac593cdc4,Map(15 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,90967dbb-4dab-4c48-82ee-e0e1d55d230a,13)),id -> java.util.UUID('30b8421a-398d-47de-9243-336ac593cdc4'))))
	(3e73d46c-998e-4303-bb78-3ea6b2a180c9,Map(46 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3e73d46c-998e-4303-bb78-3ea6b2a180c9')), 47 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3e73d46c-998e-4303-bb78-3ea6b2a180c9'))))
	(023f7954-4d73-400a-94eb-170e0fe85cb0,Map(51 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,cc7688d4-1500-4e6f-88b0-1bd80f690efd,49)),id -> java.util.UUID('023f7954-4d73-400a-94eb-170e0fe85cb0'))))
	(91e8e19f-6d85-401f-941e-21e9b801118e,Map(34 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('91e8e19f-6d85-401f-941e-21e9b801118e')), 35 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('91e8e19f-6d85-401f-941e-21e9b801118e'))))
	(3ecd0888-ba7d-4d4a-830f-29dbf36100fc,Map(42 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,84a42215-7d1a-4146-8345-cb0356b47847,40)),id -> java.util.UUID('3ecd0888-ba7d-4d4a-830f-29dbf36100fc'))))
	(e73bb3b3-651d-4c12-bc4f-987c23099efa,Map(33 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a2bfccef-b07e-4def-9706-6df47fcc13a3,31)),id -> java.util.UUID('e73bb3b3-651d-4c12-bc4f-987c23099efa'))))
	(ccdcc159-8954-4eb2-bc50-4fdb789048c0,Map(84 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,0911ffa9-90d8-43ec-91ca-6ed72b9676e9,82)),id -> java.util.UUID('ccdcc159-8954-4eb2-bc50-4fdb789048c0'))))
	(44020d5e-cddb-49ec-8cc6-0823eb948d95,Map(63 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,c9ea938c-aa10-4ecd-ab03-d2ef0d51260b,61)),id -> java.util.UUID('44020d5e-cddb-49ec-8cc6-0823eb948d95'))))
	(76adfdfb-637f-426e-8f64-db60aeda046d,Map(75 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,99f67748-59f5-4c5a-8dc6-1848d97d22fc,73)),id -> java.util.UUID('76adfdfb-637f-426e-8f64-db60aeda046d'))))
	(377e811f-0397-4f33-bc75-3f93d643b057,Map(6 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,9930391a-d702-4d74-8bdc-284c0e438259,4)),id -> java.util.UUID('377e811f-0397-4f33-bc75-3f93d643b057'))))
	(6dbe8f40-3780-4509-aa9d-197140b7d43d,Map(45 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,5e3be7eb-c7a6-428d-8cab-0a7be190dd29,43)),id -> java.util.UUID('6dbe8f40-3780-4509-aa9d-197140b7d43d'))))
	(a2bfccef-b07e-4def-9706-6df47fcc13a3,Map(31 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a2bfccef-b07e-4def-9706-6df47fcc13a3')), 32 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a2bfccef-b07e-4def-9706-6df47fcc13a3'))))
	(a51a5ed6-9904-4bb9-91c9-ddd3b4d5830f,Map(3 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,bf7766ad-1c4a-451b-a4f9-034419689142,1)),id -> java.util.UUID('a51a5ed6-9904-4bb9-91c9-ddd3b4d5830f'))))
	(5da6cede-dcc0-495f-9535-a75f2b5a5ffc,Map(19 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5da6cede-dcc0-495f-9535-a75f2b5a5ffc')), 20 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5da6cede-dcc0-495f-9535-a75f2b5a5ffc'))))
	(0735e9b2-a3b4-4753-96e3-b7d3452d5b89,Map(10 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0735e9b2-a3b4-4753-96e3-b7d3452d5b89')), 11 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0735e9b2-a3b4-4753-96e3-b7d3452d5b89'))))
	(c9499f77-e737-4406-b9ee-cd29b2e17bd4,Map(39 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,2b2f5e65-2093-4ca8-aea6-bb72b919895e,37)),id -> java.util.UUID('c9499f77-e737-4406-b9ee-cd29b2e17bd4'))))
	(84a42215-7d1a-4146-8345-cb0356b47847,Map(40 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('84a42215-7d1a-4146-8345-cb0356b47847')), 41 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('84a42215-7d1a-4146-8345-cb0356b47847'))))
	(756a1ff6-b9a1-48c7-85cd-2445d0284110,Map(24 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,d17d42d6-226b-40d1-a499-ef9f5d00f6de,22)),id -> java.util.UUID('756a1ff6-b9a1-48c7-85cd-2445d0284110'))))
	(a759c822-90a9-474c-afa9-3bb93a24d041,Map(55 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a759c822-90a9-474c-afa9-3bb93a24d041')), 56 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a759c822-90a9-474c-afa9-3bb93a24d041'))))
	(9930391a-d702-4d74-8bdc-284c0e438259,Map(4 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9930391a-d702-4d74-8bdc-284c0e438259')), 5 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9930391a-d702-4d74-8bdc-284c0e438259'))))
	(c9ea938c-aa10-4ecd-ab03-d2ef0d51260b,Map(61 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c9ea938c-aa10-4ecd-ab03-d2ef0d51260b')), 62 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c9ea938c-aa10-4ecd-ab03-d2ef0d51260b'))))
	(0911ffa9-90d8-43ec-91ca-6ed72b9676e9,Map(82 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0911ffa9-90d8-43ec-91ca-6ed72b9676e9')), 83 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0911ffa9-90d8-43ec-91ca-6ed72b9676e9'))))

2017-08-17 20:46:27,244 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('172cab46-998d-49a5-b142-3344b861ac45'))
2017-08-17 20:46:27,284 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('172cab46-998d-49a5-b142-3344b861ac45'))
2017-08-17 20:46:27,286 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,172cab46-998d-49a5-b142-3344b861ac45,1)),id -> java.util.UUID('f22ce125-af5f-4f01-8064-5a6575709f4d'))
2017-08-17 20:46:27,287 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('12f7fdea-ae08-4647-b731-28622350006b'))
2017-08-17 20:46:27,288 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('12f7fdea-ae08-4647-b731-28622350006b'))
2017-08-17 20:46:27,289 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,12f7fdea-ae08-4647-b731-28622350006b,4)),id -> java.util.UUID('e93c32aa-0ff6-44ca-8dfc-60ba78a90f47'))
2017-08-17 20:46:27,290 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fb4c908d-35a3-4d2a-9102-f298615de912'))
2017-08-17 20:46:27,291 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fb4c908d-35a3-4d2a-9102-f298615de912'))
2017-08-17 20:46:27,292 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,fb4c908d-35a3-4d2a-9102-f298615de912,7)),id -> java.util.UUID('33ab00b5-e9f9-42a2-9422-c4c3b9ced19a'))
2017-08-17 20:46:27,293 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d6e4550b-0f76-44cc-a064-b8bcf24a2707'))
2017-08-17 20:46:27,294 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d6e4550b-0f76-44cc-a064-b8bcf24a2707'))
2017-08-17 20:46:27,295 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,d6e4550b-0f76-44cc-a064-b8bcf24a2707,10)),id -> java.util.UUID('fe385434-386e-4028-a1d2-00ed81a1efab'))
2017-08-17 20:46:27,296 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9e767935-50e2-45a6-89f5-59b9355bffd9'))
2017-08-17 20:46:27,297 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9e767935-50e2-45a6-89f5-59b9355bffd9'))
2017-08-17 20:46:27,298 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('172cab46-998d-49a5-b142-3344b861ac45')) with count 1
2017-08-17 20:46:27,299 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,9e767935-50e2-45a6-89f5-59b9355bffd9,13)),id -> java.util.UUID('74ff0bf6-dc90-4910-9685-7bfc6ba7d625'))
2017-08-17 20:46:27,300 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f7fe4c5c-9afd-43d2-85a7-b71a6b68b69c'))
2017-08-17 20:46:27,301 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('172cab46-998d-49a5-b142-3344b861ac45')) with count 2
2017-08-17 20:46:27,301 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fb4c908d-35a3-4d2a-9102-f298615de912')) with count 8
2017-08-17 20:46:27,301 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f7fe4c5c-9afd-43d2-85a7-b71a6b68b69c'))
2017-08-17 20:46:27,302 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,f7fe4c5c-9afd-43d2-85a7-b71a6b68b69c,16)),id -> java.util.UUID('7e7ba439-7645-4c57-8de7-67e98b3d28da'))
2017-08-17 20:46:27,302 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('53fe9632-ae09-4a59-9d56-9fecaf590bb3'))
2017-08-17 20:46:27,303 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('53fe9632-ae09-4a59-9d56-9fecaf590bb3'))
2017-08-17 20:46:27,304 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,53fe9632-ae09-4a59-9d56-9fecaf590bb3,19)),id -> java.util.UUID('941792fa-12ca-4adf-a12c-3694d21315c8'))
2017-08-17 20:46:27,304 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('64129816-9747-4439-9e00-9f2eb2dd6239'))
2017-08-17 20:46:27,305 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('64129816-9747-4439-9e00-9f2eb2dd6239'))
2017-08-17 20:46:27,305 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,64129816-9747-4439-9e00-9f2eb2dd6239,22)),id -> java.util.UUID('637c02cb-d6e2-4ac4-9902-2fcf61b5e008'))
2017-08-17 20:46:27,301 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fb4c908d-35a3-4d2a-9102-f298615de912')) with count 7
2017-08-17 20:46:27,307 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,12f7fdea-ae08-4647-b731-28622350006b,4)),id -> java.util.UUID('e93c32aa-0ff6-44ca-8dfc-60ba78a90f47')) with count 6
2017-08-17 20:46:27,308 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('12f7fdea-ae08-4647-b731-28622350006b')) with count 5
2017-08-17 20:46:27,308 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('12f7fdea-ae08-4647-b731-28622350006b')) with count 4
2017-08-17 20:46:27,308 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1addd88c-bd76-4214-8fd3-0441def10abf'))
2017-08-17 20:46:27,309 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1addd88c-bd76-4214-8fd3-0441def10abf'))
2017-08-17 20:46:27,309 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,1addd88c-bd76-4214-8fd3-0441def10abf,25)),id -> java.util.UUID('fe6df552-d2b4-409a-befd-710ae252858f'))
2017-08-17 20:46:27,309 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,172cab46-998d-49a5-b142-3344b861ac45,1)),id -> java.util.UUID('f22ce125-af5f-4f01-8064-5a6575709f4d')) with count 3
2017-08-17 20:46:27,310 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('eb04a476-b203-44a1-b6d8-f16a1bdf6646'))
2017-08-17 20:46:27,312 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('eb04a476-b203-44a1-b6d8-f16a1bdf6646'))
2017-08-17 20:46:27,312 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,eb04a476-b203-44a1-b6d8-f16a1bdf6646,28)),id -> java.util.UUID('d7962a5e-968b-49db-aacb-e0cfcdc7e436'))
2017-08-17 20:46:27,314 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('08cfde9a-a6c6-40ab-a12b-7ebea00d7816'))
2017-08-17 20:46:27,314 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,fb4c908d-35a3-4d2a-9102-f298615de912,7)),id -> java.util.UUID('33ab00b5-e9f9-42a2-9422-c4c3b9ced19a')) with count 9
2017-08-17 20:46:27,314 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('08cfde9a-a6c6-40ab-a12b-7ebea00d7816'))
2017-08-17 20:46:27,315 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d6e4550b-0f76-44cc-a064-b8bcf24a2707')) with count 10
2017-08-17 20:46:27,315 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,08cfde9a-a6c6-40ab-a12b-7ebea00d7816,31)),id -> java.util.UUID('68430e20-7e54-454b-9cd9-e29395419a40'))
2017-08-17 20:46:27,315 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d6e4550b-0f76-44cc-a064-b8bcf24a2707')) with count 11
2017-08-17 20:46:27,316 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,d6e4550b-0f76-44cc-a064-b8bcf24a2707,10)),id -> java.util.UUID('fe385434-386e-4028-a1d2-00ed81a1efab')) with count 12
2017-08-17 20:46:27,316 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9e767935-50e2-45a6-89f5-59b9355bffd9')) with count 13
2017-08-17 20:46:27,316 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9e767935-50e2-45a6-89f5-59b9355bffd9')) with count 14
2017-08-17 20:46:27,316 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d6e4550b-0f76-44cc-a064-b8bcf24a2707')) with count 11
2017-08-17 20:46:27,316 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,9e767935-50e2-45a6-89f5-59b9355bffd9,13)),id -> java.util.UUID('74ff0bf6-dc90-4910-9685-7bfc6ba7d625')) with count 15
2017-08-17 20:46:27,316 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f7fe4c5c-9afd-43d2-85a7-b71a6b68b69c')) with count 16
2017-08-17 20:46:27,318 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('53fe9632-ae09-4a59-9d56-9fecaf590bb3')) with count 20
2017-08-17 20:46:27,319 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,53fe9632-ae09-4a59-9d56-9fecaf590bb3,19)),id -> java.util.UUID('941792fa-12ca-4adf-a12c-3694d21315c8')) with count 21
2017-08-17 20:46:27,319 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('64129816-9747-4439-9e00-9f2eb2dd6239')) with count 22
2017-08-17 20:46:27,319 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('64129816-9747-4439-9e00-9f2eb2dd6239')) with count 23
2017-08-17 20:46:27,319 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,64129816-9747-4439-9e00-9f2eb2dd6239,22)),id -> java.util.UUID('637c02cb-d6e2-4ac4-9902-2fcf61b5e008')) with count 24
2017-08-17 20:46:27,319 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1addd88c-bd76-4214-8fd3-0441def10abf')) with count 25
2017-08-17 20:46:27,320 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1addd88c-bd76-4214-8fd3-0441def10abf')) with count 26
2017-08-17 20:46:27,320 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,1addd88c-bd76-4214-8fd3-0441def10abf,25)),id -> java.util.UUID('fe6df552-d2b4-409a-befd-710ae252858f')) with count 27
2017-08-17 20:46:27,320 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('eb04a476-b203-44a1-b6d8-f16a1bdf6646')) with count 28
2017-08-17 20:46:27,320 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('eb04a476-b203-44a1-b6d8-f16a1bdf6646')) with count 29
2017-08-17 20:46:27,316 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f7fe4c5c-9afd-43d2-85a7-b71a6b68b69c')) with count 17
2017-08-17 20:46:27,321 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('08cfde9a-a6c6-40ab-a12b-7ebea00d7816')) with count 31
2017-08-17 20:46:27,322 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('08cfde9a-a6c6-40ab-a12b-7ebea00d7816')) with count 32
2017-08-17 20:46:27,322 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('08cfde9a-a6c6-40ab-a12b-7ebea00d7816')) with count 32
2017-08-17 20:46:27,322 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,08cfde9a-a6c6-40ab-a12b-7ebea00d7816,31)),id -> java.util.UUID('68430e20-7e54-454b-9cd9-e29395419a40')) with count 33
2017-08-17 20:46:27,322 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('172cab46-998d-49a5-b142-3344b861ac45')) with count 2
2017-08-17 20:46:27,322 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,08cfde9a-a6c6-40ab-a12b-7ebea00d7816,31)),id -> java.util.UUID('68430e20-7e54-454b-9cd9-e29395419a40')) with count 33
2017-08-17 20:46:27,316 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,9e767935-50e2-45a6-89f5-59b9355bffd9,13)),id -> java.util.UUID('74ff0bf6-dc90-4910-9685-7bfc6ba7d625')) with count 15
2017-08-17 20:46:27,318 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b15cbc53-cefd-4d78-b6d9-5e3f6277f05e'))
2017-08-17 20:46:27,323 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b15cbc53-cefd-4d78-b6d9-5e3f6277f05e')) with count 34
2017-08-17 20:46:27,324 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b15cbc53-cefd-4d78-b6d9-5e3f6277f05e'))
2017-08-17 20:46:27,324 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b15cbc53-cefd-4d78-b6d9-5e3f6277f05e')) with count 35
2017-08-17 20:46:27,324 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,b15cbc53-cefd-4d78-b6d9-5e3f6277f05e,34)),id -> java.util.UUID('adb68321-4922-4e0a-99ad-a4253e39e3b8'))
2017-08-17 20:46:27,324 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,b15cbc53-cefd-4d78-b6d9-5e3f6277f05e,34)),id -> java.util.UUID('adb68321-4922-4e0a-99ad-a4253e39e3b8')) with count 36
2017-08-17 20:46:27,318 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,f7fe4c5c-9afd-43d2-85a7-b71a6b68b69c,16)),id -> java.util.UUID('7e7ba439-7645-4c57-8de7-67e98b3d28da')) with count 18
2017-08-17 20:46:27,324 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('68166fc4-844b-4c39-9a4b-f62149075fba'))
2017-08-17 20:46:27,324 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('68166fc4-844b-4c39-9a4b-f62149075fba')) with count 37
2017-08-17 20:46:27,318 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('53fe9632-ae09-4a59-9d56-9fecaf590bb3')) with count 19
2017-08-17 20:46:27,325 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('68166fc4-844b-4c39-9a4b-f62149075fba'))
2017-08-17 20:46:27,318 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('12f7fdea-ae08-4647-b731-28622350006b')) with count 4
2017-08-17 20:46:27,325 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('68166fc4-844b-4c39-9a4b-f62149075fba')) with count 38
2017-08-17 20:46:27,325 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,68166fc4-844b-4c39-9a4b-f62149075fba,37)),id -> java.util.UUID('76e22535-90e8-4158-9753-7e85f828630b'))
2017-08-17 20:46:27,325 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,68166fc4-844b-4c39-9a4b-f62149075fba,37)),id -> java.util.UUID('76e22535-90e8-4158-9753-7e85f828630b')) with count 39
2017-08-17 20:46:27,325 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('517f17f6-9e40-42a4-8e65-e700df73d229'))
2017-08-17 20:46:27,326 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('517f17f6-9e40-42a4-8e65-e700df73d229'))
2017-08-17 20:46:27,325 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('517f17f6-9e40-42a4-8e65-e700df73d229')) with count 40
2017-08-17 20:46:27,326 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,517f17f6-9e40-42a4-8e65-e700df73d229,40)),id -> java.util.UUID('24e36878-adb9-451e-8341-a866ace637bf'))
2017-08-17 20:46:27,326 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('517f17f6-9e40-42a4-8e65-e700df73d229')) with count 41
2017-08-17 20:46:27,326 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5d34c474-5a63-41a7-9aa4-c85b0b7a63f5'))
2017-08-17 20:46:27,327 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5d34c474-5a63-41a7-9aa4-c85b0b7a63f5'))
2017-08-17 20:46:27,327 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5d34c474-5a63-41a7-9aa4-c85b0b7a63f5')) with count 43
2017-08-17 20:46:27,327 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,517f17f6-9e40-42a4-8e65-e700df73d229,40)),id -> java.util.UUID('24e36878-adb9-451e-8341-a866ace637bf')) with count 42
2017-08-17 20:46:27,321 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,eb04a476-b203-44a1-b6d8-f16a1bdf6646,28)),id -> java.util.UUID('d7962a5e-968b-49db-aacb-e0cfcdc7e436')) with count 30
2017-08-17 20:46:27,328 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('517f17f6-9e40-42a4-8e65-e700df73d229')) with count 41
2017-08-17 20:46:27,328 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5d34c474-5a63-41a7-9aa4-c85b0b7a63f5')) with count 44
2017-08-17 20:46:27,329 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('517f17f6-9e40-42a4-8e65-e700df73d229')) with count 41
2017-08-17 20:46:27,329 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,5d34c474-5a63-41a7-9aa4-c85b0b7a63f5,43)),id -> java.util.UUID('04db5852-c650-4815-978b-8409073bfe1b'))
2017-08-17 20:46:27,329 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,5d34c474-5a63-41a7-9aa4-c85b0b7a63f5,43)),id -> java.util.UUID('04db5852-c650-4815-978b-8409073bfe1b')) with count 45
2017-08-17 20:46:27,329 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5d34c474-5a63-41a7-9aa4-c85b0b7a63f5')) with count 43
2017-08-17 20:46:27,329 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e0b181b6-c020-42d7-ab6e-fa4a4d1a764a'))
2017-08-17 20:46:27,329 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e0b181b6-c020-42d7-ab6e-fa4a4d1a764a'))
2017-08-17 20:46:27,330 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,517f17f6-9e40-42a4-8e65-e700df73d229,40)),id -> java.util.UUID('24e36878-adb9-451e-8341-a866ace637bf')) with count 42
2017-08-17 20:46:27,330 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e0b181b6-c020-42d7-ab6e-fa4a4d1a764a')) with count 46
2017-08-17 20:46:27,330 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e0b181b6-c020-42d7-ab6e-fa4a4d1a764a')) with count 47
2017-08-17 20:46:27,330 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('517f17f6-9e40-42a4-8e65-e700df73d229')) with count 40
2017-08-17 20:46:27,330 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e0b181b6-c020-42d7-ab6e-fa4a4d1a764a')) with count 47
2017-08-17 20:46:27,330 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('517f17f6-9e40-42a4-8e65-e700df73d229')) with count 40
2017-08-17 20:46:27,331 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e0b181b6-c020-42d7-ab6e-fa4a4d1a764a')) with count 46
2017-08-17 20:46:27,330 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,e0b181b6-c020-42d7-ab6e-fa4a4d1a764a,46)),id -> java.util.UUID('8a89bc35-e797-4d0e-b18d-3b6774e9fbef'))
2017-08-17 20:46:27,332 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('6f088353-e176-4c8a-8d63-18626c0bea34'))
2017-08-17 20:46:27,332 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('6f088353-e176-4c8a-8d63-18626c0bea34'))
2017-08-17 20:46:27,332 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,6f088353-e176-4c8a-8d63-18626c0bea34,49)),id -> java.util.UUID('d55ff506-7fd4-42b3-801b-9d675d11df89'))
2017-08-17 20:46:27,332 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e2920e69-e37b-4940-944d-7c1e03a798b3'))
2017-08-17 20:46:27,333 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e2920e69-e37b-4940-944d-7c1e03a798b3'))
2017-08-17 20:46:27,333 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,e2920e69-e37b-4940-944d-7c1e03a798b3,52)),id -> java.util.UUID('a8b40177-a5d4-4ab4-a19d-9e74adcf41d5'))
2017-08-17 20:46:27,333 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,e0b181b6-c020-42d7-ab6e-fa4a4d1a764a,46)),id -> java.util.UUID('8a89bc35-e797-4d0e-b18d-3b6774e9fbef')) with count 48
2017-08-17 20:46:27,333 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('6f088353-e176-4c8a-8d63-18626c0bea34')) with count 49
2017-08-17 20:46:27,333 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ad56c913-3cee-406f-9081-6fb6f9b3f043'))
2017-08-17 20:46:27,334 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('6f088353-e176-4c8a-8d63-18626c0bea34')) with count 50
2017-08-17 20:46:27,334 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,6f088353-e176-4c8a-8d63-18626c0bea34,49)),id -> java.util.UUID('d55ff506-7fd4-42b3-801b-9d675d11df89')) with count 51
2017-08-17 20:46:27,334 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ad56c913-3cee-406f-9081-6fb6f9b3f043'))
2017-08-17 20:46:27,334 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e2920e69-e37b-4940-944d-7c1e03a798b3')) with count 52
2017-08-17 20:46:27,334 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e2920e69-e37b-4940-944d-7c1e03a798b3')) with count 53
2017-08-17 20:46:27,334 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,ad56c913-3cee-406f-9081-6fb6f9b3f043,55)),id -> java.util.UUID('fd25bd66-bffc-48c7-ac2e-4eaee0b23206'))
2017-08-17 20:46:27,334 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,e2920e69-e37b-4940-944d-7c1e03a798b3,52)),id -> java.util.UUID('a8b40177-a5d4-4ab4-a19d-9e74adcf41d5')) with count 54
2017-08-17 20:46:27,334 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e4edf31b-f482-444d-9a7a-795b7add83a8'))
2017-08-17 20:46:27,335 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ad56c913-3cee-406f-9081-6fb6f9b3f043')) with count 56
2017-08-17 20:46:27,335 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,ad56c913-3cee-406f-9081-6fb6f9b3f043,55)),id -> java.util.UUID('fd25bd66-bffc-48c7-ac2e-4eaee0b23206')) with count 57
2017-08-17 20:46:27,335 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e4edf31b-f482-444d-9a7a-795b7add83a8')) with count 58
2017-08-17 20:46:27,335 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e4edf31b-f482-444d-9a7a-795b7add83a8'))
2017-08-17 20:46:27,336 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,e4edf31b-f482-444d-9a7a-795b7add83a8,58)),id -> java.util.UUID('d529db89-be69-48ff-8f3f-b816fef5f400'))
2017-08-17 20:46:27,336 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2cab7331-074b-4985-b4b4-05c9b1cdfa92'))
2017-08-17 20:46:27,336 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e4edf31b-f482-444d-9a7a-795b7add83a8')) with count 59
2017-08-17 20:46:27,336 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,e4edf31b-f482-444d-9a7a-795b7add83a8,58)),id -> java.util.UUID('d529db89-be69-48ff-8f3f-b816fef5f400')) with count 60
2017-08-17 20:46:27,336 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2cab7331-074b-4985-b4b4-05c9b1cdfa92'))
2017-08-17 20:46:27,336 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2cab7331-074b-4985-b4b4-05c9b1cdfa92')) with count 61
2017-08-17 20:46:27,337 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2cab7331-074b-4985-b4b4-05c9b1cdfa92')) with count 62
2017-08-17 20:46:27,334 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ad56c913-3cee-406f-9081-6fb6f9b3f043')) with count 55
2017-08-17 20:46:27,337 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,2cab7331-074b-4985-b4b4-05c9b1cdfa92,61)),id -> java.util.UUID('7dc9b456-29c9-435f-ab8b-0dd163ff554c'))
2017-08-17 20:46:27,337 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a3230ab4-8a4c-433a-acae-b4a3262602d5'))
2017-08-17 20:46:27,338 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a3230ab4-8a4c-433a-acae-b4a3262602d5'))
2017-08-17 20:46:27,338 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a3230ab4-8a4c-433a-acae-b4a3262602d5')) with count 64
2017-08-17 20:46:27,338 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a3230ab4-8a4c-433a-acae-b4a3262602d5')) with count 65
2017-08-17 20:46:27,338 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a3230ab4-8a4c-433a-acae-b4a3262602d5,64)),id -> java.util.UUID('e95648ae-e580-495b-a75f-91505b5be277'))
2017-08-17 20:46:27,338 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,2cab7331-074b-4985-b4b4-05c9b1cdfa92,61)),id -> java.util.UUID('7dc9b456-29c9-435f-ab8b-0dd163ff554c')) with count 63
2017-08-17 20:46:27,339 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a3230ab4-8a4c-433a-acae-b4a3262602d5,64)),id -> java.util.UUID('e95648ae-e580-495b-a75f-91505b5be277')) with count 66
2017-08-17 20:46:27,339 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a887a4d4-b805-4ba0-9f69-c501ca50135c'))
2017-08-17 20:46:27,339 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a887a4d4-b805-4ba0-9f69-c501ca50135c'))
2017-08-17 20:46:27,339 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a887a4d4-b805-4ba0-9f69-c501ca50135c')) with count 67
2017-08-17 20:46:27,340 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a887a4d4-b805-4ba0-9f69-c501ca50135c,67)),id -> java.util.UUID('ecf7a166-e8f8-4f87-bcc3-4826070acf56'))
2017-08-17 20:46:27,340 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3c001c77-671c-4ab7-a3f9-93bc6c49a849'))
2017-08-17 20:46:27,340 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a887a4d4-b805-4ba0-9f69-c501ca50135c')) with count 68
2017-08-17 20:46:27,340 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a887a4d4-b805-4ba0-9f69-c501ca50135c,67)),id -> java.util.UUID('ecf7a166-e8f8-4f87-bcc3-4826070acf56')) with count 69
2017-08-17 20:46:27,341 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3c001c77-671c-4ab7-a3f9-93bc6c49a849')) with count 70
2017-08-17 20:46:27,341 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3c001c77-671c-4ab7-a3f9-93bc6c49a849'))
2017-08-17 20:46:27,341 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3c001c77-671c-4ab7-a3f9-93bc6c49a849')) with count 71
2017-08-17 20:46:27,341 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,3c001c77-671c-4ab7-a3f9-93bc6c49a849,70)),id -> java.util.UUID('15e1ee0a-2c17-4800-bd09-9d22728e8f33'))
2017-08-17 20:46:27,341 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,3c001c77-671c-4ab7-a3f9-93bc6c49a849,70)),id -> java.util.UUID('15e1ee0a-2c17-4800-bd09-9d22728e8f33')) with count 72
2017-08-17 20:46:27,341 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('37d665ce-8223-4084-93d9-176e684d1c1d'))
2017-08-17 20:46:27,342 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('37d665ce-8223-4084-93d9-176e684d1c1d')) with count 73
2017-08-17 20:46:27,342 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('37d665ce-8223-4084-93d9-176e684d1c1d'))
2017-08-17 20:46:27,342 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a3230ab4-8a4c-433a-acae-b4a3262602d5')) with count 64
2017-08-17 20:46:27,342 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('37d665ce-8223-4084-93d9-176e684d1c1d')) with count 74
2017-08-17 20:46:27,342 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,37d665ce-8223-4084-93d9-176e684d1c1d,73)),id -> java.util.UUID('d307c4f6-6305-4ab1-bac7-e4540adb7ba4'))
2017-08-17 20:46:27,343 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,37d665ce-8223-4084-93d9-176e684d1c1d,73)),id -> java.util.UUID('d307c4f6-6305-4ab1-bac7-e4540adb7ba4')) with count 75
2017-08-17 20:46:27,343 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7d07879a-32ee-450c-b5b0-5951f0f4512c'))
2017-08-17 20:46:27,343 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7d07879a-32ee-450c-b5b0-5951f0f4512c')) with count 76
2017-08-17 20:46:27,343 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7d07879a-32ee-450c-b5b0-5951f0f4512c'))
2017-08-17 20:46:27,343 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7d07879a-32ee-450c-b5b0-5951f0f4512c')) with count 77
2017-08-17 20:46:27,344 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7d07879a-32ee-450c-b5b0-5951f0f4512c,76)),id -> java.util.UUID('ede18a12-e47c-49da-ae9a-4798d2ffae7a'))
2017-08-17 20:46:27,344 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7d07879a-32ee-450c-b5b0-5951f0f4512c,76)),id -> java.util.UUID('ede18a12-e47c-49da-ae9a-4798d2ffae7a')) with count 78
2017-08-17 20:46:27,344 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f871f523-d0d9-4ccf-bd17-1ea44f0cd2a7'))
2017-08-17 20:46:27,345 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f871f523-d0d9-4ccf-bd17-1ea44f0cd2a7')) with count 79
2017-08-17 20:46:27,345 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f871f523-d0d9-4ccf-bd17-1ea44f0cd2a7'))
2017-08-17 20:46:27,345 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f871f523-d0d9-4ccf-bd17-1ea44f0cd2a7')) with count 80
2017-08-17 20:46:27,345 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,f871f523-d0d9-4ccf-bd17-1ea44f0cd2a7,79)),id -> java.util.UUID('d0f8e454-4bb7-4675-95d3-bba08b8e1109'))
2017-08-17 20:46:27,345 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,f871f523-d0d9-4ccf-bd17-1ea44f0cd2a7,79)),id -> java.util.UUID('d0f8e454-4bb7-4675-95d3-bba08b8e1109')) with count 81
2017-08-17 20:46:27,346 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7c9936b1-0da2-4ecd-bbca-9be8df5f6eb3'))
2017-08-17 20:46:27,346 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7c9936b1-0da2-4ecd-bbca-9be8df5f6eb3')) with count 82
2017-08-17 20:46:27,346 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7c9936b1-0da2-4ecd-bbca-9be8df5f6eb3'))
2017-08-17 20:46:27,346 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7c9936b1-0da2-4ecd-bbca-9be8df5f6eb3')) with count 83
2017-08-17 20:46:27,347 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7c9936b1-0da2-4ecd-bbca-9be8df5f6eb3')) with count 82
2017-08-17 20:46:27,347 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7c9936b1-0da2-4ecd-bbca-9be8df5f6eb3,82)),id -> java.util.UUID('7dbd6b2c-f0da-4947-bca9-5188518a88d6'))
2017-08-17 20:46:27,347 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cbaf8ff2-9573-4c7c-8dac-fd11abc71f3b'))
2017-08-17 20:46:27,348 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7c9936b1-0da2-4ecd-bbca-9be8df5f6eb3,82)),id -> java.util.UUID('7dbd6b2c-f0da-4947-bca9-5188518a88d6')) with count 84
2017-08-17 20:46:27,348 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cbaf8ff2-9573-4c7c-8dac-fd11abc71f3b'))
2017-08-17 20:46:27,348 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cbaf8ff2-9573-4c7c-8dac-fd11abc71f3b')) with count 85
2017-08-17 20:46:27,349 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cbaf8ff2-9573-4c7c-8dac-fd11abc71f3b')) with count 86
2017-08-17 20:46:27,349 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,cbaf8ff2-9573-4c7c-8dac-fd11abc71f3b,85)),id -> java.util.UUID('681823a3-e573-4f1e-824f-d8d18dec93da'))
2017-08-17 20:46:27,349 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,cbaf8ff2-9573-4c7c-8dac-fd11abc71f3b,85)),id -> java.util.UUID('681823a3-e573-4f1e-824f-d8d18dec93da')) with count 87
2017-08-17 20:46:27,349 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3397d9cb-a143-4775-b768-5569bac4a9ca'))
2017-08-17 20:46:27,350 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3397d9cb-a143-4775-b768-5569bac4a9ca'))
2017-08-17 20:46:27,350 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,3397d9cb-a143-4775-b768-5569bac4a9ca,88)),id -> java.util.UUID('c3d9f781-563c-4c71-9d44-d98f0d748f6d'))
2017-08-17 20:46:27,350 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3397d9cb-a143-4775-b768-5569bac4a9ca')) with count 89
2017-08-17 20:46:27,350 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3397d9cb-a143-4775-b768-5569bac4a9ca')) with count 88
2017-08-17 20:46:27,351 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,3397d9cb-a143-4775-b768-5569bac4a9ca,88)),id -> java.util.UUID('c3d9f781-563c-4c71-9d44-d98f0d748f6d')) with count 90
2017-08-17 20:46:27,351 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3397d9cb-a143-4775-b768-5569bac4a9ca')) with count 88
2017-08-17 20:46:28,372 INFO  [main] Counter[Person] - counter is 90
2017-08-17 20:46:28,428 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(7c9936b1-0da2-4ecd-bbca-9be8df5f6eb3,Map(83 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7c9936b1-0da2-4ecd-bbca-9be8df5f6eb3')), 82 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7c9936b1-0da2-4ecd-bbca-9be8df5f6eb3'))))
	(a887a4d4-b805-4ba0-9f69-c501ca50135c,Map(67 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a887a4d4-b805-4ba0-9f69-c501ca50135c')), 68 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a887a4d4-b805-4ba0-9f69-c501ca50135c'))))
	(3397d9cb-a143-4775-b768-5569bac4a9ca,Map(89 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3397d9cb-a143-4775-b768-5569bac4a9ca')), 88 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3397d9cb-a143-4775-b768-5569bac4a9ca'))))
	(7e7ba439-7645-4c57-8de7-67e98b3d28da,Map(18 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,f7fe4c5c-9afd-43d2-85a7-b71a6b68b69c,16)),id -> java.util.UUID('7e7ba439-7645-4c57-8de7-67e98b3d28da'))))
	(f22ce125-af5f-4f01-8064-5a6575709f4d,Map(3 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,172cab46-998d-49a5-b142-3344b861ac45,1)),id -> java.util.UUID('f22ce125-af5f-4f01-8064-5a6575709f4d'))))
	(172cab46-998d-49a5-b142-3344b861ac45,Map(1 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('172cab46-998d-49a5-b142-3344b861ac45')), 2 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('172cab46-998d-49a5-b142-3344b861ac45'))))
	(24e36878-adb9-451e-8341-a866ace637bf,Map(42 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,517f17f6-9e40-42a4-8e65-e700df73d229,40)),id -> java.util.UUID('24e36878-adb9-451e-8341-a866ace637bf'))))
	(ad56c913-3cee-406f-9081-6fb6f9b3f043,Map(56 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ad56c913-3cee-406f-9081-6fb6f9b3f043')), 55 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ad56c913-3cee-406f-9081-6fb6f9b3f043'))))
	(d307c4f6-6305-4ab1-bac7-e4540adb7ba4,Map(75 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,37d665ce-8223-4084-93d9-176e684d1c1d,73)),id -> java.util.UUID('d307c4f6-6305-4ab1-bac7-e4540adb7ba4'))))
	(fb4c908d-35a3-4d2a-9102-f298615de912,Map(7 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fb4c908d-35a3-4d2a-9102-f298615de912')), 8 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fb4c908d-35a3-4d2a-9102-f298615de912'))))
	(04db5852-c650-4815-978b-8409073bfe1b,Map(45 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,5d34c474-5a63-41a7-9aa4-c85b0b7a63f5,43)),id -> java.util.UUID('04db5852-c650-4815-978b-8409073bfe1b'))))
	(9e767935-50e2-45a6-89f5-59b9355bffd9,Map(13 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9e767935-50e2-45a6-89f5-59b9355bffd9')), 14 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9e767935-50e2-45a6-89f5-59b9355bffd9'))))
	(76e22535-90e8-4158-9753-7e85f828630b,Map(39 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,68166fc4-844b-4c39-9a4b-f62149075fba,37)),id -> java.util.UUID('76e22535-90e8-4158-9753-7e85f828630b'))))
	(fe385434-386e-4028-a1d2-00ed81a1efab,Map(12 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,d6e4550b-0f76-44cc-a064-b8bcf24a2707,10)),id -> java.util.UUID('fe385434-386e-4028-a1d2-00ed81a1efab'))))
	(2cab7331-074b-4985-b4b4-05c9b1cdfa92,Map(61 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2cab7331-074b-4985-b4b4-05c9b1cdfa92')), 62 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2cab7331-074b-4985-b4b4-05c9b1cdfa92'))))
	(74ff0bf6-dc90-4910-9685-7bfc6ba7d625,Map(15 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,9e767935-50e2-45a6-89f5-59b9355bffd9,13)),id -> java.util.UUID('74ff0bf6-dc90-4910-9685-7bfc6ba7d625'))))
	(7dbd6b2c-f0da-4947-bca9-5188518a88d6,Map(84 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7c9936b1-0da2-4ecd-bbca-9be8df5f6eb3,82)),id -> java.util.UUID('7dbd6b2c-f0da-4947-bca9-5188518a88d6'))))
	(8a89bc35-e797-4d0e-b18d-3b6774e9fbef,Map(48 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,e0b181b6-c020-42d7-ab6e-fa4a4d1a764a,46)),id -> java.util.UUID('8a89bc35-e797-4d0e-b18d-3b6774e9fbef'))))
	(33ab00b5-e9f9-42a2-9422-c4c3b9ced19a,Map(9 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,fb4c908d-35a3-4d2a-9102-f298615de912,7)),id -> java.util.UUID('33ab00b5-e9f9-42a2-9422-c4c3b9ced19a'))))
	(1addd88c-bd76-4214-8fd3-0441def10abf,Map(25 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1addd88c-bd76-4214-8fd3-0441def10abf')), 26 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1addd88c-bd76-4214-8fd3-0441def10abf'))))
	(ede18a12-e47c-49da-ae9a-4798d2ffae7a,Map(78 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7d07879a-32ee-450c-b5b0-5951f0f4512c,76)),id -> java.util.UUID('ede18a12-e47c-49da-ae9a-4798d2ffae7a'))))
	(681823a3-e573-4f1e-824f-d8d18dec93da,Map(87 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,cbaf8ff2-9573-4c7c-8dac-fd11abc71f3b,85)),id -> java.util.UUID('681823a3-e573-4f1e-824f-d8d18dec93da'))))
	(d0f8e454-4bb7-4675-95d3-bba08b8e1109,Map(81 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,f871f523-d0d9-4ccf-bd17-1ea44f0cd2a7,79)),id -> java.util.UUID('d0f8e454-4bb7-4675-95d3-bba08b8e1109'))))
	(517f17f6-9e40-42a4-8e65-e700df73d229,Map(41 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('517f17f6-9e40-42a4-8e65-e700df73d229')), 40 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('517f17f6-9e40-42a4-8e65-e700df73d229'))))
	(3c001c77-671c-4ab7-a3f9-93bc6c49a849,Map(70 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3c001c77-671c-4ab7-a3f9-93bc6c49a849')), 71 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3c001c77-671c-4ab7-a3f9-93bc6c49a849'))))
	(a3230ab4-8a4c-433a-acae-b4a3262602d5,Map(65 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a3230ab4-8a4c-433a-acae-b4a3262602d5')), 64 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a3230ab4-8a4c-433a-acae-b4a3262602d5'))))
	(fd25bd66-bffc-48c7-ac2e-4eaee0b23206,Map(57 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,ad56c913-3cee-406f-9081-6fb6f9b3f043,55)),id -> java.util.UUID('fd25bd66-bffc-48c7-ac2e-4eaee0b23206'))))
	(6f088353-e176-4c8a-8d63-18626c0bea34,Map(49 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('6f088353-e176-4c8a-8d63-18626c0bea34')), 50 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('6f088353-e176-4c8a-8d63-18626c0bea34'))))
	(5d34c474-5a63-41a7-9aa4-c85b0b7a63f5,Map(44 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5d34c474-5a63-41a7-9aa4-c85b0b7a63f5')), 43 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5d34c474-5a63-41a7-9aa4-c85b0b7a63f5'))))
	(e93c32aa-0ff6-44ca-8dfc-60ba78a90f47,Map(6 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,12f7fdea-ae08-4647-b731-28622350006b,4)),id -> java.util.UUID('e93c32aa-0ff6-44ca-8dfc-60ba78a90f47'))))
	(adb68321-4922-4e0a-99ad-a4253e39e3b8,Map(36 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,b15cbc53-cefd-4d78-b6d9-5e3f6277f05e,34)),id -> java.util.UUID('adb68321-4922-4e0a-99ad-a4253e39e3b8'))))
	(d6e4550b-0f76-44cc-a064-b8bcf24a2707,Map(10 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d6e4550b-0f76-44cc-a064-b8bcf24a2707')), 11 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d6e4550b-0f76-44cc-a064-b8bcf24a2707'))))
	(e2920e69-e37b-4940-944d-7c1e03a798b3,Map(52 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e2920e69-e37b-4940-944d-7c1e03a798b3')), 53 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e2920e69-e37b-4940-944d-7c1e03a798b3'))))
	(08cfde9a-a6c6-40ab-a12b-7ebea00d7816,Map(31 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('08cfde9a-a6c6-40ab-a12b-7ebea00d7816')), 32 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('08cfde9a-a6c6-40ab-a12b-7ebea00d7816'))))
	(ecf7a166-e8f8-4f87-bcc3-4826070acf56,Map(69 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a887a4d4-b805-4ba0-9f69-c501ca50135c,67)),id -> java.util.UUID('ecf7a166-e8f8-4f87-bcc3-4826070acf56'))))
	(a8b40177-a5d4-4ab4-a19d-9e74adcf41d5,Map(54 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,e2920e69-e37b-4940-944d-7c1e03a798b3,52)),id -> java.util.UUID('a8b40177-a5d4-4ab4-a19d-9e74adcf41d5'))))
	(12f7fdea-ae08-4647-b731-28622350006b,Map(5 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('12f7fdea-ae08-4647-b731-28622350006b')), 4 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('12f7fdea-ae08-4647-b731-28622350006b'))))
	(637c02cb-d6e2-4ac4-9902-2fcf61b5e008,Map(24 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,64129816-9747-4439-9e00-9f2eb2dd6239,22)),id -> java.util.UUID('637c02cb-d6e2-4ac4-9902-2fcf61b5e008'))))
	(b15cbc53-cefd-4d78-b6d9-5e3f6277f05e,Map(34 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b15cbc53-cefd-4d78-b6d9-5e3f6277f05e')), 35 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b15cbc53-cefd-4d78-b6d9-5e3f6277f05e'))))
	(64129816-9747-4439-9e00-9f2eb2dd6239,Map(22 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('64129816-9747-4439-9e00-9f2eb2dd6239')), 23 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('64129816-9747-4439-9e00-9f2eb2dd6239'))))
	(15e1ee0a-2c17-4800-bd09-9d22728e8f33,Map(72 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,3c001c77-671c-4ab7-a3f9-93bc6c49a849,70)),id -> java.util.UUID('15e1ee0a-2c17-4800-bd09-9d22728e8f33'))))
	(e95648ae-e580-495b-a75f-91505b5be277,Map(66 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a3230ab4-8a4c-433a-acae-b4a3262602d5,64)),id -> java.util.UUID('e95648ae-e580-495b-a75f-91505b5be277'))))
	(68430e20-7e54-454b-9cd9-e29395419a40,Map(33 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,08cfde9a-a6c6-40ab-a12b-7ebea00d7816,31)),id -> java.util.UUID('68430e20-7e54-454b-9cd9-e29395419a40'))))
	(fe6df552-d2b4-409a-befd-710ae252858f,Map(27 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,1addd88c-bd76-4214-8fd3-0441def10abf,25)),id -> java.util.UUID('fe6df552-d2b4-409a-befd-710ae252858f'))))
	(37d665ce-8223-4084-93d9-176e684d1c1d,Map(73 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('37d665ce-8223-4084-93d9-176e684d1c1d')), 74 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('37d665ce-8223-4084-93d9-176e684d1c1d'))))
	(f871f523-d0d9-4ccf-bd17-1ea44f0cd2a7,Map(79 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f871f523-d0d9-4ccf-bd17-1ea44f0cd2a7')), 80 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f871f523-d0d9-4ccf-bd17-1ea44f0cd2a7'))))
	(941792fa-12ca-4adf-a12c-3694d21315c8,Map(21 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,53fe9632-ae09-4a59-9d56-9fecaf590bb3,19)),id -> java.util.UUID('941792fa-12ca-4adf-a12c-3694d21315c8'))))
	(f7fe4c5c-9afd-43d2-85a7-b71a6b68b69c,Map(16 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f7fe4c5c-9afd-43d2-85a7-b71a6b68b69c')), 17 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f7fe4c5c-9afd-43d2-85a7-b71a6b68b69c'))))
	(e0b181b6-c020-42d7-ab6e-fa4a4d1a764a,Map(47 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e0b181b6-c020-42d7-ab6e-fa4a4d1a764a')), 46 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e0b181b6-c020-42d7-ab6e-fa4a4d1a764a'))))
	(e4edf31b-f482-444d-9a7a-795b7add83a8,Map(58 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e4edf31b-f482-444d-9a7a-795b7add83a8')), 59 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e4edf31b-f482-444d-9a7a-795b7add83a8'))))
	(c3d9f781-563c-4c71-9d44-d98f0d748f6d,Map(90 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,3397d9cb-a143-4775-b768-5569bac4a9ca,88)),id -> java.util.UUID('c3d9f781-563c-4c71-9d44-d98f0d748f6d'))))
	(d529db89-be69-48ff-8f3f-b816fef5f400,Map(60 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,e4edf31b-f482-444d-9a7a-795b7add83a8,58)),id -> java.util.UUID('d529db89-be69-48ff-8f3f-b816fef5f400'))))
	(d55ff506-7fd4-42b3-801b-9d675d11df89,Map(51 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,6f088353-e176-4c8a-8d63-18626c0bea34,49)),id -> java.util.UUID('d55ff506-7fd4-42b3-801b-9d675d11df89'))))
	(7dc9b456-29c9-435f-ab8b-0dd163ff554c,Map(63 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,2cab7331-074b-4985-b4b4-05c9b1cdfa92,61)),id -> java.util.UUID('7dc9b456-29c9-435f-ab8b-0dd163ff554c'))))
	(7d07879a-32ee-450c-b5b0-5951f0f4512c,Map(76 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7d07879a-32ee-450c-b5b0-5951f0f4512c')), 77 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7d07879a-32ee-450c-b5b0-5951f0f4512c'))))
	(d7962a5e-968b-49db-aacb-e0cfcdc7e436,Map(30 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,eb04a476-b203-44a1-b6d8-f16a1bdf6646,28)),id -> java.util.UUID('d7962a5e-968b-49db-aacb-e0cfcdc7e436'))))
	(68166fc4-844b-4c39-9a4b-f62149075fba,Map(37 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('68166fc4-844b-4c39-9a4b-f62149075fba')), 38 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('68166fc4-844b-4c39-9a4b-f62149075fba'))))
	(cbaf8ff2-9573-4c7c-8dac-fd11abc71f3b,Map(85 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cbaf8ff2-9573-4c7c-8dac-fd11abc71f3b')), 86 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cbaf8ff2-9573-4c7c-8dac-fd11abc71f3b'))))
	(53fe9632-ae09-4a59-9d56-9fecaf590bb3,Map(20 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('53fe9632-ae09-4a59-9d56-9fecaf590bb3')), 19 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('53fe9632-ae09-4a59-9d56-9fecaf590bb3'))))
	(eb04a476-b203-44a1-b6d8-f16a1bdf6646,Map(28 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('eb04a476-b203-44a1-b6d8-f16a1bdf6646')), 29 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('eb04a476-b203-44a1-b6d8-f16a1bdf6646'))))

2017-08-17 20:58:02,504 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 20:58:02,504 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,504 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:58:02,504 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,504 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,504 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:58:02,504 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 20:58:02,504 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,514 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:58:02,524 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:58:03,504 INFO  [main] Counter[Person] - counter is 90
2017-08-17 20:58:03,504 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(5b22028f-fa5b-44ea-ae5d-d31c55dee49b,Map(75 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,4a257269-72db-4283-a051-7b7ab7f39471,73)),id -> java.util.UUID('5b22028f-fa5b-44ea-ae5d-d31c55dee49b'))))
	(4adf4d14-fae1-4860-8a77-80b8db722cfb,Map(3 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,f876fbec-414e-4f5a-a7cb-ac85c1aaf343,1)),id -> java.util.UUID('4adf4d14-fae1-4860-8a77-80b8db722cfb'))))
	(09cafdef-34f8-477a-af2f-9a47ae41115e,Map(84 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,45fde8f3-6f2a-457a-901e-6b7a7ecfd7ba,82)),id -> java.util.UUID('09cafdef-34f8-477a-af2f-9a47ae41115e'))))
	(0a6e6174-f03c-4274-8682-d95cf751ea20,Map(30 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,74168433-9893-4175-8802-39361d0273f0,28)),id -> java.util.UUID('0a6e6174-f03c-4274-8682-d95cf751ea20'))))
	(100f39e7-3f94-475e-896e-fc3beb6d7dec,Map(78 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,49cbc81f-294a-45b4-8ef3-ec1113ca02f5,76)),id -> java.util.UUID('100f39e7-3f94-475e-896e-fc3beb6d7dec'))))
	(be6db738-d503-4154-a04d-71ddfeceb7c1,Map(57 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,61be9d2d-b4e5-443c-a51f-a5e6f3f1a976,55)),id -> java.util.UUID('be6db738-d503-4154-a04d-71ddfeceb7c1'))))
	(2d8deb90-fd3a-472f-ab7b-1cbc422d12e1,Map(88 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2d8deb90-fd3a-472f-ab7b-1cbc422d12e1')), 89 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2d8deb90-fd3a-472f-ab7b-1cbc422d12e1'))))
	(691b6b85-6c7b-44bc-9be0-f102968ac93e,Map(22 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('691b6b85-6c7b-44bc-9be0-f102968ac93e')), 23 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('691b6b85-6c7b-44bc-9be0-f102968ac93e'))))
	(0dea3982-0870-4642-8b16-4c3830cee73f,Map(58 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0dea3982-0870-4642-8b16-4c3830cee73f')), 59 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0dea3982-0870-4642-8b16-4c3830cee73f'))))
	(c0fc3cbb-bdd3-4d42-82e5-d277aaae7a76,Map(40 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c0fc3cbb-bdd3-4d42-82e5-d277aaae7a76')), 41 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c0fc3cbb-bdd3-4d42-82e5-d277aaae7a76'))))
	(2024d586-3769-4918-9599-939cafe09781,Map(27 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a0cfa5c1-976e-4e34-a902-2e37cfdd40ce,25)),id -> java.util.UUID('2024d586-3769-4918-9599-939cafe09781'))))
	(9fd2c4d2-2aa6-413d-881b-3498ea6705d2,Map(72 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,99c7ba5e-5a74-4eb9-aa93-7552126e4600,70)),id -> java.util.UUID('9fd2c4d2-2aa6-413d-881b-3498ea6705d2'))))
	(1c2bb8eb-e466-4ba2-be20-145e4d894dd8,Map(24 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,691b6b85-6c7b-44bc-9be0-f102968ac93e,22)),id -> java.util.UUID('1c2bb8eb-e466-4ba2-be20-145e4d894dd8'))))
	(415d07d7-eba5-429c-b933-bfc7ae3fc750,Map(67 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('415d07d7-eba5-429c-b933-bfc7ae3fc750')), 68 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('415d07d7-eba5-429c-b933-bfc7ae3fc750'))))
	(99c7ba5e-5a74-4eb9-aa93-7552126e4600,Map(70 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('99c7ba5e-5a74-4eb9-aa93-7552126e4600')), 71 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('99c7ba5e-5a74-4eb9-aa93-7552126e4600'))))
	(efc5441f-42cd-47ee-99fb-c206edb1801d,Map(66 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,5ed0fb64-1846-423c-ad12-fdbbac2ade79,64)),id -> java.util.UUID('efc5441f-42cd-47ee-99fb-c206edb1801d'))))
	(45fde8f3-6f2a-457a-901e-6b7a7ecfd7ba,Map(83 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('45fde8f3-6f2a-457a-901e-6b7a7ecfd7ba')), 82 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('45fde8f3-6f2a-457a-901e-6b7a7ecfd7ba'))))
	(61be9d2d-b4e5-443c-a51f-a5e6f3f1a976,Map(55 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('61be9d2d-b4e5-443c-a51f-a5e6f3f1a976')), 56 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('61be9d2d-b4e5-443c-a51f-a5e6f3f1a976'))))
	(0fe649b2-10e7-4bb8-a60a-81e9d1ee1f81,Map(45 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,be1e95b4-5ca8-4af3-8bd4-d2ff03f9d1fa,43)),id -> java.util.UUID('0fe649b2-10e7-4bb8-a60a-81e9d1ee1f81'))))
	(b84527ae-d508-430d-b0c0-0ec1d20456ef,Map(15 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,defa2d66-d1af-4f2e-931e-d32cac75112f,13)),id -> java.util.UUID('b84527ae-d508-430d-b0c0-0ec1d20456ef'))))
	(8966ce97-6f68-437e-a0de-67c5e0aa43c4,Map(61 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8966ce97-6f68-437e-a0de-67c5e0aa43c4')), 62 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8966ce97-6f68-437e-a0de-67c5e0aa43c4'))))
	(5da557c2-9a71-481d-827e-f29d89deb238,Map(18 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,1303b2d7-c12f-4512-8dcd-49792760f445,16)),id -> java.util.UUID('5da557c2-9a71-481d-827e-f29d89deb238'))))
	(efd20f69-835b-4e20-be2e-2d816020256c,Map(9 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,be81824b-0565-492f-8c77-c1852e946c1c,7)),id -> java.util.UUID('efd20f69-835b-4e20-be2e-2d816020256c'))))
	(10699c4a-035d-4ad0-871c-78b1a6ca2698,Map(51 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,4451ce75-88e6-4485-b5bb-f436f8415779,49)),id -> java.util.UUID('10699c4a-035d-4ad0-871c-78b1a6ca2698'))))
	(91639494-f92c-4ace-9e35-0239130b4e36,Map(81 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,c1ad4860-8409-4714-9044-e3235383de02,79)),id -> java.util.UUID('91639494-f92c-4ace-9e35-0239130b4e36'))))
	(7e3c7d06-1a68-4ca3-8e44-36c1f51ecc21,Map(5 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7e3c7d06-1a68-4ca3-8e44-36c1f51ecc21')), 4 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7e3c7d06-1a68-4ca3-8e44-36c1f51ecc21'))))
	(f1108d60-1523-4350-9a19-952ec2a2a26e,Map(87 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,80717965-6ff2-48a8-bb53-23a6dc8b8968,85)),id -> java.util.UUID('f1108d60-1523-4350-9a19-952ec2a2a26e'))))
	(f9d05a64-d14f-45da-9af2-ac91e2e83a57,Map(19 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f9d05a64-d14f-45da-9af2-ac91e2e83a57')), 20 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f9d05a64-d14f-45da-9af2-ac91e2e83a57'))))
	(4ec3369b-5253-4fae-96a8-f43b8f808a2a,Map(63 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,8966ce97-6f68-437e-a0de-67c5e0aa43c4,61)),id -> java.util.UUID('4ec3369b-5253-4fae-96a8-f43b8f808a2a'))))
	(5ed0fb64-1846-423c-ad12-fdbbac2ade79,Map(65 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5ed0fb64-1846-423c-ad12-fdbbac2ade79')), 64 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5ed0fb64-1846-423c-ad12-fdbbac2ade79'))))
	(8da459b7-54d2-47a4-aaf0-7a7820f11b51,Map(53 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8da459b7-54d2-47a4-aaf0-7a7820f11b51')), 52 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8da459b7-54d2-47a4-aaf0-7a7820f11b51'))))
	(6be45c98-fe61-4620-9e46-965a2382aa4b,Map(6 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,7e3c7d06-1a68-4ca3-8e44-36c1f51ecc21,4)),id -> java.util.UUID('6be45c98-fe61-4620-9e46-965a2382aa4b'))))
	(4a257269-72db-4283-a051-7b7ab7f39471,Map(73 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4a257269-72db-4283-a051-7b7ab7f39471')), 74 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4a257269-72db-4283-a051-7b7ab7f39471'))))
	(be1e95b4-5ca8-4af3-8bd4-d2ff03f9d1fa,Map(44 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('be1e95b4-5ca8-4af3-8bd4-d2ff03f9d1fa')), 43 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('be1e95b4-5ca8-4af3-8bd4-d2ff03f9d1fa'))))
	(1073c688-aadf-4fef-870b-f6332134875e,Map(46 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1073c688-aadf-4fef-870b-f6332134875e')), 47 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1073c688-aadf-4fef-870b-f6332134875e'))))
	(87573c8a-6f16-4192-8d90-655de2106c1b,Map(34 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('87573c8a-6f16-4192-8d90-655de2106c1b')), 35 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('87573c8a-6f16-4192-8d90-655de2106c1b'))))
	(57ad8c08-da6b-41b6-8b73-2df0c3ed8673,Map(21 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,f9d05a64-d14f-45da-9af2-ac91e2e83a57,19)),id -> java.util.UUID('57ad8c08-da6b-41b6-8b73-2df0c3ed8673'))))
	(70189f69-e748-49d9-93f9-4ea3a99f8c96,Map(33 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,a8cdfd48-c2d7-436b-91be-a13ad43d5b7c,31)),id -> java.util.UUID('70189f69-e748-49d9-93f9-4ea3a99f8c96'))))
	(c1ad4860-8409-4714-9044-e3235383de02,Map(79 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c1ad4860-8409-4714-9044-e3235383de02')), 80 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c1ad4860-8409-4714-9044-e3235383de02'))))
	(defa2d66-d1af-4f2e-931e-d32cac75112f,Map(14 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('defa2d66-d1af-4f2e-931e-d32cac75112f')), 13 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('defa2d66-d1af-4f2e-931e-d32cac75112f'))))
	(a0cfa5c1-976e-4e34-a902-2e37cfdd40ce,Map(25 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a0cfa5c1-976e-4e34-a902-2e37cfdd40ce')), 26 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a0cfa5c1-976e-4e34-a902-2e37cfdd40ce'))))
	(8f540e2b-101d-4171-8f68-86cdb4fa69bb,Map(42 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,c0fc3cbb-bdd3-4d42-82e5-d277aaae7a76,40)),id -> java.util.UUID('8f540e2b-101d-4171-8f68-86cdb4fa69bb'))))
	(4c2d19ed-49d5-4756-8ab2-c39edba9592d,Map(10 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4c2d19ed-49d5-4756-8ab2-c39edba9592d')), 11 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4c2d19ed-49d5-4756-8ab2-c39edba9592d'))))
	(18783b18-8c0f-4dd4-9870-2d48d431763c,Map(36 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,87573c8a-6f16-4192-8d90-655de2106c1b,34)),id -> java.util.UUID('18783b18-8c0f-4dd4-9870-2d48d431763c'))))
	(82da6773-b724-47f4-ba3b-95c5b79b0c3b,Map(39 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,3355ab95-cde4-43ab-aebb-62482d2f2a5e,37)),id -> java.util.UUID('82da6773-b724-47f4-ba3b-95c5b79b0c3b'))))
	(74168433-9893-4175-8802-39361d0273f0,Map(28 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('74168433-9893-4175-8802-39361d0273f0')), 29 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('74168433-9893-4175-8802-39361d0273f0'))))
	(f876fbec-414e-4f5a-a7cb-ac85c1aaf343,Map(2 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f876fbec-414e-4f5a-a7cb-ac85c1aaf343')), 1 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f876fbec-414e-4f5a-a7cb-ac85c1aaf343'))))
	(be81824b-0565-492f-8c77-c1852e946c1c,Map(7 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('be81824b-0565-492f-8c77-c1852e946c1c')), 8 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('be81824b-0565-492f-8c77-c1852e946c1c'))))
	(e2d7e39d-3061-4db7-8d98-d99cc1c543c9,Map(69 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,415d07d7-eba5-429c-b933-bfc7ae3fc750,67)),id -> java.util.UUID('e2d7e39d-3061-4db7-8d98-d99cc1c543c9'))))
	(354c7a2c-9eb4-4f1b-b185-8695815a1bcc,Map(48 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,1073c688-aadf-4fef-870b-f6332134875e,46)),id -> java.util.UUID('354c7a2c-9eb4-4f1b-b185-8695815a1bcc'))))
	(3355ab95-cde4-43ab-aebb-62482d2f2a5e,Map(37 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3355ab95-cde4-43ab-aebb-62482d2f2a5e')), 38 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3355ab95-cde4-43ab-aebb-62482d2f2a5e'))))
	(e156ce6d-838b-42f8-b958-6921ff0fe58d,Map(60 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,0dea3982-0870-4642-8b16-4c3830cee73f,58)),id -> java.util.UUID('e156ce6d-838b-42f8-b958-6921ff0fe58d'))))
	(1303b2d7-c12f-4512-8dcd-49792760f445,Map(16 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1303b2d7-c12f-4512-8dcd-49792760f445')), 17 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1303b2d7-c12f-4512-8dcd-49792760f445'))))
	(a8cdfd48-c2d7-436b-91be-a13ad43d5b7c,Map(32 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a8cdfd48-c2d7-436b-91be-a13ad43d5b7c')), 31 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a8cdfd48-c2d7-436b-91be-a13ad43d5b7c'))))
	(49cbc81f-294a-45b4-8ef3-ec1113ca02f5,Map(77 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('49cbc81f-294a-45b4-8ef3-ec1113ca02f5')), 76 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('49cbc81f-294a-45b4-8ef3-ec1113ca02f5'))))
	(4451ce75-88e6-4485-b5bb-f436f8415779,Map(50 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4451ce75-88e6-4485-b5bb-f436f8415779')), 49 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4451ce75-88e6-4485-b5bb-f436f8415779'))))
	(642da46f-083f-4111-8264-a601556f7a27,Map(54 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,8da459b7-54d2-47a4-aaf0-7a7820f11b51,52)),id -> java.util.UUID('642da46f-083f-4111-8264-a601556f7a27'))))
	(c1a1b1e5-cb46-4bc7-81cd-57a4c81644e0,Map(90 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,2d8deb90-fd3a-472f-ab7b-1cbc422d12e1,88)),id -> java.util.UUID('c1a1b1e5-cb46-4bc7-81cd-57a4c81644e0'))))
	(80717965-6ff2-48a8-bb53-23a6dc8b8968,Map(86 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('80717965-6ff2-48a8-bb53-23a6dc8b8968')), 85 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('80717965-6ff2-48a8-bb53-23a6dc8b8968'))))
	(d9a4d902-288c-49c8-9def-c8b55afee40f,Map(12 -> models.Person(name -> 'Igor',parent -> Some(Reference(class models.Person,4c2d19ed-49d5-4756-8ab2-c39edba9592d,10)),id -> java.util.UUID('d9a4d902-288c-49c8-9def-c8b55afee40f'))))

2017-08-17 20:58:39,064 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:58:39,074 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 20:59:49,429 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 20:59:49,439 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,449 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,459 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 20:59:49,469 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:00:52,681 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:00:52,681 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:20,242 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:20,242 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,242 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:20,242 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,252 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,262 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:20,272 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,09c90a8f-32c0-4ee3-9e7d-8cea53945c88,1))
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,ad34b725-dcf7-47db-855a-addccd01b960,4))
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,a2eb7d2b-0ede-4a53-8e1e-aed172d2ee88,10))
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,c0aa4c95-e31f-4c46-98fe-e26f01415503,7))
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,57e9e9d2-fb90-42a4-9015-cc90bc73f049,13))
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,b74e11df-0c92-44f1-b0cf-b700d9571127,16))
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,db97990d-890c-4fb4-a7b4-3db59af0c119,19))
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,4edc0c7a-8b38-48a6-9f8b-3f2fce046958,22))
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,8b08cd08-45ef-46fb-9db8-ae1b3451ad70,25))
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,c55d0117-16de-4e49-bf6c-afda9d3c30b8,31))
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,bfca711c-33fd-408f-9ba0-07e9dfbf3b3a,28))
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:25,377 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,19a630dc-5306-401a-a6ea-6c5822d3164e,34))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,57acd68f-c80d-4274-92f2-9a63f1f66712,37))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,7b1e588b-ef1d-47f1-a6ff-98682317fddc,40))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,b7db4c21-bb01-4848-ae7c-e4ae719ee565,43))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,ca8292be-f32d-416b-bf2d-220f008118f7,49))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,8c280465-aa2a-42e7-8edf-551c74df52e2,46))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,272792d3-ace3-4b25-ae2d-4a8cac481b34,55))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,44c0ff62-4090-4b5c-8eae-083b05a92a52,52))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,cbbc7ea8-da22-4e6b-af35-9f814cf42e61,58))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,7c28d70b-85fe-4b91-862b-7e74dd453e4f,61))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,9eefee89-640e-48ec-961b-4097f058a59a,67))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,12fcc7cb-da68-453d-a4cf-73ba1666a137,64))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,38a3968f-0df4-4483-a9de-253dfca0f0cc,70))
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:25,387 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,e1264ebf-9053-4b38-8168-8025b245915b,73))
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,41d898cc-a263-4cfd-9ed5-5aa87bd6a772,76))
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,7e45eaac-b4ce-40f4-b5d1-f9e776672a7a,82))
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,7c9c2fed-4ea1-4951-adb1-391fbce7c7ed,85))
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,84d0574c-dacd-4a6f-833a-ecc6afd5521c,88))
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,2dd66119-84ec-421e-8ba1-3f1844d1c1e3,79))
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:03:25,397 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:03:26,367 INFO  [main] Counter[Person] - counter is 90
2017-08-17 21:03:26,367 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(272792d3-ace3-4b25-ae2d-4a8cac481b34,Map(55 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('272792d3-ace3-4b25-ae2d-4a8cac481b34')), 56 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('272792d3-ace3-4b25-ae2d-4a8cac481b34'))))
	(f04dedd9-fcc9-44c5-bfb4-e12325cc1962,Map(15 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('57e9e9d2-fb90-42a4-9015-cc90bc73f049',13,'models.Person')),id -> java.util.UUID('f04dedd9-fcc9-44c5-bfb4-e12325cc1962'))))
	(1220c580-f49d-48a7-9000-7ad2cfb009ea,Map(63 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7c28d70b-85fe-4b91-862b-7e74dd453e4f',61,'models.Person')),id -> java.util.UUID('1220c580-f49d-48a7-9000-7ad2cfb009ea'))))
	(7e45eaac-b4ce-40f4-b5d1-f9e776672a7a,Map(82 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7e45eaac-b4ce-40f4-b5d1-f9e776672a7a')), 83 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7e45eaac-b4ce-40f4-b5d1-f9e776672a7a'))))
	(a2eb7d2b-0ede-4a53-8e1e-aed172d2ee88,Map(11 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a2eb7d2b-0ede-4a53-8e1e-aed172d2ee88')), 10 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a2eb7d2b-0ede-4a53-8e1e-aed172d2ee88'))))
	(7c28d70b-85fe-4b91-862b-7e74dd453e4f,Map(61 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7c28d70b-85fe-4b91-862b-7e74dd453e4f')), 62 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7c28d70b-85fe-4b91-862b-7e74dd453e4f'))))
	(57acd68f-c80d-4274-92f2-9a63f1f66712,Map(37 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('57acd68f-c80d-4274-92f2-9a63f1f66712')), 38 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('57acd68f-c80d-4274-92f2-9a63f1f66712'))))
	(f9635069-59d5-4edf-b472-1bdd2a2f0562,Map(87 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7c9c2fed-4ea1-4951-adb1-391fbce7c7ed',85,'models.Person')),id -> java.util.UUID('f9635069-59d5-4edf-b472-1bdd2a2f0562'))))
	(8006684f-d3f7-44ce-af57-59d7b3c2b453,Map(57 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('272792d3-ace3-4b25-ae2d-4a8cac481b34',55,'models.Person')),id -> java.util.UUID('8006684f-d3f7-44ce-af57-59d7b3c2b453'))))
	(4edc0c7a-8b38-48a6-9f8b-3f2fce046958,Map(22 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4edc0c7a-8b38-48a6-9f8b-3f2fce046958')), 23 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4edc0c7a-8b38-48a6-9f8b-3f2fce046958'))))
	(c55d0117-16de-4e49-bf6c-afda9d3c30b8,Map(31 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c55d0117-16de-4e49-bf6c-afda9d3c30b8')), 32 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c55d0117-16de-4e49-bf6c-afda9d3c30b8'))))
	(7bf44d28-4b0e-4efd-bff5-8657d6a60a22,Map(18 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b74e11df-0c92-44f1-b0cf-b700d9571127',16,'models.Person')),id -> java.util.UUID('7bf44d28-4b0e-4efd-bff5-8657d6a60a22'))))
	(e1ab1225-4ab6-4904-acdc-45539b39400f,Map(66 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('12fcc7cb-da68-453d-a4cf-73ba1666a137',64,'models.Person')),id -> java.util.UUID('e1ab1225-4ab6-4904-acdc-45539b39400f'))))
	(c0aa4c95-e31f-4c46-98fe-e26f01415503,Map(7 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c0aa4c95-e31f-4c46-98fe-e26f01415503')), 8 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c0aa4c95-e31f-4c46-98fe-e26f01415503'))))
	(9eefee89-640e-48ec-961b-4097f058a59a,Map(67 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9eefee89-640e-48ec-961b-4097f058a59a')), 68 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9eefee89-640e-48ec-961b-4097f058a59a'))))
	(09c90a8f-32c0-4ee3-9e7d-8cea53945c88,Map(2 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('09c90a8f-32c0-4ee3-9e7d-8cea53945c88')), 1 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('09c90a8f-32c0-4ee3-9e7d-8cea53945c88'))))
	(e4f3011f-0c8f-4b2f-ba90-f3db182abb70,Map(84 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7e45eaac-b4ce-40f4-b5d1-f9e776672a7a',82,'models.Person')),id -> java.util.UUID('e4f3011f-0c8f-4b2f-ba90-f3db182abb70'))))
	(ca8292be-f32d-416b-bf2d-220f008118f7,Map(50 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ca8292be-f32d-416b-bf2d-220f008118f7')), 49 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ca8292be-f32d-416b-bf2d-220f008118f7'))))
	(f09e6674-3baf-4cca-8374-9269e9f012b1,Map(12 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a2eb7d2b-0ede-4a53-8e1e-aed172d2ee88',10,'models.Person')),id -> java.util.UUID('f09e6674-3baf-4cca-8374-9269e9f012b1'))))
	(63e4f676-7bb7-4043-8500-760c2a417290,Map(36 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('19a630dc-5306-401a-a6ea-6c5822d3164e',34,'models.Person')),id -> java.util.UUID('63e4f676-7bb7-4043-8500-760c2a417290'))))
	(19a630dc-5306-401a-a6ea-6c5822d3164e,Map(34 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('19a630dc-5306-401a-a6ea-6c5822d3164e')), 35 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('19a630dc-5306-401a-a6ea-6c5822d3164e'))))
	(161fd5cf-9f8e-4318-9d8e-de9f1928b1e8,Map(72 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('38a3968f-0df4-4483-a9de-253dfca0f0cc',70,'models.Person')),id -> java.util.UUID('161fd5cf-9f8e-4318-9d8e-de9f1928b1e8'))))
	(9f816062-0ce3-4b11-963f-135f66f7e00b,Map(69 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9eefee89-640e-48ec-961b-4097f058a59a',67,'models.Person')),id -> java.util.UUID('9f816062-0ce3-4b11-963f-135f66f7e00b'))))
	(bfca711c-33fd-408f-9ba0-07e9dfbf3b3a,Map(28 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bfca711c-33fd-408f-9ba0-07e9dfbf3b3a')), 29 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bfca711c-33fd-408f-9ba0-07e9dfbf3b3a'))))
	(500be3c8-8348-4083-b4f3-62b0a021c29a,Map(48 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('8c280465-aa2a-42e7-8edf-551c74df52e2',46,'models.Person')),id -> java.util.UUID('500be3c8-8348-4083-b4f3-62b0a021c29a'))))
	(7c9c2fed-4ea1-4951-adb1-391fbce7c7ed,Map(85 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7c9c2fed-4ea1-4951-adb1-391fbce7c7ed')), 86 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7c9c2fed-4ea1-4951-adb1-391fbce7c7ed'))))
	(ad34b725-dcf7-47db-855a-addccd01b960,Map(4 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ad34b725-dcf7-47db-855a-addccd01b960')), 5 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ad34b725-dcf7-47db-855a-addccd01b960'))))
	(db97990d-890c-4fb4-a7b4-3db59af0c119,Map(19 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('db97990d-890c-4fb4-a7b4-3db59af0c119')), 20 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('db97990d-890c-4fb4-a7b4-3db59af0c119'))))
	(84d0574c-dacd-4a6f-833a-ecc6afd5521c,Map(88 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('84d0574c-dacd-4a6f-833a-ecc6afd5521c')), 89 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('84d0574c-dacd-4a6f-833a-ecc6afd5521c'))))
	(44c0ff62-4090-4b5c-8eae-083b05a92a52,Map(52 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('44c0ff62-4090-4b5c-8eae-083b05a92a52')), 53 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('44c0ff62-4090-4b5c-8eae-083b05a92a52'))))
	(b7db4c21-bb01-4848-ae7c-e4ae719ee565,Map(43 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b7db4c21-bb01-4848-ae7c-e4ae719ee565')), 44 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b7db4c21-bb01-4848-ae7c-e4ae719ee565'))))
	(cfb02da5-2675-4795-b5a5-2c23492faf02,Map(3 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('09c90a8f-32c0-4ee3-9e7d-8cea53945c88',1,'models.Person')),id -> java.util.UUID('cfb02da5-2675-4795-b5a5-2c23492faf02'))))
	(e1264ebf-9053-4b38-8168-8025b245915b,Map(73 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e1264ebf-9053-4b38-8168-8025b245915b')), 74 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e1264ebf-9053-4b38-8168-8025b245915b'))))
	(38a3968f-0df4-4483-a9de-253dfca0f0cc,Map(70 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('38a3968f-0df4-4483-a9de-253dfca0f0cc')), 71 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('38a3968f-0df4-4483-a9de-253dfca0f0cc'))))
	(07c2e611-abd2-4531-817c-bb5b5f0c1fef,Map(42 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7b1e588b-ef1d-47f1-a6ff-98682317fddc',40,'models.Person')),id -> java.util.UUID('07c2e611-abd2-4531-817c-bb5b5f0c1fef'))))
	(047b60de-442e-4f55-8cc9-f728b2f2dcaf,Map(51 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ca8292be-f32d-416b-bf2d-220f008118f7',49,'models.Person')),id -> java.util.UUID('047b60de-442e-4f55-8cc9-f728b2f2dcaf'))))
	(b74e11df-0c92-44f1-b0cf-b700d9571127,Map(16 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b74e11df-0c92-44f1-b0cf-b700d9571127')), 17 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b74e11df-0c92-44f1-b0cf-b700d9571127'))))
	(79c3e38a-0fdc-4743-a6be-5a7ed030e82b,Map(60 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('cbbc7ea8-da22-4e6b-af35-9f814cf42e61',58,'models.Person')),id -> java.util.UUID('79c3e38a-0fdc-4743-a6be-5a7ed030e82b'))))
	(7b1e588b-ef1d-47f1-a6ff-98682317fddc,Map(41 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7b1e588b-ef1d-47f1-a6ff-98682317fddc')), 40 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7b1e588b-ef1d-47f1-a6ff-98682317fddc'))))
	(197aa46d-2a4f-4ecb-8f5d-083b9650cd77,Map(9 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c0aa4c95-e31f-4c46-98fe-e26f01415503',7,'models.Person')),id -> java.util.UUID('197aa46d-2a4f-4ecb-8f5d-083b9650cd77'))))
	(991eb385-1e4e-46c8-93e0-a7f66a7465a5,Map(78 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('41d898cc-a263-4cfd-9ed5-5aa87bd6a772',76,'models.Person')),id -> java.util.UUID('991eb385-1e4e-46c8-93e0-a7f66a7465a5'))))
	(12fcc7cb-da68-453d-a4cf-73ba1666a137,Map(64 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('12fcc7cb-da68-453d-a4cf-73ba1666a137')), 65 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('12fcc7cb-da68-453d-a4cf-73ba1666a137'))))
	(41d898cc-a263-4cfd-9ed5-5aa87bd6a772,Map(77 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('41d898cc-a263-4cfd-9ed5-5aa87bd6a772')), 76 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('41d898cc-a263-4cfd-9ed5-5aa87bd6a772'))))
	(518c5c99-83c7-47ed-b28b-b24c7161dbc2,Map(21 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('db97990d-890c-4fb4-a7b4-3db59af0c119',19,'models.Person')),id -> java.util.UUID('518c5c99-83c7-47ed-b28b-b24c7161dbc2'))))
	(a809caa2-0f8e-4ff5-b20d-526847d4abff,Map(39 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('57acd68f-c80d-4274-92f2-9a63f1f66712',37,'models.Person')),id -> java.util.UUID('a809caa2-0f8e-4ff5-b20d-526847d4abff'))))
	(205240a8-b979-49a9-a3ff-1d31873dc513,Map(30 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('bfca711c-33fd-408f-9ba0-07e9dfbf3b3a',28,'models.Person')),id -> java.util.UUID('205240a8-b979-49a9-a3ff-1d31873dc513'))))
	(f50e5851-e916-456e-8fc1-68a85c40de44,Map(90 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('84d0574c-dacd-4a6f-833a-ecc6afd5521c',88,'models.Person')),id -> java.util.UUID('f50e5851-e916-456e-8fc1-68a85c40de44'))))
	(a760ba2d-721d-4a6f-a97b-7b91f7c57568,Map(24 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4edc0c7a-8b38-48a6-9f8b-3f2fce046958',22,'models.Person')),id -> java.util.UUID('a760ba2d-721d-4a6f-a97b-7b91f7c57568'))))
	(57e9e9d2-fb90-42a4-9015-cc90bc73f049,Map(13 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('57e9e9d2-fb90-42a4-9015-cc90bc73f049')), 14 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('57e9e9d2-fb90-42a4-9015-cc90bc73f049'))))
	(8c280465-aa2a-42e7-8edf-551c74df52e2,Map(46 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8c280465-aa2a-42e7-8edf-551c74df52e2')), 47 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8c280465-aa2a-42e7-8edf-551c74df52e2'))))
	(5c66a8c1-c79e-4114-a366-1323c9cabab4,Map(45 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b7db4c21-bb01-4848-ae7c-e4ae719ee565',43,'models.Person')),id -> java.util.UUID('5c66a8c1-c79e-4114-a366-1323c9cabab4'))))
	(16e0c857-c53e-4c5e-89f5-3ffe5561695e,Map(27 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('8b08cd08-45ef-46fb-9db8-ae1b3451ad70',25,'models.Person')),id -> java.util.UUID('16e0c857-c53e-4c5e-89f5-3ffe5561695e'))))
	(2dd66119-84ec-421e-8ba1-3f1844d1c1e3,Map(80 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2dd66119-84ec-421e-8ba1-3f1844d1c1e3')), 79 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2dd66119-84ec-421e-8ba1-3f1844d1c1e3'))))
	(395269e0-bf2e-41d3-bcad-e2c68d07a54e,Map(6 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ad34b725-dcf7-47db-855a-addccd01b960',4,'models.Person')),id -> java.util.UUID('395269e0-bf2e-41d3-bcad-e2c68d07a54e'))))
	(ee4afb19-84e5-4b51-b677-897ec023a543,Map(54 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('44c0ff62-4090-4b5c-8eae-083b05a92a52',52,'models.Person')),id -> java.util.UUID('ee4afb19-84e5-4b51-b677-897ec023a543'))))
	(8b08cd08-45ef-46fb-9db8-ae1b3451ad70,Map(25 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8b08cd08-45ef-46fb-9db8-ae1b3451ad70')), 26 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8b08cd08-45ef-46fb-9db8-ae1b3451ad70'))))
	(dfd8f428-1a0a-44fb-bafd-a306ccd1d111,Map(75 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e1264ebf-9053-4b38-8168-8025b245915b',73,'models.Person')),id -> java.util.UUID('dfd8f428-1a0a-44fb-bafd-a306ccd1d111'))))
	(81025f84-bb29-4f48-b2c5-95084e6c07b6,Map(81 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2dd66119-84ec-421e-8ba1-3f1844d1c1e3',79,'models.Person')),id -> java.util.UUID('81025f84-bb29-4f48-b2c5-95084e6c07b6'))))
	(d9e2076b-41f5-4061-9ca0-6f97c68d16ef,Map(33 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c55d0117-16de-4e49-bf6c-afda9d3c30b8',31,'models.Person')),id -> java.util.UUID('d9e2076b-41f5-4061-9ca0-6f97c68d16ef'))))
	(cbbc7ea8-da22-4e6b-af35-9f814cf42e61,Map(59 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cbbc7ea8-da22-4e6b-af35-9f814cf42e61')), 58 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cbbc7ea8-da22-4e6b-af35-9f814cf42e61'))))

2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,bd9212fb-4b8b-43df-aff8-aaccd708d8a2,1))
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,d84d01f6-84ce-4902-92b7-592eceea3275,4))
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,a53108a7-84be-429e-a87a-fa27bb87943f,7))
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,fe5ea044-cc69-45bf-b0ea-27b0968d75f5,10))
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,4a1efc01-c86a-47af-bc8c-ca36ee90ee54,13))
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,24434326-d50a-448e-a56f-0fbfb94cee5a,16))
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,e4f69e12-07a9-4bfe-a564-61de0a601936,19))
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,ff336d3e-07fe-4cf8-abe1-57ebbc0c21a7,22))
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,9fb46f1f-d18e-4c5c-bb50-034d81336793,25))
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,aea54d52-9b5e-42ac-833b-82839677b461,28))
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,09f5876a-9ddd-4f70-9bd8-dd79c47629f7,31))
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:04:52,194 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,2251feaf-5876-4180-8857-50f99fb56288,34))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,150e26aa-08ec-4cac-9b81-57f3efe991a0,37))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,be5a8d44-8b6a-4403-a6c7-c1e817142524,40))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,06cdf7c8-c40e-453f-81db-d238881f08fe,43))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,7cc6bd88-cdd7-40c0-81ac-647077064ec0,46))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,cd545558-77d0-479f-a775-681021425cb5,49))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,7a80a38e-51a2-45d3-ad5d-3d3b0c8b847d,52))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,4ed0a152-45eb-4df9-9322-e540bb7414c8,55))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,714651bc-0f83-4ade-8a0e-ba889580bdfc,58))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,cca4f8ef-08ac-416f-91c5-8eca4bf1c230,61))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,585f33a7-d5d0-40c9-9517-a12a6f6cada8,64))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,9f0b5d90-e6e4-46c0-8509-ca020067edb7,67))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,84bfd9ea-1fe2-4c8a-81f1-d8633da50441,70))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,683678bc-227b-400f-a051-c76bf0440d22,73))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,6a1c7ca7-19dd-46f2-a4be-43befdf43a48,76))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,f42af61f-3a7a-4b0c-8ee1-833da3e83214,79))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,da8a5870-785e-4c24-85ec-cb1147b5fafa,82))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,c5632f5d-1927-4533-a244-2549d976ba89,85))
2017-08-17 21:04:52,204 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,ee608854-b25b-4a79-a9d3-6ab095c16bed,88))
2017-08-17 21:04:53,184 INFO  [main] Counter[Person] - counter is 90
2017-08-17 21:04:53,184 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(1a6c2495-4b07-4edb-a0a6-50688c19e220,Map(27 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9fb46f1f-d18e-4c5c-bb50-034d81336793',25,'models.Person')),id -> java.util.UUID('1a6c2495-4b07-4edb-a0a6-50688c19e220'))))
	(da8a5870-785e-4c24-85ec-cb1147b5fafa,Map(82 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('da8a5870-785e-4c24-85ec-cb1147b5fafa')), 83 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('da8a5870-785e-4c24-85ec-cb1147b5fafa'))))
	(1b22f693-cf72-433b-8f2c-5e8ab14a46bd,Map(9 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a53108a7-84be-429e-a87a-fa27bb87943f',7,'models.Person')),id -> java.util.UUID('1b22f693-cf72-433b-8f2c-5e8ab14a46bd'))))
	(a53108a7-84be-429e-a87a-fa27bb87943f,Map(7 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a53108a7-84be-429e-a87a-fa27bb87943f')), 8 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a53108a7-84be-429e-a87a-fa27bb87943f'))))
	(1abe004e-161c-4efb-b153-c90bf48d266f,Map(33 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('09f5876a-9ddd-4f70-9bd8-dd79c47629f7',31,'models.Person')),id -> java.util.UUID('1abe004e-161c-4efb-b153-c90bf48d266f'))))
	(e913201e-88c2-4cc3-87cb-01f4e556d84b,Map(66 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('585f33a7-d5d0-40c9-9517-a12a6f6cada8',64,'models.Person')),id -> java.util.UUID('e913201e-88c2-4cc3-87cb-01f4e556d84b'))))
	(585f33a7-d5d0-40c9-9517-a12a6f6cada8,Map(64 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('585f33a7-d5d0-40c9-9517-a12a6f6cada8')), 65 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('585f33a7-d5d0-40c9-9517-a12a6f6cada8'))))
	(ee2c572f-dff1-4d0a-b137-65b12c1dff28,Map(24 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ff336d3e-07fe-4cf8-abe1-57ebbc0c21a7',22,'models.Person')),id -> java.util.UUID('ee2c572f-dff1-4d0a-b137-65b12c1dff28'))))
	(7fccc8b8-3d9e-4190-b072-915ec2ca6290,Map(60 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('714651bc-0f83-4ade-8a0e-ba889580bdfc',58,'models.Person')),id -> java.util.UUID('7fccc8b8-3d9e-4190-b072-915ec2ca6290'))))
	(714651bc-0f83-4ade-8a0e-ba889580bdfc,Map(58 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('714651bc-0f83-4ade-8a0e-ba889580bdfc')), 59 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('714651bc-0f83-4ade-8a0e-ba889580bdfc'))))
	(1cb5f8c8-b36b-49ff-a89d-4037920d2787,Map(63 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('cca4f8ef-08ac-416f-91c5-8eca4bf1c230',61,'models.Person')),id -> java.util.UUID('1cb5f8c8-b36b-49ff-a89d-4037920d2787'))))
	(c5632f5d-1927-4533-a244-2549d976ba89,Map(85 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c5632f5d-1927-4533-a244-2549d976ba89')), 86 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c5632f5d-1927-4533-a244-2549d976ba89'))))
	(ff336d3e-07fe-4cf8-abe1-57ebbc0c21a7,Map(23 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ff336d3e-07fe-4cf8-abe1-57ebbc0c21a7')), 22 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ff336d3e-07fe-4cf8-abe1-57ebbc0c21a7'))))
	(03c7370b-6fcf-4da3-9a78-d2216b181946,Map(12 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fe5ea044-cc69-45bf-b0ea-27b0968d75f5',10,'models.Person')),id -> java.util.UUID('03c7370b-6fcf-4da3-9a78-d2216b181946'))))
	(d55175c4-ec7c-4b14-aa47-5d32feaeeb2e,Map(69 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9f0b5d90-e6e4-46c0-8509-ca020067edb7',67,'models.Person')),id -> java.util.UUID('d55175c4-ec7c-4b14-aa47-5d32feaeeb2e'))))
	(600a9c72-2f1b-44cf-a133-8cd54dd06b57,Map(6 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d84d01f6-84ce-4902-92b7-592eceea3275',4,'models.Person')),id -> java.util.UUID('600a9c72-2f1b-44cf-a133-8cd54dd06b57'))))
	(f42af61f-3a7a-4b0c-8ee1-833da3e83214,Map(79 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f42af61f-3a7a-4b0c-8ee1-833da3e83214')), 80 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f42af61f-3a7a-4b0c-8ee1-833da3e83214'))))
	(e4f69e12-07a9-4bfe-a564-61de0a601936,Map(19 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e4f69e12-07a9-4bfe-a564-61de0a601936')), 20 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e4f69e12-07a9-4bfe-a564-61de0a601936'))))
	(ee608854-b25b-4a79-a9d3-6ab095c16bed,Map(88 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ee608854-b25b-4a79-a9d3-6ab095c16bed')), 89 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ee608854-b25b-4a79-a9d3-6ab095c16bed'))))
	(6a1c7ca7-19dd-46f2-a4be-43befdf43a48,Map(76 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('6a1c7ca7-19dd-46f2-a4be-43befdf43a48')), 77 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('6a1c7ca7-19dd-46f2-a4be-43befdf43a48'))))
	(4a1efc01-c86a-47af-bc8c-ca36ee90ee54,Map(13 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4a1efc01-c86a-47af-bc8c-ca36ee90ee54')), 14 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4a1efc01-c86a-47af-bc8c-ca36ee90ee54'))))
	(3850381a-5d98-473a-b83d-4fe2616b377b,Map(54 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7a80a38e-51a2-45d3-ad5d-3d3b0c8b847d',52,'models.Person')),id -> java.util.UUID('3850381a-5d98-473a-b83d-4fe2616b377b'))))
	(e1a894f5-f2a6-457d-9484-38e147e09163,Map(78 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('6a1c7ca7-19dd-46f2-a4be-43befdf43a48',76,'models.Person')),id -> java.util.UUID('e1a894f5-f2a6-457d-9484-38e147e09163'))))
	(e8ae573a-ac28-4648-a651-e0577bde0a1d,Map(42 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('be5a8d44-8b6a-4403-a6c7-c1e817142524',40,'models.Person')),id -> java.util.UUID('e8ae573a-ac28-4648-a651-e0577bde0a1d'))))
	(d996a641-ec1e-40d2-9e3a-13fa3f70a01a,Map(90 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ee608854-b25b-4a79-a9d3-6ab095c16bed',88,'models.Person')),id -> java.util.UUID('d996a641-ec1e-40d2-9e3a-13fa3f70a01a'))))
	(4ed0a152-45eb-4df9-9322-e540bb7414c8,Map(55 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4ed0a152-45eb-4df9-9322-e540bb7414c8')), 56 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4ed0a152-45eb-4df9-9322-e540bb7414c8'))))
	(84bfd9ea-1fe2-4c8a-81f1-d8633da50441,Map(70 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('84bfd9ea-1fe2-4c8a-81f1-d8633da50441')), 71 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('84bfd9ea-1fe2-4c8a-81f1-d8633da50441'))))
	(cd545558-77d0-479f-a775-681021425cb5,Map(49 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cd545558-77d0-479f-a775-681021425cb5')), 50 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cd545558-77d0-479f-a775-681021425cb5'))))
	(d84d01f6-84ce-4902-92b7-592eceea3275,Map(4 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d84d01f6-84ce-4902-92b7-592eceea3275')), 5 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d84d01f6-84ce-4902-92b7-592eceea3275'))))
	(cca4f8ef-08ac-416f-91c5-8eca4bf1c230,Map(61 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cca4f8ef-08ac-416f-91c5-8eca4bf1c230')), 62 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cca4f8ef-08ac-416f-91c5-8eca4bf1c230'))))
	(9fb46f1f-d18e-4c5c-bb50-034d81336793,Map(26 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9fb46f1f-d18e-4c5c-bb50-034d81336793')), 25 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9fb46f1f-d18e-4c5c-bb50-034d81336793'))))
	(aaf71fab-7117-43a7-88dc-25cfba8a2ff1,Map(84 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('da8a5870-785e-4c24-85ec-cb1147b5fafa',82,'models.Person')),id -> java.util.UUID('aaf71fab-7117-43a7-88dc-25cfba8a2ff1'))))
	(4a74b262-a010-404e-ae83-a71acba5cde3,Map(45 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('06cdf7c8-c40e-453f-81db-d238881f08fe',43,'models.Person')),id -> java.util.UUID('4a74b262-a010-404e-ae83-a71acba5cde3'))))
	(b1a7ba8a-21a0-4849-a582-cdd86033c57d,Map(72 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('84bfd9ea-1fe2-4c8a-81f1-d8633da50441',70,'models.Person')),id -> java.util.UUID('b1a7ba8a-21a0-4849-a582-cdd86033c57d'))))
	(7a80a38e-51a2-45d3-ad5d-3d3b0c8b847d,Map(52 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7a80a38e-51a2-45d3-ad5d-3d3b0c8b847d')), 53 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7a80a38e-51a2-45d3-ad5d-3d3b0c8b847d'))))
	(aea54d52-9b5e-42ac-833b-82839677b461,Map(28 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('aea54d52-9b5e-42ac-833b-82839677b461')), 29 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('aea54d52-9b5e-42ac-833b-82839677b461'))))
	(fe5ea044-cc69-45bf-b0ea-27b0968d75f5,Map(11 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fe5ea044-cc69-45bf-b0ea-27b0968d75f5')), 10 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fe5ea044-cc69-45bf-b0ea-27b0968d75f5'))))
	(946600fc-d607-439d-83cb-f2d833f5a9eb,Map(15 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4a1efc01-c86a-47af-bc8c-ca36ee90ee54',13,'models.Person')),id -> java.util.UUID('946600fc-d607-439d-83cb-f2d833f5a9eb'))))
	(4bf696c1-e95a-430e-b5cb-5d7c3ec28926,Map(3 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('bd9212fb-4b8b-43df-aff8-aaccd708d8a2',1,'models.Person')),id -> java.util.UUID('4bf696c1-e95a-430e-b5cb-5d7c3ec28926'))))
	(da1d21d2-08de-46c9-8bba-6da46cc51712,Map(21 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e4f69e12-07a9-4bfe-a564-61de0a601936',19,'models.Person')),id -> java.util.UUID('da1d21d2-08de-46c9-8bba-6da46cc51712'))))
	(6bd542a3-058c-4925-bb18-3565946b3e38,Map(87 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c5632f5d-1927-4533-a244-2549d976ba89',85,'models.Person')),id -> java.util.UUID('6bd542a3-058c-4925-bb18-3565946b3e38'))))
	(3b8dfc04-70d9-447d-80b8-5d3f9ebe6a09,Map(30 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('aea54d52-9b5e-42ac-833b-82839677b461',28,'models.Person')),id -> java.util.UUID('3b8dfc04-70d9-447d-80b8-5d3f9ebe6a09'))))
	(150e26aa-08ec-4cac-9b81-57f3efe991a0,Map(37 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('150e26aa-08ec-4cac-9b81-57f3efe991a0')), 38 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('150e26aa-08ec-4cac-9b81-57f3efe991a0'))))
	(09f5876a-9ddd-4f70-9bd8-dd79c47629f7,Map(31 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('09f5876a-9ddd-4f70-9bd8-dd79c47629f7')), 32 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('09f5876a-9ddd-4f70-9bd8-dd79c47629f7'))))
	(2769a101-813e-4e5d-95a5-4301129856e0,Map(57 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4ed0a152-45eb-4df9-9322-e540bb7414c8',55,'models.Person')),id -> java.util.UUID('2769a101-813e-4e5d-95a5-4301129856e0'))))
	(2251feaf-5876-4180-8857-50f99fb56288,Map(34 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2251feaf-5876-4180-8857-50f99fb56288')), 35 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2251feaf-5876-4180-8857-50f99fb56288'))))
	(06cdf7c8-c40e-453f-81db-d238881f08fe,Map(44 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('06cdf7c8-c40e-453f-81db-d238881f08fe')), 43 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('06cdf7c8-c40e-453f-81db-d238881f08fe'))))
	(be5a8d44-8b6a-4403-a6c7-c1e817142524,Map(41 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('be5a8d44-8b6a-4403-a6c7-c1e817142524')), 40 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('be5a8d44-8b6a-4403-a6c7-c1e817142524'))))
	(2e009e23-94e1-4455-99de-929d7a51aadd,Map(36 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2251feaf-5876-4180-8857-50f99fb56288',34,'models.Person')),id -> java.util.UUID('2e009e23-94e1-4455-99de-929d7a51aadd'))))
	(3ffd73ef-33ca-427b-b570-5d9ffd64623a,Map(18 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('24434326-d50a-448e-a56f-0fbfb94cee5a',16,'models.Person')),id -> java.util.UUID('3ffd73ef-33ca-427b-b570-5d9ffd64623a'))))
	(181f0e27-2d87-4630-aaae-3518e868a831,Map(48 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7cc6bd88-cdd7-40c0-81ac-647077064ec0',46,'models.Person')),id -> java.util.UUID('181f0e27-2d87-4630-aaae-3518e868a831'))))
	(24434326-d50a-448e-a56f-0fbfb94cee5a,Map(16 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('24434326-d50a-448e-a56f-0fbfb94cee5a')), 17 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('24434326-d50a-448e-a56f-0fbfb94cee5a'))))
	(bd9212fb-4b8b-43df-aff8-aaccd708d8a2,Map(1 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bd9212fb-4b8b-43df-aff8-aaccd708d8a2')), 2 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bd9212fb-4b8b-43df-aff8-aaccd708d8a2'))))
	(683678bc-227b-400f-a051-c76bf0440d22,Map(74 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('683678bc-227b-400f-a051-c76bf0440d22')), 73 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('683678bc-227b-400f-a051-c76bf0440d22'))))
	(7cc6bd88-cdd7-40c0-81ac-647077064ec0,Map(46 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7cc6bd88-cdd7-40c0-81ac-647077064ec0')), 47 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7cc6bd88-cdd7-40c0-81ac-647077064ec0'))))
	(9f0b5d90-e6e4-46c0-8509-ca020067edb7,Map(67 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9f0b5d90-e6e4-46c0-8509-ca020067edb7')), 68 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9f0b5d90-e6e4-46c0-8509-ca020067edb7'))))
	(17e4eab0-1379-4b74-a107-2a041c77f942,Map(39 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('150e26aa-08ec-4cac-9b81-57f3efe991a0',37,'models.Person')),id -> java.util.UUID('17e4eab0-1379-4b74-a107-2a041c77f942'))))
	(2e796f56-f188-40a3-82b7-4fadade1ca55,Map(75 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('683678bc-227b-400f-a051-c76bf0440d22',73,'models.Person')),id -> java.util.UUID('2e796f56-f188-40a3-82b7-4fadade1ca55'))))
	(ff0fb305-07b1-47a4-8712-87285e41e774,Map(51 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('cd545558-77d0-479f-a775-681021425cb5',49,'models.Person')),id -> java.util.UUID('ff0fb305-07b1-47a4-8712-87285e41e774'))))
	(4b9672ee-4f71-46c7-8b2a-6cb913b19ae8,Map(81 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f42af61f-3a7a-4b0c-8ee1-833da3e83214',79,'models.Person')),id -> java.util.UUID('4b9672ee-4f71-46c7-8b2a-6cb913b19ae8'))))

2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,0b86dd87-a43c-410b-a4f8-4f06af0b967c,4))
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,e0f8e027-34b1-4cb3-88bc-9c5a44043400,1))
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,4f70af62-c3b6-4c62-bec6-31f70fed1ed4,10))
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,be26c642-ac91-4167-82f6-db20dfd7dbf5,7))
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,bbee3c94-6a6e-4a6f-9441-d7c5eb4c2509,13))
2017-08-17 21:13:53,060 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,b1c9d60c-450b-4cbb-ab1a-aa2d4ae9ce0b,16))
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,76478430-2eb5-4156-96e6-ed79a90f4f2c,22))
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,fa5f1aaf-7b06-4232-9357-82f9583fab3f,19))
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,a9b7f845-6997-4c03-8d99-757ec02fef5c,25))
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,33ffcac0-7a9f-42be-8a7d-6c5123d80a06,28))
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,9b9e20a1-c24c-4e21-8579-b64cd55e7053,34))
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,fec84e1a-0cde-411d-82ef-8b7fbc6b57bd,31))
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,a2ca4a96-f418-4ea1-b401-3a52f12f1f3f,37))
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,152d393f-9ce6-4730-8465-1bf7b215f265,43))
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,15bda19c-8fc9-48ae-a4bb-c5f55d018445,40))
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:13:53,070 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,27c3f636-682f-43d0-81fb-3dcf107227ec,52))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,2e4865f6-c272-4a8d-bc9a-40e852ada6ba,55))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,676b94b0-a61d-4b7b-82a1-01a414181eef,46))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,8d11c135-c6f5-4083-85dc-43ef26d7deea,49))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,c9a9d65a-b4ec-4a1c-8a9a-304be26c3c13,58))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,a8db41c9-5daf-42f2-8e69-2db45c372ac2,61))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,0fec0b66-d323-4868-bab5-a62c6f040bea,70))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,daaf7f3d-3054-49ca-84a5-fb75e500abd6,64))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,d4b83adb-6575-42ad-bce9-078e0af335cd,67))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,138d45fc-57f3-4f12-9041-2ccccab84b3a,73))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,dcb8a368-80ea-4722-9734-7133353885a9,76))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,d8817dc6-de11-41ba-a30b-bfc2f919d3fc,82))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,f4a996dd-7ca1-4540-a9f1-6ff0c9728f19,79))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,1bd9ea3a-5cff-412e-8b5b-cd5a0abf96d4,85))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,aa72a571-7f03-4e0e-b274-a6d9a39f3402,88))
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:13:53,080 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:13:54,050 INFO  [main] Counter[Person] - counter is 90
2017-08-17 21:13:54,050 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(46af05ca-a3be-4e04-a278-5a0ec82e06f1,Map(78 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('dcb8a368-80ea-4722-9734-7133353885a9',76,'models.Person')),id -> java.util.UUID('46af05ca-a3be-4e04-a278-5a0ec82e06f1'))))
	(94b3e1c9-74eb-4bd7-b493-66b5a34db7c7,Map(87 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1bd9ea3a-5cff-412e-8b5b-cd5a0abf96d4',85,'models.Person')),id -> java.util.UUID('94b3e1c9-74eb-4bd7-b493-66b5a34db7c7'))))
	(a8db41c9-5daf-42f2-8e69-2db45c372ac2,Map(61 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a8db41c9-5daf-42f2-8e69-2db45c372ac2')), 62 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a8db41c9-5daf-42f2-8e69-2db45c372ac2'))))
	(d8817dc6-de11-41ba-a30b-bfc2f919d3fc,Map(82 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d8817dc6-de11-41ba-a30b-bfc2f919d3fc')), 83 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d8817dc6-de11-41ba-a30b-bfc2f919d3fc'))))
	(7bbd2ac7-7032-44de-9af7-234c1651f388,Map(27 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a9b7f845-6997-4c03-8d99-757ec02fef5c',25,'models.Person')),id -> java.util.UUID('7bbd2ac7-7032-44de-9af7-234c1651f388'))))
	(18fee6bf-f425-493c-b6cc-4da3e8482259,Map(72 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('0fec0b66-d323-4868-bab5-a62c6f040bea',70,'models.Person')),id -> java.util.UUID('18fee6bf-f425-493c-b6cc-4da3e8482259'))))
	(2e4865f6-c272-4a8d-bc9a-40e852ada6ba,Map(55 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2e4865f6-c272-4a8d-bc9a-40e852ada6ba')), 56 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2e4865f6-c272-4a8d-bc9a-40e852ada6ba'))))
	(e0f8e027-34b1-4cb3-88bc-9c5a44043400,Map(1 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e0f8e027-34b1-4cb3-88bc-9c5a44043400')), 2 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e0f8e027-34b1-4cb3-88bc-9c5a44043400'))))
	(8d11c135-c6f5-4083-85dc-43ef26d7deea,Map(49 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8d11c135-c6f5-4083-85dc-43ef26d7deea')), 50 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8d11c135-c6f5-4083-85dc-43ef26d7deea'))))
	(138d45fc-57f3-4f12-9041-2ccccab84b3a,Map(73 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('138d45fc-57f3-4f12-9041-2ccccab84b3a')), 74 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('138d45fc-57f3-4f12-9041-2ccccab84b3a'))))
	(a9b7f845-6997-4c03-8d99-757ec02fef5c,Map(25 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a9b7f845-6997-4c03-8d99-757ec02fef5c')), 26 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a9b7f845-6997-4c03-8d99-757ec02fef5c'))))
	(cfb2b693-454d-4dc4-bca4-21c8fdfad96b,Map(12 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4f70af62-c3b6-4c62-bec6-31f70fed1ed4',10,'models.Person')),id -> java.util.UUID('cfb2b693-454d-4dc4-bca4-21c8fdfad96b'))))
	(0fec0b66-d323-4868-bab5-a62c6f040bea,Map(70 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0fec0b66-d323-4868-bab5-a62c6f040bea')), 71 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0fec0b66-d323-4868-bab5-a62c6f040bea'))))
	(be26c642-ac91-4167-82f6-db20dfd7dbf5,Map(7 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('be26c642-ac91-4167-82f6-db20dfd7dbf5')), 8 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('be26c642-ac91-4167-82f6-db20dfd7dbf5'))))
	(fa5f1aaf-7b06-4232-9357-82f9583fab3f,Map(19 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fa5f1aaf-7b06-4232-9357-82f9583fab3f')), 20 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fa5f1aaf-7b06-4232-9357-82f9583fab3f'))))
	(8763cb77-aef8-4123-b27c-635ec208b72a,Map(36 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9b9e20a1-c24c-4e21-8579-b64cd55e7053',34,'models.Person')),id -> java.util.UUID('8763cb77-aef8-4123-b27c-635ec208b72a'))))
	(5cea71d5-ac31-4905-810b-f386c6726021,Map(15 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('bbee3c94-6a6e-4a6f-9441-d7c5eb4c2509',13,'models.Person')),id -> java.util.UUID('5cea71d5-ac31-4905-810b-f386c6726021'))))
	(d4b83adb-6575-42ad-bce9-078e0af335cd,Map(67 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d4b83adb-6575-42ad-bce9-078e0af335cd')), 68 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d4b83adb-6575-42ad-bce9-078e0af335cd'))))
	(676b94b0-a61d-4b7b-82a1-01a414181eef,Map(46 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('676b94b0-a61d-4b7b-82a1-01a414181eef')), 47 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('676b94b0-a61d-4b7b-82a1-01a414181eef'))))
	(fd8add56-a62c-44b3-826d-f54fa54d6851,Map(24 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('76478430-2eb5-4156-96e6-ed79a90f4f2c',22,'models.Person')),id -> java.util.UUID('fd8add56-a62c-44b3-826d-f54fa54d6851'))))
	(f2c447f5-f9d8-4254-87a2-131118fe53d8,Map(69 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d4b83adb-6575-42ad-bce9-078e0af335cd',67,'models.Person')),id -> java.util.UUID('f2c447f5-f9d8-4254-87a2-131118fe53d8'))))
	(f4a996dd-7ca1-4540-a9f1-6ff0c9728f19,Map(79 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f4a996dd-7ca1-4540-a9f1-6ff0c9728f19')), 80 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f4a996dd-7ca1-4540-a9f1-6ff0c9728f19'))))
	(dcb8a368-80ea-4722-9734-7133353885a9,Map(76 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('dcb8a368-80ea-4722-9734-7133353885a9')), 77 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('dcb8a368-80ea-4722-9734-7133353885a9'))))
	(dba3b7f7-0808-4ee3-8eb0-3398d16f914e,Map(30 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('33ffcac0-7a9f-42be-8a7d-6c5123d80a06',28,'models.Person')),id -> java.util.UUID('dba3b7f7-0808-4ee3-8eb0-3398d16f914e'))))
	(c10c1d4e-2702-450d-af81-dca594608f50,Map(9 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('be26c642-ac91-4167-82f6-db20dfd7dbf5',7,'models.Person')),id -> java.util.UUID('c10c1d4e-2702-450d-af81-dca594608f50'))))
	(9b9e20a1-c24c-4e21-8579-b64cd55e7053,Map(34 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9b9e20a1-c24c-4e21-8579-b64cd55e7053')), 35 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9b9e20a1-c24c-4e21-8579-b64cd55e7053'))))
	(85d33e56-3280-47d5-8811-feba1cbb8e9a,Map(63 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a8db41c9-5daf-42f2-8e69-2db45c372ac2',61,'models.Person')),id -> java.util.UUID('85d33e56-3280-47d5-8811-feba1cbb8e9a'))))
	(9148e399-3f87-4800-a91c-b9f186785b65,Map(84 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d8817dc6-de11-41ba-a30b-bfc2f919d3fc',82,'models.Person')),id -> java.util.UUID('9148e399-3f87-4800-a91c-b9f186785b65'))))
	(1bd9ea3a-5cff-412e-8b5b-cd5a0abf96d4,Map(85 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1bd9ea3a-5cff-412e-8b5b-cd5a0abf96d4')), 86 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1bd9ea3a-5cff-412e-8b5b-cd5a0abf96d4'))))
	(59abc773-62c4-4e79-a0ee-a18ebaa8e9ef,Map(39 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a2ca4a96-f418-4ea1-b401-3a52f12f1f3f',37,'models.Person')),id -> java.util.UUID('59abc773-62c4-4e79-a0ee-a18ebaa8e9ef'))))
	(daaf7f3d-3054-49ca-84a5-fb75e500abd6,Map(64 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('daaf7f3d-3054-49ca-84a5-fb75e500abd6')), 65 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('daaf7f3d-3054-49ca-84a5-fb75e500abd6'))))
	(bbee3c94-6a6e-4a6f-9441-d7c5eb4c2509,Map(13 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bbee3c94-6a6e-4a6f-9441-d7c5eb4c2509')), 14 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bbee3c94-6a6e-4a6f-9441-d7c5eb4c2509'))))
	(f774c0e1-921d-4788-bdf4-e6ab091f2d18,Map(51 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('8d11c135-c6f5-4083-85dc-43ef26d7deea',49,'models.Person')),id -> java.util.UUID('f774c0e1-921d-4788-bdf4-e6ab091f2d18'))))
	(e4d4d238-88ad-4b3e-87c1-b5eb783ef0c0,Map(90 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('aa72a571-7f03-4e0e-b274-a6d9a39f3402',88,'models.Person')),id -> java.util.UUID('e4d4d238-88ad-4b3e-87c1-b5eb783ef0c0'))))
	(bd3c9f29-ecd8-4a5c-8f48-da354db0769e,Map(42 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('15bda19c-8fc9-48ae-a4bb-c5f55d018445',40,'models.Person')),id -> java.util.UUID('bd3c9f29-ecd8-4a5c-8f48-da354db0769e'))))
	(c9a9d65a-b4ec-4a1c-8a9a-304be26c3c13,Map(58 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c9a9d65a-b4ec-4a1c-8a9a-304be26c3c13')), 59 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c9a9d65a-b4ec-4a1c-8a9a-304be26c3c13'))))
	(6563175a-61c1-4e8c-bab5-d99b9ce56d7a,Map(75 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('138d45fc-57f3-4f12-9041-2ccccab84b3a',73,'models.Person')),id -> java.util.UUID('6563175a-61c1-4e8c-bab5-d99b9ce56d7a'))))
	(ab8992e3-2be3-4eab-bb68-4f6114929e7f,Map(81 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f4a996dd-7ca1-4540-a9f1-6ff0c9728f19',79,'models.Person')),id -> java.util.UUID('ab8992e3-2be3-4eab-bb68-4f6114929e7f'))))
	(29de7e13-3e28-4e77-a5f5-cb5f9f7ed709,Map(60 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c9a9d65a-b4ec-4a1c-8a9a-304be26c3c13',58,'models.Person')),id -> java.util.UUID('29de7e13-3e28-4e77-a5f5-cb5f9f7ed709'))))
	(76478430-2eb5-4156-96e6-ed79a90f4f2c,Map(22 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('76478430-2eb5-4156-96e6-ed79a90f4f2c')), 23 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('76478430-2eb5-4156-96e6-ed79a90f4f2c'))))
	(0b86dd87-a43c-410b-a4f8-4f06af0b967c,Map(4 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0b86dd87-a43c-410b-a4f8-4f06af0b967c')), 5 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0b86dd87-a43c-410b-a4f8-4f06af0b967c'))))
	(aa72a571-7f03-4e0e-b274-a6d9a39f3402,Map(88 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('aa72a571-7f03-4e0e-b274-a6d9a39f3402')), 89 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('aa72a571-7f03-4e0e-b274-a6d9a39f3402'))))
	(fb888188-f7e1-4697-88fa-491c46925e6c,Map(3 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e0f8e027-34b1-4cb3-88bc-9c5a44043400',1,'models.Person')),id -> java.util.UUID('fb888188-f7e1-4697-88fa-491c46925e6c'))))
	(661f73a3-9e01-4eca-8105-2640c14226ac,Map(21 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fa5f1aaf-7b06-4232-9357-82f9583fab3f',19,'models.Person')),id -> java.util.UUID('661f73a3-9e01-4eca-8105-2640c14226ac'))))
	(fec84e1a-0cde-411d-82ef-8b7fbc6b57bd,Map(31 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fec84e1a-0cde-411d-82ef-8b7fbc6b57bd')), 32 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fec84e1a-0cde-411d-82ef-8b7fbc6b57bd'))))
	(27c3f636-682f-43d0-81fb-3dcf107227ec,Map(52 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('27c3f636-682f-43d0-81fb-3dcf107227ec')), 53 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('27c3f636-682f-43d0-81fb-3dcf107227ec'))))
	(33ffcac0-7a9f-42be-8a7d-6c5123d80a06,Map(28 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('33ffcac0-7a9f-42be-8a7d-6c5123d80a06')), 29 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('33ffcac0-7a9f-42be-8a7d-6c5123d80a06'))))
	(7d001fb1-221b-4d86-aef7-af2eeb548420,Map(45 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('152d393f-9ce6-4730-8465-1bf7b215f265',43,'models.Person')),id -> java.util.UUID('7d001fb1-221b-4d86-aef7-af2eeb548420'))))
	(5694a353-1f79-4b86-a1e1-f997cf5a918c,Map(57 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2e4865f6-c272-4a8d-bc9a-40e852ada6ba',55,'models.Person')),id -> java.util.UUID('5694a353-1f79-4b86-a1e1-f997cf5a918c'))))
	(72fb91b7-dd3e-4fef-9dc1-440907bd4fae,Map(6 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('0b86dd87-a43c-410b-a4f8-4f06af0b967c',4,'models.Person')),id -> java.util.UUID('72fb91b7-dd3e-4fef-9dc1-440907bd4fae'))))
	(4f70af62-c3b6-4c62-bec6-31f70fed1ed4,Map(11 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4f70af62-c3b6-4c62-bec6-31f70fed1ed4')), 10 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4f70af62-c3b6-4c62-bec6-31f70fed1ed4'))))
	(a2ca4a96-f418-4ea1-b401-3a52f12f1f3f,Map(37 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a2ca4a96-f418-4ea1-b401-3a52f12f1f3f')), 38 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a2ca4a96-f418-4ea1-b401-3a52f12f1f3f'))))
	(21ae2fb3-99a1-44e9-8a46-ba5c5ed8f8ec,Map(66 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('daaf7f3d-3054-49ca-84a5-fb75e500abd6',64,'models.Person')),id -> java.util.UUID('21ae2fb3-99a1-44e9-8a46-ba5c5ed8f8ec'))))
	(152d393f-9ce6-4730-8465-1bf7b215f265,Map(43 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('152d393f-9ce6-4730-8465-1bf7b215f265')), 44 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('152d393f-9ce6-4730-8465-1bf7b215f265'))))
	(91a899c4-20e9-4c80-8a69-9945cc574662,Map(48 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('676b94b0-a61d-4b7b-82a1-01a414181eef',46,'models.Person')),id -> java.util.UUID('91a899c4-20e9-4c80-8a69-9945cc574662'))))
	(b1c9d60c-450b-4cbb-ab1a-aa2d4ae9ce0b,Map(16 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b1c9d60c-450b-4cbb-ab1a-aa2d4ae9ce0b')), 17 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b1c9d60c-450b-4cbb-ab1a-aa2d4ae9ce0b'))))
	(b6583fd5-a933-4533-92d9-826cd8d9b738,Map(54 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('27c3f636-682f-43d0-81fb-3dcf107227ec',52,'models.Person')),id -> java.util.UUID('b6583fd5-a933-4533-92d9-826cd8d9b738'))))
	(ccfd4d36-92c9-460e-be20-04a2b081a95c,Map(33 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fec84e1a-0cde-411d-82ef-8b7fbc6b57bd',31,'models.Person')),id -> java.util.UUID('ccfd4d36-92c9-460e-be20-04a2b081a95c'))))
	(0360770c-c263-4edb-a6c6-77f1396cb5ad,Map(18 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b1c9d60c-450b-4cbb-ab1a-aa2d4ae9ce0b',16,'models.Person')),id -> java.util.UUID('0360770c-c263-4edb-a6c6-77f1396cb5ad'))))
	(15bda19c-8fc9-48ae-a4bb-c5f55d018445,Map(40 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('15bda19c-8fc9-48ae-a4bb-c5f55d018445')), 41 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('15bda19c-8fc9-48ae-a4bb-c5f55d018445'))))

2017-08-17 21:21:16,322 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,322 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:21:16,322 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:21:16,322 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,fdbddc3c-ebeb-4a7c-a9a3-88f2de93612f,4))
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,bdaf90a7-39b0-4faa-9eeb-a1b27ef1c0db,7))
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,64159697-3c08-40b5-99b7-2deed0090eb7,10))
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,c2634986-c896-44f9-88bd-cdf3205d9857,13))
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,d1f576c2-98cf-45eb-ae35-1550a3e05bee,16))
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,4c642889-dfec-4b4e-9e67-6412f54b88f1,19))
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,e5d60bd7-51fe-4b73-98b4-4fe159575f38,22))
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,02dde917-380c-4006-88e9-1405656ec10c,25))
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,5cde913e-5545-4a13-a834-d7fe55f319b7,28))
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,243414c6-abd4-46b2-86c2-701a36115a17,31))
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,adf28607-13e3-4f58-a351-9976b131cdcf,34))
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,332 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,3ef337ad-50fc-4ee3-b8c6-8e92ea63a01f,37))
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,790ace0f-913d-4a84-8f9c-fdd92e08ddac,40))
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,1f60ca1c-1a7c-4e68-afb0-efab933856ac,43))
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,e2a244ae-f02e-4e2a-811c-9381e96abb77,46))
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,e00603c5-ab68-47ce-915d-7cdd35f6c7b9,49))
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,8db7fdad-0bf5-4a98-a4bc-60695b4aee60,52))
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,fc23d80e-0ee3-48bd-ab75-296c2f38d2f6,55))
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,19dcbb81-eac9-43e9-9c1b-6e1759a63f61,58))
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,e3b80570-5fc0-4231-b314-73a6678069a6,1))
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,972c24d9-afc0-4261-afa7-898644ef18f4,61))
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:21:16,342 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,fac3da1b-407b-48dd-8289-26d4ece7a0f9,64))
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,f41d5014-5388-414a-b3e7-e400e5edade3,67))
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,9f1617c9-de27-4072-acd0-e233eefac034,70))
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,342a2f80-7dbe-46c5-9f63-42eb2c86a04c,73))
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,f209ff09-4e81-4b44-bbe6-e5387b9a56eb,79))
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,1f532004-cf88-4dcf-96bb-71bcd1ecd497,76))
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,3cbeb6b6-b9dd-4bf4-8e64-d7b9dfb5dc41,82))
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,c80368b2-1628-43b0-9752-8b0edcea8c18,88))
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:21:16,352 DEBUG [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,531d1383-cd8c-4090-87dd-6dc64e9084ef,85))
2017-08-17 21:21:17,342 INFO  [main] Counter[Person] - counter is 90
2017-08-17 21:21:17,342 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(1f532004-cf88-4dcf-96bb-71bcd1ecd497,Map(76 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1f532004-cf88-4dcf-96bb-71bcd1ecd497')), 77 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1f532004-cf88-4dcf-96bb-71bcd1ecd497'))))
	(c2b89bcc-f97c-49f9-909a-b0a0a9e02a07,Map(42 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('790ace0f-913d-4a84-8f9c-fdd92e08ddac',40,'models.Person')),id -> java.util.UUID('c2b89bcc-f97c-49f9-909a-b0a0a9e02a07'))))
	(bdaf90a7-39b0-4faa-9eeb-a1b27ef1c0db,Map(7 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bdaf90a7-39b0-4faa-9eeb-a1b27ef1c0db')), 8 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bdaf90a7-39b0-4faa-9eeb-a1b27ef1c0db'))))
	(f209ff09-4e81-4b44-bbe6-e5387b9a56eb,Map(80 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f209ff09-4e81-4b44-bbe6-e5387b9a56eb')), 79 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f209ff09-4e81-4b44-bbe6-e5387b9a56eb'))))
	(e00603c5-ab68-47ce-915d-7cdd35f6c7b9,Map(49 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e00603c5-ab68-47ce-915d-7cdd35f6c7b9')), 50 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e00603c5-ab68-47ce-915d-7cdd35f6c7b9'))))
	(1d4b242f-7cb9-4d6f-8c9a-9220f162d238,Map(33 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('243414c6-abd4-46b2-86c2-701a36115a17',31,'models.Person')),id -> java.util.UUID('1d4b242f-7cb9-4d6f-8c9a-9220f162d238'))))
	(70a2a06f-d654-4e03-b6fd-a7bb360dcd27,Map(48 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e2a244ae-f02e-4e2a-811c-9381e96abb77',46,'models.Person')),id -> java.util.UUID('70a2a06f-d654-4e03-b6fd-a7bb360dcd27'))))
	(e3b80570-5fc0-4231-b314-73a6678069a6,Map(1 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e3b80570-5fc0-4231-b314-73a6678069a6')), 2 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e3b80570-5fc0-4231-b314-73a6678069a6'))))
	(70d23cfb-95ab-4fbf-acd0-18b3d44e070d,Map(6 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fdbddc3c-ebeb-4a7c-a9a3-88f2de93612f',4,'models.Person')),id -> java.util.UUID('70d23cfb-95ab-4fbf-acd0-18b3d44e070d'))))
	(fac3da1b-407b-48dd-8289-26d4ece7a0f9,Map(64 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fac3da1b-407b-48dd-8289-26d4ece7a0f9')), 65 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fac3da1b-407b-48dd-8289-26d4ece7a0f9'))))
	(3ef337ad-50fc-4ee3-b8c6-8e92ea63a01f,Map(37 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3ef337ad-50fc-4ee3-b8c6-8e92ea63a01f')), 38 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3ef337ad-50fc-4ee3-b8c6-8e92ea63a01f'))))
	(fc23d80e-0ee3-48bd-ab75-296c2f38d2f6,Map(55 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fc23d80e-0ee3-48bd-ab75-296c2f38d2f6')), 56 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fc23d80e-0ee3-48bd-ab75-296c2f38d2f6'))))
	(f41d5014-5388-414a-b3e7-e400e5edade3,Map(68 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f41d5014-5388-414a-b3e7-e400e5edade3')), 67 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f41d5014-5388-414a-b3e7-e400e5edade3'))))
	(548f3e06-0fac-437c-94a6-1d9981334649,Map(36 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('adf28607-13e3-4f58-a351-9976b131cdcf',34,'models.Person')),id -> java.util.UUID('548f3e06-0fac-437c-94a6-1d9981334649'))))
	(5cde913e-5545-4a13-a834-d7fe55f319b7,Map(28 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5cde913e-5545-4a13-a834-d7fe55f319b7')), 29 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5cde913e-5545-4a13-a834-d7fe55f319b7'))))
	(fa0dbdb9-c37a-42b7-a162-79c59e1d0fd1,Map(63 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('972c24d9-afc0-4261-afa7-898644ef18f4',61,'models.Person')),id -> java.util.UUID('fa0dbdb9-c37a-42b7-a162-79c59e1d0fd1'))))
	(aa1c2bc8-75dc-4a49-ad14-e4c52936544e,Map(15 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c2634986-c896-44f9-88bd-cdf3205d9857',13,'models.Person')),id -> java.util.UUID('aa1c2bc8-75dc-4a49-ad14-e4c52936544e'))))
	(8db7fdad-0bf5-4a98-a4bc-60695b4aee60,Map(52 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8db7fdad-0bf5-4a98-a4bc-60695b4aee60')), 53 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8db7fdad-0bf5-4a98-a4bc-60695b4aee60'))))
	(01f7ac25-1e91-4986-85b6-c2e14fa17b37,Map(9 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('bdaf90a7-39b0-4faa-9eeb-a1b27ef1c0db',7,'models.Person')),id -> java.util.UUID('01f7ac25-1e91-4986-85b6-c2e14fa17b37'))))
	(d1f576c2-98cf-45eb-ae35-1550a3e05bee,Map(16 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d1f576c2-98cf-45eb-ae35-1550a3e05bee')), 17 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d1f576c2-98cf-45eb-ae35-1550a3e05bee'))))
	(7d73e822-403e-4951-b34c-98ca2c2fa1ef,Map(90 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c80368b2-1628-43b0-9752-8b0edcea8c18',88,'models.Person')),id -> java.util.UUID('7d73e822-403e-4951-b34c-98ca2c2fa1ef'))))
	(5abc96dc-77a1-4098-87e9-1c84c11cf080,Map(3 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e3b80570-5fc0-4231-b314-73a6678069a6',1,'models.Person')),id -> java.util.UUID('5abc96dc-77a1-4098-87e9-1c84c11cf080'))))
	(ce363c15-6d13-450a-be3b-a1918c6e32c6,Map(75 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('342a2f80-7dbe-46c5-9f63-42eb2c86a04c',73,'models.Person')),id -> java.util.UUID('ce363c15-6d13-450a-be3b-a1918c6e32c6'))))
	(c2634986-c896-44f9-88bd-cdf3205d9857,Map(13 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c2634986-c896-44f9-88bd-cdf3205d9857')), 14 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c2634986-c896-44f9-88bd-cdf3205d9857'))))
	(3ea950ed-aa97-4b97-a198-4687e1f32e7f,Map(69 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f41d5014-5388-414a-b3e7-e400e5edade3',67,'models.Person')),id -> java.util.UUID('3ea950ed-aa97-4b97-a198-4687e1f32e7f'))))
	(3cbeb6b6-b9dd-4bf4-8e64-d7b9dfb5dc41,Map(82 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3cbeb6b6-b9dd-4bf4-8e64-d7b9dfb5dc41')), 83 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3cbeb6b6-b9dd-4bf4-8e64-d7b9dfb5dc41'))))
	(4c642889-dfec-4b4e-9e67-6412f54b88f1,Map(19 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4c642889-dfec-4b4e-9e67-6412f54b88f1')), 20 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4c642889-dfec-4b4e-9e67-6412f54b88f1'))))
	(b6d201c1-6b07-4f13-8c08-4aae6f90837f,Map(51 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e00603c5-ab68-47ce-915d-7cdd35f6c7b9',49,'models.Person')),id -> java.util.UUID('b6d201c1-6b07-4f13-8c08-4aae6f90837f'))))
	(c8b1688e-5748-4316-80e2-b75d66bb8dea,Map(27 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('02dde917-380c-4006-88e9-1405656ec10c',25,'models.Person')),id -> java.util.UUID('c8b1688e-5748-4316-80e2-b75d66bb8dea'))))
	(beece720-fcd1-4b55-b718-b4ec605df36a,Map(66 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fac3da1b-407b-48dd-8289-26d4ece7a0f9',64,'models.Person')),id -> java.util.UUID('beece720-fcd1-4b55-b718-b4ec605df36a'))))
	(c23d19a9-0b8a-41f9-9a65-28b66dd39e5b,Map(18 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d1f576c2-98cf-45eb-ae35-1550a3e05bee',16,'models.Person')),id -> java.util.UUID('c23d19a9-0b8a-41f9-9a65-28b66dd39e5b'))))
	(e2f38ee9-bbd9-472a-b6f0-8b58d32c67a3,Map(45 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1f60ca1c-1a7c-4e68-afb0-efab933856ac',43,'models.Person')),id -> java.util.UUID('e2f38ee9-bbd9-472a-b6f0-8b58d32c67a3'))))
	(e5d60bd7-51fe-4b73-98b4-4fe159575f38,Map(22 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e5d60bd7-51fe-4b73-98b4-4fe159575f38')), 23 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e5d60bd7-51fe-4b73-98b4-4fe159575f38'))))
	(1903266c-cc3c-4d34-9ceb-408ddaad7b02,Map(12 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('64159697-3c08-40b5-99b7-2deed0090eb7',10,'models.Person')),id -> java.util.UUID('1903266c-cc3c-4d34-9ceb-408ddaad7b02'))))
	(02dde917-380c-4006-88e9-1405656ec10c,Map(25 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('02dde917-380c-4006-88e9-1405656ec10c')), 26 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('02dde917-380c-4006-88e9-1405656ec10c'))))
	(f934e7a8-34fe-4644-a22d-1b4291b663e0,Map(78 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1f532004-cf88-4dcf-96bb-71bcd1ecd497',76,'models.Person')),id -> java.util.UUID('f934e7a8-34fe-4644-a22d-1b4291b663e0'))))
	(19dcbb81-eac9-43e9-9c1b-6e1759a63f61,Map(58 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('19dcbb81-eac9-43e9-9c1b-6e1759a63f61')), 59 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('19dcbb81-eac9-43e9-9c1b-6e1759a63f61'))))
	(790ace0f-913d-4a84-8f9c-fdd92e08ddac,Map(40 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('790ace0f-913d-4a84-8f9c-fdd92e08ddac')), 41 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('790ace0f-913d-4a84-8f9c-fdd92e08ddac'))))
	(531d1383-cd8c-4090-87dd-6dc64e9084ef,Map(85 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('531d1383-cd8c-4090-87dd-6dc64e9084ef')), 86 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('531d1383-cd8c-4090-87dd-6dc64e9084ef'))))
	(fdbddc3c-ebeb-4a7c-a9a3-88f2de93612f,Map(4 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fdbddc3c-ebeb-4a7c-a9a3-88f2de93612f')), 5 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fdbddc3c-ebeb-4a7c-a9a3-88f2de93612f'))))
	(adf28607-13e3-4f58-a351-9976b131cdcf,Map(35 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('adf28607-13e3-4f58-a351-9976b131cdcf')), 34 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('adf28607-13e3-4f58-a351-9976b131cdcf'))))
	(28f4c3c1-9cc8-4c21-800b-886bf62f4ffb,Map(87 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('531d1383-cd8c-4090-87dd-6dc64e9084ef',85,'models.Person')),id -> java.util.UUID('28f4c3c1-9cc8-4c21-800b-886bf62f4ffb'))))
	(342a2f80-7dbe-46c5-9f63-42eb2c86a04c,Map(73 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('342a2f80-7dbe-46c5-9f63-42eb2c86a04c')), 74 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('342a2f80-7dbe-46c5-9f63-42eb2c86a04c'))))
	(9f1617c9-de27-4072-acd0-e233eefac034,Map(70 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9f1617c9-de27-4072-acd0-e233eefac034')), 71 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9f1617c9-de27-4072-acd0-e233eefac034'))))
	(0e2d5836-7eca-40d2-965f-7293dd7c7d0a,Map(72 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9f1617c9-de27-4072-acd0-e233eefac034',70,'models.Person')),id -> java.util.UUID('0e2d5836-7eca-40d2-965f-7293dd7c7d0a'))))
	(c80368b2-1628-43b0-9752-8b0edcea8c18,Map(88 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c80368b2-1628-43b0-9752-8b0edcea8c18')), 89 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c80368b2-1628-43b0-9752-8b0edcea8c18'))))
	(dde65628-1270-448f-8419-d251936e89ed,Map(24 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e5d60bd7-51fe-4b73-98b4-4fe159575f38',22,'models.Person')),id -> java.util.UUID('dde65628-1270-448f-8419-d251936e89ed'))))
	(1f60ca1c-1a7c-4e68-afb0-efab933856ac,Map(43 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1f60ca1c-1a7c-4e68-afb0-efab933856ac')), 44 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1f60ca1c-1a7c-4e68-afb0-efab933856ac'))))
	(243414c6-abd4-46b2-86c2-701a36115a17,Map(31 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('243414c6-abd4-46b2-86c2-701a36115a17')), 32 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('243414c6-abd4-46b2-86c2-701a36115a17'))))
	(e2a244ae-f02e-4e2a-811c-9381e96abb77,Map(46 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e2a244ae-f02e-4e2a-811c-9381e96abb77')), 47 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e2a244ae-f02e-4e2a-811c-9381e96abb77'))))
	(033d8ed4-673f-4c6a-9ecb-e93a4f2e3069,Map(57 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fc23d80e-0ee3-48bd-ab75-296c2f38d2f6',55,'models.Person')),id -> java.util.UUID('033d8ed4-673f-4c6a-9ecb-e93a4f2e3069'))))
	(972c24d9-afc0-4261-afa7-898644ef18f4,Map(61 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('972c24d9-afc0-4261-afa7-898644ef18f4')), 62 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('972c24d9-afc0-4261-afa7-898644ef18f4'))))
	(3d3a45b7-0aa9-4faf-be7c-dc16622fd22f,Map(21 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4c642889-dfec-4b4e-9e67-6412f54b88f1',19,'models.Person')),id -> java.util.UUID('3d3a45b7-0aa9-4faf-be7c-dc16622fd22f'))))
	(68383e78-8852-404e-8e4c-d2155d137cea,Map(84 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3cbeb6b6-b9dd-4bf4-8e64-d7b9dfb5dc41',82,'models.Person')),id -> java.util.UUID('68383e78-8852-404e-8e4c-d2155d137cea'))))
	(cf73fa80-cfb8-4e34-9534-cda7fd207832,Map(30 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5cde913e-5545-4a13-a834-d7fe55f319b7',28,'models.Person')),id -> java.util.UUID('cf73fa80-cfb8-4e34-9534-cda7fd207832'))))
	(f1c5f282-7828-416a-a515-48955c2a9001,Map(60 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('19dcbb81-eac9-43e9-9c1b-6e1759a63f61',58,'models.Person')),id -> java.util.UUID('f1c5f282-7828-416a-a515-48955c2a9001'))))
	(441d6279-a707-4b2a-8d62-a69adc8abbe7,Map(54 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('8db7fdad-0bf5-4a98-a4bc-60695b4aee60',52,'models.Person')),id -> java.util.UUID('441d6279-a707-4b2a-8d62-a69adc8abbe7'))))
	(b8aaaf53-8704-40d6-8e31-b5a0b39eb3a6,Map(81 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f209ff09-4e81-4b44-bbe6-e5387b9a56eb',79,'models.Person')),id -> java.util.UUID('b8aaaf53-8704-40d6-8e31-b5a0b39eb3a6'))))
	(64159697-3c08-40b5-99b7-2deed0090eb7,Map(10 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('64159697-3c08-40b5-99b7-2deed0090eb7')), 11 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('64159697-3c08-40b5-99b7-2deed0090eb7'))))
	(1f38cea5-a1d2-4cf6-9492-026e5078f2d4,Map(39 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3ef337ad-50fc-4ee3-b8c6-8e92ea63a01f',37,'models.Person')),id -> java.util.UUID('1f38cea5-a1d2-4cf6-9492-026e5078f2d4'))))

2017-08-17 21:22:05,748 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('183424fd-9e2e-4a1e-a16e-150beba71a84'))
2017-08-17 21:22:05,778 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('183424fd-9e2e-4a1e-a16e-150beba71a84')) with count 1
2017-08-17 21:22:05,778 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('183424fd-9e2e-4a1e-a16e-150beba71a84'))
2017-08-17 21:22:05,778 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('183424fd-9e2e-4a1e-a16e-150beba71a84')) with count 2
2017-08-17 21:22:05,778 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('183424fd-9e2e-4a1e-a16e-150beba71a84',1,'models.Person')),id -> java.util.UUID('d56c2027-91fb-4ce3-98c9-3ed1b72088c2'))
2017-08-17 21:22:05,778 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,778 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('97685f06-1ae7-4bf4-b24a-d503e67681f3'))
2017-08-17 21:22:05,778 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,183424fd-9e2e-4a1e-a16e-150beba71a84,1))
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('97685f06-1ae7-4bf4-b24a-d503e67681f3'))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Referee[Nothing$] - included reference Reference(class models.Person,183424fd-9e2e-4a1e-a16e-150beba71a84,1) in Set()
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('97685f06-1ae7-4bf4-b24a-d503e67681f3')) with count 4
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('97685f06-1ae7-4bf4-b24a-d503e67681f3')) with count 5
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('97685f06-1ae7-4bf4-b24a-d503e67681f3',4,'models.Person')),id -> java.util.UUID('db189e26-e685-4cfe-9a62-69dcaff632c5'))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('97685f06-1ae7-4bf4-b24a-d503e67681f3',4,'models.Person')),id -> java.util.UUID('db189e26-e685-4cfe-9a62-69dcaff632c5')) with count 6
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,97685f06-1ae7-4bf4-b24a-d503e67681f3,4))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Referee[Nothing$] - included reference Reference(class models.Person,97685f06-1ae7-4bf4-b24a-d503e67681f3,4) in Set()
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('41e84cc2-9d65-4ca7-99b5-ef981dbaeb03'))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('41e84cc2-9d65-4ca7-99b5-ef981dbaeb03')) with count 7
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('41e84cc2-9d65-4ca7-99b5-ef981dbaeb03'))
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('41e84cc2-9d65-4ca7-99b5-ef981dbaeb03',7,'models.Person')),id -> java.util.UUID('6f0071b1-07db-4a5b-be95-6c9984aa198f'))
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7282097e-4eb6-4270-ab10-63a199985513'))
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7282097e-4eb6-4270-ab10-63a199985513'))
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7282097e-4eb6-4270-ab10-63a199985513',10,'models.Person')),id -> java.util.UUID('311bbe67-d77b-44bd-a10e-896b589fee9d'))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('41e84cc2-9d65-4ca7-99b5-ef981dbaeb03')) with count 8
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0094d228-963d-4bfe-bbd6-107e580de1b7'))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('41e84cc2-9d65-4ca7-99b5-ef981dbaeb03',7,'models.Person')),id -> java.util.UUID('6f0071b1-07db-4a5b-be95-6c9984aa198f')) with count 9
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,41e84cc2-9d65-4ca7-99b5-ef981dbaeb03,7))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Referee[Nothing$] - included reference Reference(class models.Person,41e84cc2-9d65-4ca7-99b5-ef981dbaeb03,7) in Set()
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7282097e-4eb6-4270-ab10-63a199985513')) with count 10
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0094d228-963d-4bfe-bbd6-107e580de1b7'))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7282097e-4eb6-4270-ab10-63a199985513')) with count 11
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7282097e-4eb6-4270-ab10-63a199985513',10,'models.Person')),id -> java.util.UUID('311bbe67-d77b-44bd-a10e-896b589fee9d')) with count 12
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('0094d228-963d-4bfe-bbd6-107e580de1b7',13,'models.Person')),id -> java.util.UUID('f5712589-1e97-49ac-a748-ad8b9db98636'))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,7282097e-4eb6-4270-ab10-63a199985513,10))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Referee[Nothing$] - included reference Reference(class models.Person,7282097e-4eb6-4270-ab10-63a199985513,10) in Set()
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0094d228-963d-4bfe-bbd6-107e580de1b7')) with count 13
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c163a769-4dae-402f-8b75-2fa6945b8eab'))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0094d228-963d-4bfe-bbd6-107e580de1b7')) with count 14
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('0094d228-963d-4bfe-bbd6-107e580de1b7',13,'models.Person')),id -> java.util.UUID('f5712589-1e97-49ac-a748-ad8b9db98636')) with count 15
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c163a769-4dae-402f-8b75-2fa6945b8eab'))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,0094d228-963d-4bfe-bbd6-107e580de1b7,13))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Referee[Nothing$] - included reference Reference(class models.Person,0094d228-963d-4bfe-bbd6-107e580de1b7,13) in Set()
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c163a769-4dae-402f-8b75-2fa6945b8eab')) with count 16
2017-08-17 21:22:05,788 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c163a769-4dae-402f-8b75-2fa6945b8eab',16,'models.Person')),id -> java.util.UUID('b092f596-9b01-4415-89ad-ccef3fa9eb02'))
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c163a769-4dae-402f-8b75-2fa6945b8eab')) with count 17
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c163a769-4dae-402f-8b75-2fa6945b8eab',16,'models.Person')),id -> java.util.UUID('b092f596-9b01-4415-89ad-ccef3fa9eb02')) with count 18
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:05,788 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('183424fd-9e2e-4a1e-a16e-150beba71a84',1,'models.Person')),id -> java.util.UUID('d56c2027-91fb-4ce3-98c9-3ed1b72088c2')) with count 3
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,c163a769-4dae-402f-8b75-2fa6945b8eab,16))
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-9] Referee[Nothing$] - included reference Reference(class models.Person,c163a769-4dae-402f-8b75-2fa6945b8eab,16) in Set()
2017-08-17 21:22:05,798 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3b666fbb-87ec-4c6c-a34b-fdc22ea54a17'))
2017-08-17 21:22:05,798 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3b666fbb-87ec-4c6c-a34b-fdc22ea54a17'))
2017-08-17 21:22:05,798 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3b666fbb-87ec-4c6c-a34b-fdc22ea54a17',19,'models.Person')),id -> java.util.UUID('faa4e489-3ae4-49a6-bdc5-d495bd44ab2b'))
2017-08-17 21:22:05,798 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('50244a71-f6ae-4b38-b831-1a0462d645de'))
2017-08-17 21:22:05,798 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('50244a71-f6ae-4b38-b831-1a0462d645de'))
2017-08-17 21:22:05,798 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('50244a71-f6ae-4b38-b831-1a0462d645de',22,'models.Person')),id -> java.util.UUID('0a1bfd44-853d-4596-a127-b2862066d2e5'))
2017-08-17 21:22:05,798 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2c468f23-59a1-466c-be4e-e8f7f5a97444'))
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3b666fbb-87ec-4c6c-a34b-fdc22ea54a17')) with count 19
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3b666fbb-87ec-4c6c-a34b-fdc22ea54a17')) with count 20
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('50244a71-f6ae-4b38-b831-1a0462d645de')) with count 22
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3b666fbb-87ec-4c6c-a34b-fdc22ea54a17',19,'models.Person')),id -> java.util.UUID('faa4e489-3ae4-49a6-bdc5-d495bd44ab2b')) with count 21
2017-08-17 21:22:05,798 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2c468f23-59a1-466c-be4e-e8f7f5a97444'))
2017-08-17 21:22:05,798 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2c468f23-59a1-466c-be4e-e8f7f5a97444',25,'models.Person')),id -> java.util.UUID('a908bda1-7ec9-4d43-92d2-f65bd032001a'))
2017-08-17 21:22:05,798 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('87a5ffee-1d4c-4c94-bb9b-34d77d62540d'))
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('50244a71-f6ae-4b38-b831-1a0462d645de')) with count 23
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:22:05,798 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('87a5ffee-1d4c-4c94-bb9b-34d77d62540d'))
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('50244a71-f6ae-4b38-b831-1a0462d645de',22,'models.Person')),id -> java.util.UUID('0a1bfd44-853d-4596-a127-b2862066d2e5')) with count 24
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,50244a71-f6ae-4b38-b831-1a0462d645de,22))
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-1] Referee[Nothing$] - included reference Reference(class models.Person,50244a71-f6ae-4b38-b831-1a0462d645de,22) in Set()
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2c468f23-59a1-466c-be4e-e8f7f5a97444',25,'models.Person')),id -> java.util.UUID('a908bda1-7ec9-4d43-92d2-f65bd032001a')) with count 27
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,2c468f23-59a1-466c-be4e-e8f7f5a97444,25))
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-13] Referee[Nothing$] - included reference Reference(class models.Person,2c468f23-59a1-466c-be4e-e8f7f5a97444,25) in Set()
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('87a5ffee-1d4c-4c94-bb9b-34d77d62540d')) with count 28
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2c468f23-59a1-466c-be4e-e8f7f5a97444')) with count 25
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('87a5ffee-1d4c-4c94-bb9b-34d77d62540d')) with count 29
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2c468f23-59a1-466c-be4e-e8f7f5a97444')) with count 25
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,3b666fbb-87ec-4c6c-a34b-fdc22ea54a17,19))
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-7] Referee[Nothing$] - included reference Reference(class models.Person,3b666fbb-87ec-4c6c-a34b-fdc22ea54a17,19) in Set()
2017-08-17 21:22:05,798 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('87a5ffee-1d4c-4c94-bb9b-34d77d62540d',28,'models.Person')),id -> java.util.UUID('9f8df8dc-9cb4-4796-beca-7ff141b98620'))
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('87a5ffee-1d4c-4c94-bb9b-34d77d62540d',28,'models.Person')),id -> java.util.UUID('9f8df8dc-9cb4-4796-beca-7ff141b98620')) with count 30
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,87a5ffee-1d4c-4c94-bb9b-34d77d62540d,28))
2017-08-17 21:22:05,808 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cdc6cf6a-8323-4d76-914f-c7893d809d94'))
2017-08-17 21:22:05,808 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cdc6cf6a-8323-4d76-914f-c7893d809d94'))
2017-08-17 21:22:05,808 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('cdc6cf6a-8323-4d76-914f-c7893d809d94',31,'models.Person')),id -> java.util.UUID('9f098f32-8f64-4e76-ab8e-46204921458f'))
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cdc6cf6a-8323-4d76-914f-c7893d809d94')) with count 31
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:05,808 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ef9eafab-e359-4ea9-8487-6ee3b26f7d71'))
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cdc6cf6a-8323-4d76-914f-c7893d809d94')) with count 32
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('cdc6cf6a-8323-4d76-914f-c7893d809d94',31,'models.Person')),id -> java.util.UUID('9f098f32-8f64-4e76-ab8e-46204921458f')) with count 33
2017-08-17 21:22:05,808 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ef9eafab-e359-4ea9-8487-6ee3b26f7d71'))
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,cdc6cf6a-8323-4d76-914f-c7893d809d94,31))
2017-08-17 21:22:05,808 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ef9eafab-e359-4ea9-8487-6ee3b26f7d71',34,'models.Person')),id -> java.util.UUID('8e5de26f-465c-45a0-958d-49f14def7fc1'))
2017-08-17 21:22:05,808 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a5cf45d9-fe9d-4572-8ef5-95c570103faf'))
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ef9eafab-e359-4ea9-8487-6ee3b26f7d71')) with count 34
2017-08-17 21:22:05,808 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a5cf45d9-fe9d-4572-8ef5-95c570103faf'))
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ef9eafab-e359-4ea9-8487-6ee3b26f7d71')) with count 35
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:22:05,808 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a5cf45d9-fe9d-4572-8ef5-95c570103faf',37,'models.Person')),id -> java.util.UUID('80e9c9bb-4a9c-493d-85e7-db7a3293fb7c'))
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2c468f23-59a1-466c-be4e-e8f7f5a97444')) with count 26
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a5cf45d9-fe9d-4572-8ef5-95c570103faf')) with count 37
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a5cf45d9-fe9d-4572-8ef5-95c570103faf')) with count 38
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a5cf45d9-fe9d-4572-8ef5-95c570103faf',37,'models.Person')),id -> java.util.UUID('80e9c9bb-4a9c-493d-85e7-db7a3293fb7c')) with count 39
2017-08-17 21:22:05,818 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa'))
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,a5cf45d9-fe9d-4572-8ef5-95c570103faf,37))
2017-08-17 21:22:05,818 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa'))
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa')) with count 40
2017-08-17 21:22:05,798 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3b666fbb-87ec-4c6c-a34b-fdc22ea54a17')) with count 20
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ef9eafab-e359-4ea9-8487-6ee3b26f7d71',34,'models.Person')),id -> java.util.UUID('8e5de26f-465c-45a0-958d-49f14def7fc1')) with count 36
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-15] Referee[Nothing$] - included reference Reference(class models.Person,cdc6cf6a-8323-4d76-914f-c7893d809d94,31) in Set()
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('87a5ffee-1d4c-4c94-bb9b-34d77d62540d')) with count 28
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-9] Referee[Nothing$] - included reference Reference(class models.Person,87a5ffee-1d4c-4c94-bb9b-34d77d62540d,28) in Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa')) with count 41
2017-08-17 21:22:05,818 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa',40,'models.Person')),id -> java.util.UUID('cb86a0b3-0212-48e6-9210-c73ef99b06ec'))
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-15] Referee[Nothing$] - included reference Reference(class models.Person,cdc6cf6a-8323-4d76-914f-c7893d809d94,31) in Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa',40,'models.Person')),id -> java.util.UUID('cb86a0b3-0212-48e6-9210-c73ef99b06ec')) with count 42
2017-08-17 21:22:05,818 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('70e990fb-bbb7-4411-8b52-3d1a587e4b9d'))
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa,40))
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-15] Referee[Nothing$] - included reference Reference(class models.Person,c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa,40) in Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('70e990fb-bbb7-4411-8b52-3d1a587e4b9d')) with count 43
2017-08-17 21:22:05,818 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('70e990fb-bbb7-4411-8b52-3d1a587e4b9d'))
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa')) with count 40
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('70e990fb-bbb7-4411-8b52-3d1a587e4b9d')) with count 44
2017-08-17 21:22:05,818 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('70e990fb-bbb7-4411-8b52-3d1a587e4b9d',43,'models.Person')),id -> java.util.UUID('cfbcdc14-cf70-4493-8d81-bfbc270d1f1b'))
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('70e990fb-bbb7-4411-8b52-3d1a587e4b9d',43,'models.Person')),id -> java.util.UUID('cfbcdc14-cf70-4493-8d81-bfbc270d1f1b')) with count 45
2017-08-17 21:22:05,818 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f84d1896-fbbc-4063-8163-bd793948a412'))
2017-08-17 21:22:05,808 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,ef9eafab-e359-4ea9-8487-6ee3b26f7d71,34))
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,70e990fb-bbb7-4411-8b52-3d1a587e4b9d,43))
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-13] Referee[Nothing$] - included reference Reference(class models.Person,ef9eafab-e359-4ea9-8487-6ee3b26f7d71,34) in Set()
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f84d1896-fbbc-4063-8163-bd793948a412')) with count 46
2017-08-17 21:22:05,828 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f84d1896-fbbc-4063-8163-bd793948a412'))
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f84d1896-fbbc-4063-8163-bd793948a412')) with count 47
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('70e990fb-bbb7-4411-8b52-3d1a587e4b9d')) with count 43
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa')) with count 41
2017-08-17 21:22:05,828 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f84d1896-fbbc-4063-8163-bd793948a412',46,'models.Person')),id -> java.util.UUID('38b9f769-309d-45c1-91c1-d698a4f7d8d0'))
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('87a5ffee-1d4c-4c94-bb9b-34d77d62540d')) with count 28
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ef9eafab-e359-4ea9-8487-6ee3b26f7d71',34,'models.Person')),id -> java.util.UUID('8e5de26f-465c-45a0-958d-49f14def7fc1')) with count 36
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f84d1896-fbbc-4063-8163-bd793948a412',46,'models.Person')),id -> java.util.UUID('38b9f769-309d-45c1-91c1-d698a4f7d8d0')) with count 48
2017-08-17 21:22:05,828 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d053bf94-63f2-40d8-b448-350ee54cccd4'))
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,f84d1896-fbbc-4063-8163-bd793948a412,46))
2017-08-17 21:22:05,828 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d053bf94-63f2-40d8-b448-350ee54cccd4'))
2017-08-17 21:22:05,828 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d053bf94-63f2-40d8-b448-350ee54cccd4',49,'models.Person')),id -> java.util.UUID('1e053c76-e601-4e11-8b3f-16fe9beec74a'))
2017-08-17 21:22:05,828 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fb271ea0-54ac-42be-bac8-f26082660821'))
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f84d1896-fbbc-4063-8163-bd793948a412',46,'models.Person')),id -> java.util.UUID('38b9f769-309d-45c1-91c1-d698a4f7d8d0')) with count 48
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d053bf94-63f2-40d8-b448-350ee54cccd4')) with count 49
2017-08-17 21:22:05,828 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fb271ea0-54ac-42be-bac8-f26082660821'))
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d053bf94-63f2-40d8-b448-350ee54cccd4')) with count 50
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3b666fbb-87ec-4c6c-a34b-fdc22ea54a17')) with count 20
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fb271ea0-54ac-42be-bac8-f26082660821')) with count 52
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fb271ea0-54ac-42be-bac8-f26082660821')) with count 52
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fb271ea0-54ac-42be-bac8-f26082660821')) with count 53
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fb271ea0-54ac-42be-bac8-f26082660821')) with count 52
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:05,818 TRACE [ForkJoinPool-1-worker-11] Referee[Nothing$] - included reference Reference(class models.Person,a5cf45d9-fe9d-4572-8ef5-95c570103faf,37) in Set()
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d053bf94-63f2-40d8-b448-350ee54cccd4',49,'models.Person')),id -> java.util.UUID('1e053c76-e601-4e11-8b3f-16fe9beec74a')) with count 51
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-1] Referee[Nothing$] - included reference Reference(class models.Person,f84d1896-fbbc-4063-8163-bd793948a412,46) in Set()
2017-08-17 21:22:05,828 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fb271ea0-54ac-42be-bac8-f26082660821',52,'models.Person')),id -> java.util.UUID('47e5566c-6aff-48f2-9f4e-c140b7094c66'))
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ef9eafab-e359-4ea9-8487-6ee3b26f7d71',34,'models.Person')),id -> java.util.UUID('8e5de26f-465c-45a0-958d-49f14def7fc1')) with count 36
2017-08-17 21:22:05,838 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fface84f-6e77-4817-8a5a-1515ca943095'))
2017-08-17 21:22:05,838 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fface84f-6e77-4817-8a5a-1515ca943095'))
2017-08-17 21:22:05,838 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fface84f-6e77-4817-8a5a-1515ca943095',55,'models.Person')),id -> java.util.UUID('bf95f56c-a3ae-40f4-8e56-561655cf87dc'))
2017-08-17 21:22:05,838 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('de5b9597-947e-4189-a42f-2adde7d79f0c'))
2017-08-17 21:22:05,838 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('de5b9597-947e-4189-a42f-2adde7d79f0c'))
2017-08-17 21:22:05,838 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('de5b9597-947e-4189-a42f-2adde7d79f0c',58,'models.Person')),id -> java.util.UUID('4f13d8da-5719-4af9-a774-542c41c8895a'))
2017-08-17 21:22:05,838 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('00b9093a-dd23-4b45-a01f-65e695da1f88'))
2017-08-17 21:22:05,838 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('00b9093a-dd23-4b45-a01f-65e695da1f88'))
2017-08-17 21:22:05,838 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('00b9093a-dd23-4b45-a01f-65e695da1f88',61,'models.Person')),id -> java.util.UUID('6ad690c0-0e98-467f-a145-473aa4586b39'))
2017-08-17 21:22:05,838 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('675a3427-8d45-407f-8b8c-798242a21d80'))
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-11] Referee[Nothing$] - included reference Reference(class models.Person,a5cf45d9-fe9d-4572-8ef5-95c570103faf,37) in Set()
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-5] Referee[Nothing$] - included reference Reference(class models.Person,70e990fb-bbb7-4411-8b52-3d1a587e4b9d,43) in Set()
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-1] Referee[Nothing$] - included reference Reference(class models.Person,f84d1896-fbbc-4063-8163-bd793948a412,46) in Set()
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-5] Referee[Nothing$] - included reference Reference(class models.Person,70e990fb-bbb7-4411-8b52-3d1a587e4b9d,43) in Set()
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,fface84f-6e77-4817-8a5a-1515ca943095,55))
2017-08-17 21:22:05,828 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,d053bf94-63f2-40d8-b448-350ee54cccd4,49))
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fb271ea0-54ac-42be-bac8-f26082660821',52,'models.Person')),id -> java.util.UUID('47e5566c-6aff-48f2-9f4e-c140b7094c66')) with count 54
2017-08-17 21:22:05,838 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('675a3427-8d45-407f-8b8c-798242a21d80'))
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fface84f-6e77-4817-8a5a-1515ca943095')) with count 55
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('de5b9597-947e-4189-a42f-2adde7d79f0c')) with count 58
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('de5b9597-947e-4189-a42f-2adde7d79f0c')) with count 59
2017-08-17 21:22:05,848 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('675a3427-8d45-407f-8b8c-798242a21d80',64,'models.Person')),id -> java.util.UUID('b58b34dd-0075-46ad-850a-2cc686f87c35'))
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('de5b9597-947e-4189-a42f-2adde7d79f0c',58,'models.Person')),id -> java.util.UUID('4f13d8da-5719-4af9-a774-542c41c8895a')) with count 60
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,de5b9597-947e-4189-a42f-2adde7d79f0c,58))
2017-08-17 21:22:05,848 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('19506bc7-0507-4e4f-840c-4d004d32cdf3'))
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,fb271ea0-54ac-42be-bac8-f26082660821,52))
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('00b9093a-dd23-4b45-a01f-65e695da1f88')) with count 61
2017-08-17 21:22:05,848 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('19506bc7-0507-4e4f-840c-4d004d32cdf3'))
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('00b9093a-dd23-4b45-a01f-65e695da1f88')) with count 62
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:05,848 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('19506bc7-0507-4e4f-840c-4d004d32cdf3',67,'models.Person')),id -> java.util.UUID('a83cc3f3-f36b-444d-8285-c694fad088d0'))
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('00b9093a-dd23-4b45-a01f-65e695da1f88',61,'models.Person')),id -> java.util.UUID('6ad690c0-0e98-467f-a145-473aa4586b39')) with count 63
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,00b9093a-dd23-4b45-a01f-65e695da1f88,61))
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-3] Referee[Nothing$] - included reference Reference(class models.Person,00b9093a-dd23-4b45-a01f-65e695da1f88,61) in Set()
2017-08-17 21:22:05,848 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d4e6c644-b44c-4ebc-95dc-824e012fd35b'))
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('675a3427-8d45-407f-8b8c-798242a21d80')) with count 64
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('675a3427-8d45-407f-8b8c-798242a21d80')) with count 65
2017-08-17 21:22:05,848 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d4e6c644-b44c-4ebc-95dc-824e012fd35b'))
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('675a3427-8d45-407f-8b8c-798242a21d80',64,'models.Person')),id -> java.util.UUID('b58b34dd-0075-46ad-850a-2cc686f87c35')) with count 66
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fface84f-6e77-4817-8a5a-1515ca943095')) with count 56
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-5] Referee[Nothing$] - included reference Reference(class models.Person,fface84f-6e77-4817-8a5a-1515ca943095,55) in Set()
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('19506bc7-0507-4e4f-840c-4d004d32cdf3')) with count 67
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,675a3427-8d45-407f-8b8c-798242a21d80,64))
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-3] Referee[Nothing$] - included reference Reference(class models.Person,675a3427-8d45-407f-8b8c-798242a21d80,64) in Set()
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('19506bc7-0507-4e4f-840c-4d004d32cdf3')) with count 68
2017-08-17 21:22:05,848 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d4e6c644-b44c-4ebc-95dc-824e012fd35b',70,'models.Person')),id -> java.util.UUID('202e19e7-57ce-4767-8b51-446e8ab83637'))
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('19506bc7-0507-4e4f-840c-4d004d32cdf3',67,'models.Person')),id -> java.util.UUID('a83cc3f3-f36b-444d-8285-c694fad088d0')) with count 69
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,19506bc7-0507-4e4f-840c-4d004d32cdf3,67))
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-3] Referee[Nothing$] - included reference Reference(class models.Person,19506bc7-0507-4e4f-840c-4d004d32cdf3,67) in Set()
2017-08-17 21:22:05,858 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ae02c906-cd0f-492e-915a-72b6e0bb18cc'))
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d4e6c644-b44c-4ebc-95dc-824e012fd35b')) with count 70
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d4e6c644-b44c-4ebc-95dc-824e012fd35b')) with count 71
2017-08-17 21:22:05,858 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ae02c906-cd0f-492e-915a-72b6e0bb18cc'))
2017-08-17 21:22:05,838 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fface84f-6e77-4817-8a5a-1515ca943095',55,'models.Person')),id -> java.util.UUID('bf95f56c-a3ae-40f4-8e56-561655cf87dc')) with count 57
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d4e6c644-b44c-4ebc-95dc-824e012fd35b',70,'models.Person')),id -> java.util.UUID('202e19e7-57ce-4767-8b51-446e8ab83637')) with count 72
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-15] Referee[Nothing$] - included reference Reference(class models.Person,de5b9597-947e-4189-a42f-2adde7d79f0c,58) in Set()
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ae02c906-cd0f-492e-915a-72b6e0bb18cc')) with count 73
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-15] Referee[Nothing$] - included reference Reference(class models.Person,de5b9597-947e-4189-a42f-2adde7d79f0c,58) in Set()
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,858 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ae02c906-cd0f-492e-915a-72b6e0bb18cc',73,'models.Person')),id -> java.util.UUID('586e02fd-8c86-4789-979e-2a64a6a7f601'))
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ae02c906-cd0f-492e-915a-72b6e0bb18cc')) with count 74
2017-08-17 21:22:05,848 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fface84f-6e77-4817-8a5a-1515ca943095')) with count 55
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,d4e6c644-b44c-4ebc-95dc-824e012fd35b,70))
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,ae02c906-cd0f-492e-915a-72b6e0bb18cc,73))
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ae02c906-cd0f-492e-915a-72b6e0bb18cc',73,'models.Person')),id -> java.util.UUID('586e02fd-8c86-4789-979e-2a64a6a7f601')) with count 75
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-15] Referee[Nothing$] - included reference Reference(class models.Person,ae02c906-cd0f-492e-915a-72b6e0bb18cc,73) in Set()
2017-08-17 21:22:05,858 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('00988fb6-8092-41df-9159-a86b2e0f9f50'))
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('00988fb6-8092-41df-9159-a86b2e0f9f50')) with count 76
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-1] Referee[Nothing$] - included reference Reference(class models.Person,d4e6c644-b44c-4ebc-95dc-824e012fd35b,70) in Set()
2017-08-17 21:22:05,868 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('00988fb6-8092-41df-9159-a86b2e0f9f50'))
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('00988fb6-8092-41df-9159-a86b2e0f9f50')) with count 77
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-7] Referee[Nothing$] - included reference Reference(class models.Person,fb271ea0-54ac-42be-bac8-f26082660821,52) in Set()
2017-08-17 21:22:05,868 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('00988fb6-8092-41df-9159-a86b2e0f9f50',76,'models.Person')),id -> java.util.UUID('a9f48b0a-36a7-46fa-8fa9-d8e148d91c86'))
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('00988fb6-8092-41df-9159-a86b2e0f9f50',76,'models.Person')),id -> java.util.UUID('a9f48b0a-36a7-46fa-8fa9-d8e148d91c86')) with count 78
2017-08-17 21:22:05,868 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bc811a7d-c4d7-40f1-9104-230990a2fc7e'))
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,00988fb6-8092-41df-9159-a86b2e0f9f50,76))
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-9] Referee[Nothing$] - included reference Reference(class models.Person,00988fb6-8092-41df-9159-a86b2e0f9f50,76) in Set()
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bc811a7d-c4d7-40f1-9104-230990a2fc7e')) with count 79
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,868 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bc811a7d-c4d7-40f1-9104-230990a2fc7e'))
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bc811a7d-c4d7-40f1-9104-230990a2fc7e')) with count 80
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:05,868 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('bc811a7d-c4d7-40f1-9104-230990a2fc7e',79,'models.Person')),id -> java.util.UUID('0c47640b-0fcd-4ab5-b0df-531f46b9c551'))
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,bc811a7d-c4d7-40f1-9104-230990a2fc7e,79))
2017-08-17 21:22:05,858 TRACE [ForkJoinPool-1-worker-5] Referee[Nothing$] - included reference Reference(class models.Person,fface84f-6e77-4817-8a5a-1515ca943095,55) in Set()
2017-08-17 21:22:05,868 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7fdf57e0-c231-4a61-9f43-285987a8f689'))
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('bc811a7d-c4d7-40f1-9104-230990a2fc7e',79,'models.Person')),id -> java.util.UUID('0c47640b-0fcd-4ab5-b0df-531f46b9c551')) with count 81
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:05,878 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7fdf57e0-c231-4a61-9f43-285987a8f689'))
2017-08-17 21:22:05,878 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7fdf57e0-c231-4a61-9f43-285987a8f689',82,'models.Person')),id -> java.util.UUID('c0e4ddc6-eb27-4023-ac21-da15409ec8d6'))
2017-08-17 21:22:05,878 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2ca40727-eb48-4c57-90f9-90d24074c56b'))
2017-08-17 21:22:05,878 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2ca40727-eb48-4c57-90f9-90d24074c56b'))
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7fdf57e0-c231-4a61-9f43-285987a8f689')) with count 82
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7fdf57e0-c231-4a61-9f43-285987a8f689',82,'models.Person')),id -> java.util.UUID('c0e4ddc6-eb27-4023-ac21-da15409ec8d6')) with count 84
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,7fdf57e0-c231-4a61-9f43-285987a8f689,82))
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-11] Referee[Nothing$] - included reference Reference(class models.Person,7fdf57e0-c231-4a61-9f43-285987a8f689,82) in Set()
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2ca40727-eb48-4c57-90f9-90d24074c56b')) with count 85
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2ca40727-eb48-4c57-90f9-90d24074c56b')) with count 86
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-5] Referee[Nothing$] - included reference Reference(class models.Person,fface84f-6e77-4817-8a5a-1515ca943095,55) in Set()
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7fdf57e0-c231-4a61-9f43-285987a8f689')) with count 83
2017-08-17 21:22:05,878 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2ca40727-eb48-4c57-90f9-90d24074c56b',85,'models.Person')),id -> java.util.UUID('a36d9b8f-59ae-4d14-a5da-f9e7374b98c0'))
2017-08-17 21:22:05,878 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f3f06cc0-ecfe-4cee-89d3-6f8cf3372f9e'))
2017-08-17 21:22:05,878 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f3f06cc0-ecfe-4cee-89d3-6f8cf3372f9e'))
2017-08-17 21:22:05,878 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f3f06cc0-ecfe-4cee-89d3-6f8cf3372f9e',88,'models.Person')),id -> java.util.UUID('81f65a18-e1e7-4762-a9b7-00bb1aa09f94'))
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2ca40727-eb48-4c57-90f9-90d24074c56b',85,'models.Person')),id -> java.util.UUID('a36d9b8f-59ae-4d14-a5da-f9e7374b98c0')) with count 87
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-3] Referee[Nothing$] - included reference Reference(class models.Person,bc811a7d-c4d7-40f1-9104-230990a2fc7e,79) in Set()
2017-08-17 21:22:05,868 TRACE [ForkJoinPool-1-worker-13] Referee[Nothing$] - included reference Reference(class models.Person,d053bf94-63f2-40d8-b448-350ee54cccd4,49) in Set()
2017-08-17 21:22:05,888 TRACE [ForkJoinPool-1-worker-13] Referee[Nothing$] - included reference Reference(class models.Person,d053bf94-63f2-40d8-b448-350ee54cccd4,49) in Set()
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,2ca40727-eb48-4c57-90f9-90d24074c56b,85))
2017-08-17 21:22:05,888 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,f3f06cc0-ecfe-4cee-89d3-6f8cf3372f9e,88))
2017-08-17 21:22:05,888 TRACE [ForkJoinPool-1-worker-1] Referee[Nothing$] - included reference Reference(class models.Person,2ca40727-eb48-4c57-90f9-90d24074c56b,85) in Set()
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f3f06cc0-ecfe-4cee-89d3-6f8cf3372f9e')) with count 89
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:22:05,888 TRACE [ForkJoinPool-1-worker-3] Referee[Nothing$] - included reference Reference(class models.Person,f3f06cc0-ecfe-4cee-89d3-6f8cf3372f9e,88) in Set()
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f3f06cc0-ecfe-4cee-89d3-6f8cf3372f9e')) with count 88
2017-08-17 21:22:05,878 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f3f06cc0-ecfe-4cee-89d3-6f8cf3372f9e',88,'models.Person')),id -> java.util.UUID('81f65a18-e1e7-4762-a9b7-00bb1aa09f94')) with count 90
2017-08-17 21:22:06,878 INFO  [main] Counter[Person] - counter is 90
2017-08-17 21:22:06,878 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(a908bda1-7ec9-4d43-92d2-f65bd032001a,Map(27 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2c468f23-59a1-466c-be4e-e8f7f5a97444',25,'models.Person')),id -> java.util.UUID('a908bda1-7ec9-4d43-92d2-f65bd032001a'))))
	(fface84f-6e77-4817-8a5a-1515ca943095,Map(56 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fface84f-6e77-4817-8a5a-1515ca943095')), 55 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fface84f-6e77-4817-8a5a-1515ca943095'))))
	(cdc6cf6a-8323-4d76-914f-c7893d809d94,Map(31 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cdc6cf6a-8323-4d76-914f-c7893d809d94')), 32 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cdc6cf6a-8323-4d76-914f-c7893d809d94'))))
	(d4e6c644-b44c-4ebc-95dc-824e012fd35b,Map(70 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d4e6c644-b44c-4ebc-95dc-824e012fd35b')), 71 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d4e6c644-b44c-4ebc-95dc-824e012fd35b'))))
	(0a1bfd44-853d-4596-a127-b2862066d2e5,Map(24 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('50244a71-f6ae-4b38-b831-1a0462d645de',22,'models.Person')),id -> java.util.UUID('0a1bfd44-853d-4596-a127-b2862066d2e5'))))
	(ef9eafab-e359-4ea9-8487-6ee3b26f7d71,Map(34 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ef9eafab-e359-4ea9-8487-6ee3b26f7d71')), 35 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ef9eafab-e359-4ea9-8487-6ee3b26f7d71'))))
	(7fdf57e0-c231-4a61-9f43-285987a8f689,Map(82 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7fdf57e0-c231-4a61-9f43-285987a8f689')), 83 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7fdf57e0-c231-4a61-9f43-285987a8f689'))))
	(50244a71-f6ae-4b38-b831-1a0462d645de,Map(22 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('50244a71-f6ae-4b38-b831-1a0462d645de')), 23 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('50244a71-f6ae-4b38-b831-1a0462d645de'))))
	(cb86a0b3-0212-48e6-9210-c73ef99b06ec,Map(42 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa',40,'models.Person')),id -> java.util.UUID('cb86a0b3-0212-48e6-9210-c73ef99b06ec'))))
	(81f65a18-e1e7-4762-a9b7-00bb1aa09f94,Map(90 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f3f06cc0-ecfe-4cee-89d3-6f8cf3372f9e',88,'models.Person')),id -> java.util.UUID('81f65a18-e1e7-4762-a9b7-00bb1aa09f94'))))
	(ae02c906-cd0f-492e-915a-72b6e0bb18cc,Map(73 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ae02c906-cd0f-492e-915a-72b6e0bb18cc')), 74 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ae02c906-cd0f-492e-915a-72b6e0bb18cc'))))
	(41e84cc2-9d65-4ca7-99b5-ef981dbaeb03,Map(7 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('41e84cc2-9d65-4ca7-99b5-ef981dbaeb03')), 8 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('41e84cc2-9d65-4ca7-99b5-ef981dbaeb03'))))
	(a36d9b8f-59ae-4d14-a5da-f9e7374b98c0,Map(87 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2ca40727-eb48-4c57-90f9-90d24074c56b',85,'models.Person')),id -> java.util.UUID('a36d9b8f-59ae-4d14-a5da-f9e7374b98c0'))))
	(202e19e7-57ce-4767-8b51-446e8ab83637,Map(72 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d4e6c644-b44c-4ebc-95dc-824e012fd35b',70,'models.Person')),id -> java.util.UUID('202e19e7-57ce-4767-8b51-446e8ab83637'))))
	(183424fd-9e2e-4a1e-a16e-150beba71a84,Map(1 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('183424fd-9e2e-4a1e-a16e-150beba71a84')), 2 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('183424fd-9e2e-4a1e-a16e-150beba71a84'))))
	(c0e4ddc6-eb27-4023-ac21-da15409ec8d6,Map(84 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7fdf57e0-c231-4a61-9f43-285987a8f689',82,'models.Person')),id -> java.util.UUID('c0e4ddc6-eb27-4023-ac21-da15409ec8d6'))))
	(a83cc3f3-f36b-444d-8285-c694fad088d0,Map(69 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('19506bc7-0507-4e4f-840c-4d004d32cdf3',67,'models.Person')),id -> java.util.UUID('a83cc3f3-f36b-444d-8285-c694fad088d0'))))
	(6ad690c0-0e98-467f-a145-473aa4586b39,Map(63 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('00b9093a-dd23-4b45-a01f-65e695da1f88',61,'models.Person')),id -> java.util.UUID('6ad690c0-0e98-467f-a145-473aa4586b39'))))
	(19506bc7-0507-4e4f-840c-4d004d32cdf3,Map(67 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('19506bc7-0507-4e4f-840c-4d004d32cdf3')), 68 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('19506bc7-0507-4e4f-840c-4d004d32cdf3'))))
	(0c47640b-0fcd-4ab5-b0df-531f46b9c551,Map(81 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('bc811a7d-c4d7-40f1-9104-230990a2fc7e',79,'models.Person')),id -> java.util.UUID('0c47640b-0fcd-4ab5-b0df-531f46b9c551'))))
	(47e5566c-6aff-48f2-9f4e-c140b7094c66,Map(54 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fb271ea0-54ac-42be-bac8-f26082660821',52,'models.Person')),id -> java.util.UUID('47e5566c-6aff-48f2-9f4e-c140b7094c66'))))
	(7282097e-4eb6-4270-ab10-63a199985513,Map(10 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7282097e-4eb6-4270-ab10-63a199985513')), 11 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7282097e-4eb6-4270-ab10-63a199985513'))))
	(00988fb6-8092-41df-9159-a86b2e0f9f50,Map(76 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('00988fb6-8092-41df-9159-a86b2e0f9f50')), 77 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('00988fb6-8092-41df-9159-a86b2e0f9f50'))))
	(38b9f769-309d-45c1-91c1-d698a4f7d8d0,Map(48 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f84d1896-fbbc-4063-8163-bd793948a412',46,'models.Person')),id -> java.util.UUID('38b9f769-309d-45c1-91c1-d698a4f7d8d0'))))
	(6f0071b1-07db-4a5b-be95-6c9984aa198f,Map(9 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('41e84cc2-9d65-4ca7-99b5-ef981dbaeb03',7,'models.Person')),id -> java.util.UUID('6f0071b1-07db-4a5b-be95-6c9984aa198f'))))
	(f84d1896-fbbc-4063-8163-bd793948a412,Map(46 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f84d1896-fbbc-4063-8163-bd793948a412')), 47 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f84d1896-fbbc-4063-8163-bd793948a412'))))
	(bf95f56c-a3ae-40f4-8e56-561655cf87dc,Map(57 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fface84f-6e77-4817-8a5a-1515ca943095',55,'models.Person')),id -> java.util.UUID('bf95f56c-a3ae-40f4-8e56-561655cf87dc'))))
	(faa4e489-3ae4-49a6-bdc5-d495bd44ab2b,Map(21 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3b666fbb-87ec-4c6c-a34b-fdc22ea54a17',19,'models.Person')),id -> java.util.UUID('faa4e489-3ae4-49a6-bdc5-d495bd44ab2b'))))
	(00b9093a-dd23-4b45-a01f-65e695da1f88,Map(61 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('00b9093a-dd23-4b45-a01f-65e695da1f88')), 62 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('00b9093a-dd23-4b45-a01f-65e695da1f88'))))
	(586e02fd-8c86-4789-979e-2a64a6a7f601,Map(75 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ae02c906-cd0f-492e-915a-72b6e0bb18cc',73,'models.Person')),id -> java.util.UUID('586e02fd-8c86-4789-979e-2a64a6a7f601'))))
	(4f13d8da-5719-4af9-a774-542c41c8895a,Map(60 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('de5b9597-947e-4189-a42f-2adde7d79f0c',58,'models.Person')),id -> java.util.UUID('4f13d8da-5719-4af9-a774-542c41c8895a'))))
	(0094d228-963d-4bfe-bbd6-107e580de1b7,Map(13 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0094d228-963d-4bfe-bbd6-107e580de1b7')), 14 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0094d228-963d-4bfe-bbd6-107e580de1b7'))))
	(f5712589-1e97-49ac-a748-ad8b9db98636,Map(15 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('0094d228-963d-4bfe-bbd6-107e580de1b7',13,'models.Person')),id -> java.util.UUID('f5712589-1e97-49ac-a748-ad8b9db98636'))))
	(9f098f32-8f64-4e76-ab8e-46204921458f,Map(33 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('cdc6cf6a-8323-4d76-914f-c7893d809d94',31,'models.Person')),id -> java.util.UUID('9f098f32-8f64-4e76-ab8e-46204921458f'))))
	(bc811a7d-c4d7-40f1-9104-230990a2fc7e,Map(79 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bc811a7d-c4d7-40f1-9104-230990a2fc7e')), 80 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bc811a7d-c4d7-40f1-9104-230990a2fc7e'))))
	(c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa,Map(40 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa')), 41 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c0bb5d8a-7b83-4743-8e0b-2f2ab303d2aa'))))
	(1e053c76-e601-4e11-8b3f-16fe9beec74a,Map(51 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d053bf94-63f2-40d8-b448-350ee54cccd4',49,'models.Person')),id -> java.util.UUID('1e053c76-e601-4e11-8b3f-16fe9beec74a'))))
	(d56c2027-91fb-4ce3-98c9-3ed1b72088c2,Map(3 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('183424fd-9e2e-4a1e-a16e-150beba71a84',1,'models.Person')),id -> java.util.UUID('d56c2027-91fb-4ce3-98c9-3ed1b72088c2'))))
	(80e9c9bb-4a9c-493d-85e7-db7a3293fb7c,Map(39 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a5cf45d9-fe9d-4572-8ef5-95c570103faf',37,'models.Person')),id -> java.util.UUID('80e9c9bb-4a9c-493d-85e7-db7a3293fb7c'))))
	(c163a769-4dae-402f-8b75-2fa6945b8eab,Map(16 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c163a769-4dae-402f-8b75-2fa6945b8eab')), 17 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c163a769-4dae-402f-8b75-2fa6945b8eab'))))
	(b58b34dd-0075-46ad-850a-2cc686f87c35,Map(66 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('675a3427-8d45-407f-8b8c-798242a21d80',64,'models.Person')),id -> java.util.UUID('b58b34dd-0075-46ad-850a-2cc686f87c35'))))
	(97685f06-1ae7-4bf4-b24a-d503e67681f3,Map(4 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('97685f06-1ae7-4bf4-b24a-d503e67681f3')), 5 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('97685f06-1ae7-4bf4-b24a-d503e67681f3'))))
	(d053bf94-63f2-40d8-b448-350ee54cccd4,Map(49 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d053bf94-63f2-40d8-b448-350ee54cccd4')), 50 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d053bf94-63f2-40d8-b448-350ee54cccd4'))))
	(311bbe67-d77b-44bd-a10e-896b589fee9d,Map(12 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7282097e-4eb6-4270-ab10-63a199985513',10,'models.Person')),id -> java.util.UUID('311bbe67-d77b-44bd-a10e-896b589fee9d'))))
	(2ca40727-eb48-4c57-90f9-90d24074c56b,Map(85 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2ca40727-eb48-4c57-90f9-90d24074c56b')), 86 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2ca40727-eb48-4c57-90f9-90d24074c56b'))))
	(a9f48b0a-36a7-46fa-8fa9-d8e148d91c86,Map(78 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('00988fb6-8092-41df-9159-a86b2e0f9f50',76,'models.Person')),id -> java.util.UUID('a9f48b0a-36a7-46fa-8fa9-d8e148d91c86'))))
	(8e5de26f-465c-45a0-958d-49f14def7fc1,Map(36 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ef9eafab-e359-4ea9-8487-6ee3b26f7d71',34,'models.Person')),id -> java.util.UUID('8e5de26f-465c-45a0-958d-49f14def7fc1'))))
	(87a5ffee-1d4c-4c94-bb9b-34d77d62540d,Map(29 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('87a5ffee-1d4c-4c94-bb9b-34d77d62540d')), 28 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('87a5ffee-1d4c-4c94-bb9b-34d77d62540d'))))
	(b092f596-9b01-4415-89ad-ccef3fa9eb02,Map(18 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c163a769-4dae-402f-8b75-2fa6945b8eab',16,'models.Person')),id -> java.util.UUID('b092f596-9b01-4415-89ad-ccef3fa9eb02'))))
	(cfbcdc14-cf70-4493-8d81-bfbc270d1f1b,Map(45 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('70e990fb-bbb7-4411-8b52-3d1a587e4b9d',43,'models.Person')),id -> java.util.UUID('cfbcdc14-cf70-4493-8d81-bfbc270d1f1b'))))
	(9f8df8dc-9cb4-4796-beca-7ff141b98620,Map(30 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('87a5ffee-1d4c-4c94-bb9b-34d77d62540d',28,'models.Person')),id -> java.util.UUID('9f8df8dc-9cb4-4796-beca-7ff141b98620'))))
	(db189e26-e685-4cfe-9a62-69dcaff632c5,Map(6 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('97685f06-1ae7-4bf4-b24a-d503e67681f3',4,'models.Person')),id -> java.util.UUID('db189e26-e685-4cfe-9a62-69dcaff632c5'))))
	(de5b9597-947e-4189-a42f-2adde7d79f0c,Map(58 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('de5b9597-947e-4189-a42f-2adde7d79f0c')), 59 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('de5b9597-947e-4189-a42f-2adde7d79f0c'))))
	(675a3427-8d45-407f-8b8c-798242a21d80,Map(64 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('675a3427-8d45-407f-8b8c-798242a21d80')), 65 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('675a3427-8d45-407f-8b8c-798242a21d80'))))
	(a5cf45d9-fe9d-4572-8ef5-95c570103faf,Map(37 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a5cf45d9-fe9d-4572-8ef5-95c570103faf')), 38 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a5cf45d9-fe9d-4572-8ef5-95c570103faf'))))
	(2c468f23-59a1-466c-be4e-e8f7f5a97444,Map(25 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2c468f23-59a1-466c-be4e-e8f7f5a97444')), 26 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2c468f23-59a1-466c-be4e-e8f7f5a97444'))))
	(f3f06cc0-ecfe-4cee-89d3-6f8cf3372f9e,Map(89 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f3f06cc0-ecfe-4cee-89d3-6f8cf3372f9e')), 88 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f3f06cc0-ecfe-4cee-89d3-6f8cf3372f9e'))))
	(fb271ea0-54ac-42be-bac8-f26082660821,Map(53 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fb271ea0-54ac-42be-bac8-f26082660821')), 52 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fb271ea0-54ac-42be-bac8-f26082660821'))))
	(70e990fb-bbb7-4411-8b52-3d1a587e4b9d,Map(44 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('70e990fb-bbb7-4411-8b52-3d1a587e4b9d')), 43 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('70e990fb-bbb7-4411-8b52-3d1a587e4b9d'))))
	(3b666fbb-87ec-4c6c-a34b-fdc22ea54a17,Map(19 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3b666fbb-87ec-4c6c-a34b-fdc22ea54a17')), 20 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3b666fbb-87ec-4c6c-a34b-fdc22ea54a17'))))

2017-08-17 21:22:47,006 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a01a7dc5-7523-4b0b-bd07-ed41e9c460f0'))
2017-08-17 21:22:47,036 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a01a7dc5-7523-4b0b-bd07-ed41e9c460f0')) with count 1
2017-08-17 21:22:47,036 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,046 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a01a7dc5-7523-4b0b-bd07-ed41e9c460f0'))
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a01a7dc5-7523-4b0b-bd07-ed41e9c460f0')) with count 2
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a01a7dc5-7523-4b0b-bd07-ed41e9c460f0')) with count 1
2017-08-17 21:22:47,046 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a01a7dc5-7523-4b0b-bd07-ed41e9c460f0',1,'models.Person')),id -> java.util.UUID('fb45072f-473c-482d-965f-d882a140e4d2'))
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,a01a7dc5-7523-4b0b-bd07-ed41e9c460f0,1))
2017-08-17 21:22:47,046 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9bbc3ce8-e0ad-44e6-964e-6279078c6976'))
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a01a7dc5-7523-4b0b-bd07-ed41e9c460f0',1,'models.Person')),id -> java.util.UUID('fb45072f-473c-482d-965f-d882a140e4d2')) with count 3
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,a01a7dc5-7523-4b0b-bd07-ed41e9c460f0,1) in Set()
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9bbc3ce8-e0ad-44e6-964e-6279078c6976')) with count 4
2017-08-17 21:22:47,046 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9bbc3ce8-e0ad-44e6-964e-6279078c6976'))
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9bbc3ce8-e0ad-44e6-964e-6279078c6976')) with count 5
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:22:47,046 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9bbc3ce8-e0ad-44e6-964e-6279078c6976',4,'models.Person')),id -> java.util.UUID('4d5da9e3-c828-4e18-a523-70eeb2ca47d7'))
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9bbc3ce8-e0ad-44e6-964e-6279078c6976',4,'models.Person')),id -> java.util.UUID('4d5da9e3-c828-4e18-a523-70eeb2ca47d7')) with count 6
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,9bbc3ce8-e0ad-44e6-964e-6279078c6976,4))
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,9bbc3ce8-e0ad-44e6-964e-6279078c6976,4) in Set()
2017-08-17 21:22:47,046 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('01b377c6-9064-4d6b-b852-edf6eb3e7f72'))
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('01b377c6-9064-4d6b-b852-edf6eb3e7f72')) with count 7
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:22:47,046 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('01b377c6-9064-4d6b-b852-edf6eb3e7f72'))
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('01b377c6-9064-4d6b-b852-edf6eb3e7f72')) with count 8
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:47,046 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('01b377c6-9064-4d6b-b852-edf6eb3e7f72',7,'models.Person')),id -> java.util.UUID('fca7527d-8658-40ec-a47b-7bff2ee58aad'))
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('01b377c6-9064-4d6b-b852-edf6eb3e7f72',7,'models.Person')),id -> java.util.UUID('fca7527d-8658-40ec-a47b-7bff2ee58aad')) with count 9
2017-08-17 21:22:47,046 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,01b377c6-9064-4d6b-b852-edf6eb3e7f72,7))
2017-08-17 21:22:47,046 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('06d6412a-f030-4de0-853f-23e3d55dcc90'))
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-3] Referee[Person] - included reference Reference(class models.Person,01b377c6-9064-4d6b-b852-edf6eb3e7f72,7) in Set()
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('06d6412a-f030-4de0-853f-23e3d55dcc90')) with count 10
2017-08-17 21:22:47,056 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('06d6412a-f030-4de0-853f-23e3d55dcc90'))
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('06d6412a-f030-4de0-853f-23e3d55dcc90')) with count 11
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:22:47,056 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('06d6412a-f030-4de0-853f-23e3d55dcc90',10,'models.Person')),id -> java.util.UUID('5ab9cb90-1cdb-4ab6-9978-df878e4dac47'))
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,06d6412a-f030-4de0-853f-23e3d55dcc90,10))
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('06d6412a-f030-4de0-853f-23e3d55dcc90',10,'models.Person')),id -> java.util.UUID('5ab9cb90-1cdb-4ab6-9978-df878e4dac47')) with count 12
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,06d6412a-f030-4de0-853f-23e3d55dcc90,10) in Set()
2017-08-17 21:22:47,056 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fbd69b5d-f0c9-4293-a09c-76833cf2bab3'))
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fbd69b5d-f0c9-4293-a09c-76833cf2bab3')) with count 13
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:47,056 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fbd69b5d-f0c9-4293-a09c-76833cf2bab3'))
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fbd69b5d-f0c9-4293-a09c-76833cf2bab3')) with count 14
2017-08-17 21:22:47,056 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fbd69b5d-f0c9-4293-a09c-76833cf2bab3',13,'models.Person')),id -> java.util.UUID('cb89f5fe-3680-44d8-82d7-7093f1aea814'))
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fbd69b5d-f0c9-4293-a09c-76833cf2bab3',13,'models.Person')),id -> java.util.UUID('cb89f5fe-3680-44d8-82d7-7093f1aea814')) with count 15
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,fbd69b5d-f0c9-4293-a09c-76833cf2bab3,13))
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,fbd69b5d-f0c9-4293-a09c-76833cf2bab3,13) in Set()
2017-08-17 21:22:47,056 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8d2ee742-d6cf-4391-a063-9f4d6aec7ffb'))
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,056 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8d2ee742-d6cf-4391-a063-9f4d6aec7ffb')) with count 16
2017-08-17 21:22:47,056 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8d2ee742-d6cf-4391-a063-9f4d6aec7ffb'))
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8d2ee742-d6cf-4391-a063-9f4d6aec7ffb')) with count 17
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:47,066 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('8d2ee742-d6cf-4391-a063-9f4d6aec7ffb',16,'models.Person')),id -> java.util.UUID('91810a49-1fed-41a7-a25e-57a957dceec1'))
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,8d2ee742-d6cf-4391-a063-9f4d6aec7ffb,16))
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,8d2ee742-d6cf-4391-a063-9f4d6aec7ffb,16) in Set()
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('8d2ee742-d6cf-4391-a063-9f4d6aec7ffb',16,'models.Person')),id -> java.util.UUID('91810a49-1fed-41a7-a25e-57a957dceec1')) with count 18
2017-08-17 21:22:47,066 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f910bf6e-befc-4fa9-8f01-0fd5cf2c9771'))
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f910bf6e-befc-4fa9-8f01-0fd5cf2c9771')) with count 19
2017-08-17 21:22:47,066 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f910bf6e-befc-4fa9-8f01-0fd5cf2c9771'))
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f910bf6e-befc-4fa9-8f01-0fd5cf2c9771')) with count 20
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:22:47,066 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f910bf6e-befc-4fa9-8f01-0fd5cf2c9771',19,'models.Person')),id -> java.util.UUID('84c03dc3-1a49-42d0-843e-8a0fc8d98244'))
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f910bf6e-befc-4fa9-8f01-0fd5cf2c9771',19,'models.Person')),id -> java.util.UUID('84c03dc3-1a49-42d0-843e-8a0fc8d98244')) with count 21
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,f910bf6e-befc-4fa9-8f01-0fd5cf2c9771,19))
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,f910bf6e-befc-4fa9-8f01-0fd5cf2c9771,19) in Set()
2017-08-17 21:22:47,066 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e2a056b2-075a-458a-a223-be4af241edba'))
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e2a056b2-075a-458a-a223-be4af241edba')) with count 22
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:22:47,066 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e2a056b2-075a-458a-a223-be4af241edba'))
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e2a056b2-075a-458a-a223-be4af241edba')) with count 23
2017-08-17 21:22:47,066 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e2a056b2-075a-458a-a223-be4af241edba',22,'models.Person')),id -> java.util.UUID('5a8b63a7-4673-4262-b4f9-6d09d691712a'))
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e2a056b2-075a-458a-a223-be4af241edba',22,'models.Person')),id -> java.util.UUID('5a8b63a7-4673-4262-b4f9-6d09d691712a')) with count 24
2017-08-17 21:22:47,066 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,e2a056b2-075a-458a-a223-be4af241edba,22))
2017-08-17 21:22:47,066 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ba252f90-eba6-4a5a-8e8e-dcc020d6530d'))
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ba252f90-eba6-4a5a-8e8e-dcc020d6530d')) with count 25
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,e2a056b2-075a-458a-a223-be4af241edba,22) in Set()
2017-08-17 21:22:47,076 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ba252f90-eba6-4a5a-8e8e-dcc020d6530d'))
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ba252f90-eba6-4a5a-8e8e-dcc020d6530d')) with count 26
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:47,076 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ba252f90-eba6-4a5a-8e8e-dcc020d6530d',25,'models.Person')),id -> java.util.UUID('19fa6708-ee46-457b-b97f-e99ebedb612e'))
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ba252f90-eba6-4a5a-8e8e-dcc020d6530d',25,'models.Person')),id -> java.util.UUID('19fa6708-ee46-457b-b97f-e99ebedb612e')) with count 27
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,ba252f90-eba6-4a5a-8e8e-dcc020d6530d,25))
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,ba252f90-eba6-4a5a-8e8e-dcc020d6530d,25) in Set()
2017-08-17 21:22:47,076 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3dd129e2-c585-4032-abab-c1c7582e0b3f'))
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3dd129e2-c585-4032-abab-c1c7582e0b3f')) with count 28
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:47,076 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3dd129e2-c585-4032-abab-c1c7582e0b3f'))
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3dd129e2-c585-4032-abab-c1c7582e0b3f')) with count 29
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:47,076 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3dd129e2-c585-4032-abab-c1c7582e0b3f',28,'models.Person')),id -> java.util.UUID('8dbe2ec1-75e6-4a5c-a26c-baec2ba37b69'))
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3dd129e2-c585-4032-abab-c1c7582e0b3f',28,'models.Person')),id -> java.util.UUID('8dbe2ec1-75e6-4a5c-a26c-baec2ba37b69')) with count 30
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,3dd129e2-c585-4032-abab-c1c7582e0b3f,28))
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,3dd129e2-c585-4032-abab-c1c7582e0b3f,28) in Set()
2017-08-17 21:22:47,076 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d4dff1b0-58b7-4c4f-a0f4-13ec2a55db1d'))
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d4dff1b0-58b7-4c4f-a0f4-13ec2a55db1d')) with count 31
2017-08-17 21:22:47,076 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:22:47,076 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d4dff1b0-58b7-4c4f-a0f4-13ec2a55db1d'))
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d4dff1b0-58b7-4c4f-a0f4-13ec2a55db1d')) with count 32
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d4dff1b0-58b7-4c4f-a0f4-13ec2a55db1d',31,'models.Person')),id -> java.util.UUID('e328e8fe-0f56-481e-ac39-7e8278d6de0a'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9540cd1c-38f0-4ebb-8310-cc74e4c977fb'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9540cd1c-38f0-4ebb-8310-cc74e4c977fb'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9540cd1c-38f0-4ebb-8310-cc74e4c977fb',34,'models.Person')),id -> java.util.UUID('2119652e-4438-4267-9ac1-7dd297f26630'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f5039b5f-b7cc-407e-aca9-95985e4c01a2'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f5039b5f-b7cc-407e-aca9-95985e4c01a2'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f5039b5f-b7cc-407e-aca9-95985e4c01a2',37,'models.Person')),id -> java.util.UUID('b3f71835-caa7-457b-938a-2226a1b2c882'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8205ca7f-a308-4a00-8275-a261f903280e'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8205ca7f-a308-4a00-8275-a261f903280e'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('8205ca7f-a308-4a00-8275-a261f903280e',40,'models.Person')),id -> java.util.UUID('3475121b-0be0-42c9-b1e6-2f67814b3515'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa',43,'models.Person')),id -> java.util.UUID('bf45be99-2ae4-404a-9d8c-84ad4ae1fef2'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2ffb06ef-66bb-4dcb-a4c1-e0a53f75edd7'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2ffb06ef-66bb-4dcb-a4c1-e0a53f75edd7'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2ffb06ef-66bb-4dcb-a4c1-e0a53f75edd7',46,'models.Person')),id -> java.util.UUID('834abd90-30cb-4f71-b7fd-5fa49c252b4b'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('dda77e61-40e0-477f-897c-4255da754064'))
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('dda77e61-40e0-477f-897c-4255da754064'))
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('dda77e61-40e0-477f-897c-4255da754064',49,'models.Person')),id -> java.util.UUID('7bffe8cd-6bc9-4529-8346-5bb8b8db7269'))
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d4dff1b0-58b7-4c4f-a0f4-13ec2a55db1d',31,'models.Person')),id -> java.util.UUID('e328e8fe-0f56-481e-ac39-7e8278d6de0a')) with count 33
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9540cd1c-38f0-4ebb-8310-cc74e4c977fb')) with count 35
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9540cd1c-38f0-4ebb-8310-cc74e4c977fb',34,'models.Person')),id -> java.util.UUID('2119652e-4438-4267-9ac1-7dd297f26630')) with count 36
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,d4dff1b0-58b7-4c4f-a0f4-13ec2a55db1d,31))
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,9540cd1c-38f0-4ebb-8310-cc74e4c977fb,34))
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,9540cd1c-38f0-4ebb-8310-cc74e4c977fb,34) in Set()
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f5039b5f-b7cc-407e-aca9-95985e4c01a2')) with count 37
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f5039b5f-b7cc-407e-aca9-95985e4c01a2')) with count 38
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-3] Referee[Person] - included reference Reference(class models.Person,d4dff1b0-58b7-4c4f-a0f4-13ec2a55db1d,31) in Set()
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f5039b5f-b7cc-407e-aca9-95985e4c01a2',37,'models.Person')),id -> java.util.UUID('b3f71835-caa7-457b-938a-2226a1b2c882')) with count 39
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,f5039b5f-b7cc-407e-aca9-95985e4c01a2,37))
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,f5039b5f-b7cc-407e-aca9-95985e4c01a2,37) in Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8205ca7f-a308-4a00-8275-a261f903280e')) with count 40
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8205ca7f-a308-4a00-8275-a261f903280e')) with count 40
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8205ca7f-a308-4a00-8275-a261f903280e')) with count 41
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8205ca7f-a308-4a00-8275-a261f903280e')) with count 41
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('8205ca7f-a308-4a00-8275-a261f903280e',40,'models.Person')),id -> java.util.UUID('3475121b-0be0-42c9-b1e6-2f67814b3515')) with count 42
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8205ca7f-a308-4a00-8275-a261f903280e')) with count 41
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,8205ca7f-a308-4a00-8275-a261f903280e,40))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,8205ca7f-a308-4a00-8275-a261f903280e,40) in Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa')) with count 43
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa')) with count 44
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8205ca7f-a308-4a00-8275-a261f903280e')) with count 41
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa',43,'models.Person')),id -> java.util.UUID('bf45be99-2ae4-404a-9d8c-84ad4ae1fef2')) with count 45
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9540cd1c-38f0-4ebb-8310-cc74e4c977fb')) with count 34
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa,43))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa,43) in Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2ffb06ef-66bb-4dcb-a4c1-e0a53f75edd7')) with count 46
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2ffb06ef-66bb-4dcb-a4c1-e0a53f75edd7')) with count 47
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2ffb06ef-66bb-4dcb-a4c1-e0a53f75edd7',46,'models.Person')),id -> java.util.UUID('834abd90-30cb-4f71-b7fd-5fa49c252b4b')) with count 48
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,2ffb06ef-66bb-4dcb-a4c1-e0a53f75edd7,46))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa',43,'models.Person')),id -> java.util.UUID('bf45be99-2ae4-404a-9d8c-84ad4ae1fef2')) with count 45
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('dda77e61-40e0-477f-897c-4255da754064')) with count 49
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('dda77e61-40e0-477f-897c-4255da754064')) with count 50
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('dda77e61-40e0-477f-897c-4255da754064',49,'models.Person')),id -> java.util.UUID('7bffe8cd-6bc9-4529-8346-5bb8b8db7269')) with count 51
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,dda77e61-40e0-477f-897c-4255da754064,49))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,dda77e61-40e0-477f-897c-4255da754064,49) in Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,2ffb06ef-66bb-4dcb-a4c1-e0a53f75edd7,46) in Set()
2017-08-17 21:22:47,086 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:47,086 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ea263168-f254-4786-9cbc-a257e41813bb'))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ea263168-f254-4786-9cbc-a257e41813bb')) with count 52
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ea263168-f254-4786-9cbc-a257e41813bb'))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ea263168-f254-4786-9cbc-a257e41813bb')) with count 53
2017-08-17 21:22:47,096 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ea263168-f254-4786-9cbc-a257e41813bb',52,'models.Person')),id -> java.util.UUID('5373a409-68a4-4b50-8bb1-a54b88e128f1'))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ea263168-f254-4786-9cbc-a257e41813bb',52,'models.Person')),id -> java.util.UUID('5373a409-68a4-4b50-8bb1-a54b88e128f1')) with count 54
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,ea263168-f254-4786-9cbc-a257e41813bb,52))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-15] Referee[Person] - included reference Reference(class models.Person,ea263168-f254-4786-9cbc-a257e41813bb,52) in Set()
2017-08-17 21:22:47,096 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1ae9b904-a376-4beb-8b0f-e21c98b7b25f'))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1ae9b904-a376-4beb-8b0f-e21c98b7b25f')) with count 55
2017-08-17 21:22:47,096 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1ae9b904-a376-4beb-8b0f-e21c98b7b25f'))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1ae9b904-a376-4beb-8b0f-e21c98b7b25f')) with count 56
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1ae9b904-a376-4beb-8b0f-e21c98b7b25f',55,'models.Person')),id -> java.util.UUID('0e36d5b9-a9f3-45ac-84de-d54ebc491ea3'))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1ae9b904-a376-4beb-8b0f-e21c98b7b25f',55,'models.Person')),id -> java.util.UUID('0e36d5b9-a9f3-45ac-84de-d54ebc491ea3')) with count 57
2017-08-17 21:22:47,096 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a16ed664-e4f6-4ba4-93cd-00f1438738a3'))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,1ae9b904-a376-4beb-8b0f-e21c98b7b25f,55))
2017-08-17 21:22:47,096 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a16ed664-e4f6-4ba4-93cd-00f1438738a3'))
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,1ae9b904-a376-4beb-8b0f-e21c98b7b25f,55) in Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a16ed664-e4f6-4ba4-93cd-00f1438738a3')) with count 58
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a16ed664-e4f6-4ba4-93cd-00f1438738a3')) with count 59
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:47,096 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a16ed664-e4f6-4ba4-93cd-00f1438738a3')) with count 59
2017-08-17 21:22:47,096 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a16ed664-e4f6-4ba4-93cd-00f1438738a3',58,'models.Person')),id -> java.util.UUID('20fe679e-578e-4e26-bc85-c4a6ab60d222'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a16ed664-e4f6-4ba4-93cd-00f1438738a3',58,'models.Person')),id -> java.util.UUID('20fe679e-578e-4e26-bc85-c4a6ab60d222')) with count 60
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4327aa9b-160e-4fb0-ba66-438e4d7a8fbf'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,a16ed664-e4f6-4ba4-93cd-00f1438738a3,58))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,a16ed664-e4f6-4ba4-93cd-00f1438738a3,58) in Set()
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4327aa9b-160e-4fb0-ba66-438e4d7a8fbf'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4327aa9b-160e-4fb0-ba66-438e4d7a8fbf')) with count 61
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4327aa9b-160e-4fb0-ba66-438e4d7a8fbf',61,'models.Person')),id -> java.util.UUID('a0f40bc2-60bb-4691-be78-968f661f6fbb'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4327aa9b-160e-4fb0-ba66-438e4d7a8fbf')) with count 62
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('224723e4-1530-43fd-99f7-ede875b3f38d'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4327aa9b-160e-4fb0-ba66-438e4d7a8fbf',61,'models.Person')),id -> java.util.UUID('a0f40bc2-60bb-4691-be78-968f661f6fbb')) with count 63
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,4327aa9b-160e-4fb0-ba66-438e4d7a8fbf,61))
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('224723e4-1530-43fd-99f7-ede875b3f38d'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,4327aa9b-160e-4fb0-ba66-438e4d7a8fbf,61) in Set()
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('224723e4-1530-43fd-99f7-ede875b3f38d')) with count 64
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('224723e4-1530-43fd-99f7-ede875b3f38d',64,'models.Person')),id -> java.util.UUID('da0162a4-236d-429c-93c2-02bad807da8c'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('224723e4-1530-43fd-99f7-ede875b3f38d')) with count 65
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c822a6fa-f9e4-4825-b427-893cd4709477'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('224723e4-1530-43fd-99f7-ede875b3f38d',64,'models.Person')),id -> java.util.UUID('da0162a4-236d-429c-93c2-02bad807da8c')) with count 66
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,224723e4-1530-43fd-99f7-ede875b3f38d,64))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-1] Referee[Person] - included reference Reference(class models.Person,224723e4-1530-43fd-99f7-ede875b3f38d,64) in Set()
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c822a6fa-f9e4-4825-b427-893cd4709477')) with count 67
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c822a6fa-f9e4-4825-b427-893cd4709477'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c822a6fa-f9e4-4825-b427-893cd4709477')) with count 68
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c822a6fa-f9e4-4825-b427-893cd4709477',67,'models.Person')),id -> java.util.UUID('51ac90a2-9fa9-44ae-a66f-dadf3e1fe9dd'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c822a6fa-f9e4-4825-b427-893cd4709477',67,'models.Person')),id -> java.util.UUID('51ac90a2-9fa9-44ae-a66f-dadf3e1fe9dd')) with count 69
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('07ebf352-bad8-4f55-9ccd-c69357936e6d'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,c822a6fa-f9e4-4825-b427-893cd4709477,67))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Referee[Person] - included reference Reference(class models.Person,c822a6fa-f9e4-4825-b427-893cd4709477,67) in Set()
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('07ebf352-bad8-4f55-9ccd-c69357936e6d')) with count 70
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('07ebf352-bad8-4f55-9ccd-c69357936e6d'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('07ebf352-bad8-4f55-9ccd-c69357936e6d')) with count 71
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('07ebf352-bad8-4f55-9ccd-c69357936e6d',70,'models.Person')),id -> java.util.UUID('85cc9f98-a064-48c3-82ed-07b563941e7d'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('07ebf352-bad8-4f55-9ccd-c69357936e6d',70,'models.Person')),id -> java.util.UUID('85cc9f98-a064-48c3-82ed-07b563941e7d')) with count 72
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('32ab2dad-25e7-44fb-bc7b-c31460f1a977'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,07ebf352-bad8-4f55-9ccd-c69357936e6d,70))
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('32ab2dad-25e7-44fb-bc7b-c31460f1a977'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Referee[Person] - included reference Reference(class models.Person,07ebf352-bad8-4f55-9ccd-c69357936e6d,70) in Set()
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('32ab2dad-25e7-44fb-bc7b-c31460f1a977')) with count 73
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('32ab2dad-25e7-44fb-bc7b-c31460f1a977',73,'models.Person')),id -> java.util.UUID('fb0e270b-1c76-4e95-bc20-dd8100874f02'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('32ab2dad-25e7-44fb-bc7b-c31460f1a977')) with count 74
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4c03d096-ebd1-4e6d-b1d5-e95c871e6dfd'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('32ab2dad-25e7-44fb-bc7b-c31460f1a977',73,'models.Person')),id -> java.util.UUID('fb0e270b-1c76-4e95-bc20-dd8100874f02')) with count 75
2017-08-17 21:22:47,106 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4c03d096-ebd1-4e6d-b1d5-e95c871e6dfd'))
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,32ab2dad-25e7-44fb-bc7b-c31460f1a977,73))
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,32ab2dad-25e7-44fb-bc7b-c31460f1a977,73) in Set()
2017-08-17 21:22:47,116 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4c03d096-ebd1-4e6d-b1d5-e95c871e6dfd',76,'models.Person')),id -> java.util.UUID('aeed9023-82b0-46eb-98d9-ddace7983c3c'))
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4c03d096-ebd1-4e6d-b1d5-e95c871e6dfd',76,'models.Person')),id -> java.util.UUID('aeed9023-82b0-46eb-98d9-ddace7983c3c')) with count 78
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,4c03d096-ebd1-4e6d-b1d5-e95c871e6dfd,76))
2017-08-17 21:22:47,116 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1dab698b-7c6f-46e7-8e19-303edfb22033'))
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Referee[Person] - included reference Reference(class models.Person,4c03d096-ebd1-4e6d-b1d5-e95c871e6dfd,76) in Set()
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1dab698b-7c6f-46e7-8e19-303edfb22033')) with count 79
2017-08-17 21:22:47,116 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1dab698b-7c6f-46e7-8e19-303edfb22033'))
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1dab698b-7c6f-46e7-8e19-303edfb22033')) with count 80
2017-08-17 21:22:47,116 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1dab698b-7c6f-46e7-8e19-303edfb22033',79,'models.Person')),id -> java.util.UUID('e4ddde66-ce22-40c2-acd3-948936c32ba5'))
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1dab698b-7c6f-46e7-8e19-303edfb22033',79,'models.Person')),id -> java.util.UUID('e4ddde66-ce22-40c2-acd3-948936c32ba5')) with count 81
2017-08-17 21:22:47,116 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b62e141c-47f3-4673-a91a-3167ebbac2ff'))
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,1dab698b-7c6f-46e7-8e19-303edfb22033,79))
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Referee[Person] - included reference Reference(class models.Person,1dab698b-7c6f-46e7-8e19-303edfb22033,79) in Set()
2017-08-17 21:22:47,116 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b62e141c-47f3-4673-a91a-3167ebbac2ff'))
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b62e141c-47f3-4673-a91a-3167ebbac2ff')) with count 82
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b62e141c-47f3-4673-a91a-3167ebbac2ff')) with count 83
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:47,106 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4c03d096-ebd1-4e6d-b1d5-e95c871e6dfd')) with count 76
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:47,116 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4c03d096-ebd1-4e6d-b1d5-e95c871e6dfd')) with count 77
2017-08-17 21:22:47,116 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b62e141c-47f3-4673-a91a-3167ebbac2ff',82,'models.Person')),id -> java.util.UUID('83d9ddee-26a7-4212-b390-f1814efb234d'))
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,b62e141c-47f3-4673-a91a-3167ebbac2ff,82))
2017-08-17 21:22:47,126 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1c52fdc0-c4c7-48ac-8e81-7509ea209aed'))
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-15] Referee[Person] - included reference Reference(class models.Person,b62e141c-47f3-4673-a91a-3167ebbac2ff,82) in Set()
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1c52fdc0-c4c7-48ac-8e81-7509ea209aed')) with count 85
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b62e141c-47f3-4673-a91a-3167ebbac2ff',82,'models.Person')),id -> java.util.UUID('83d9ddee-26a7-4212-b390-f1814efb234d')) with count 84
2017-08-17 21:22:47,126 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1c52fdc0-c4c7-48ac-8e81-7509ea209aed'))
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1c52fdc0-c4c7-48ac-8e81-7509ea209aed')) with count 86
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:22:47,126 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1c52fdc0-c4c7-48ac-8e81-7509ea209aed',85,'models.Person')),id -> java.util.UUID('bcaaaed9-393b-43a3-9c88-e4f4b8b3fb21'))
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1c52fdc0-c4c7-48ac-8e81-7509ea209aed',85,'models.Person')),id -> java.util.UUID('bcaaaed9-393b-43a3-9c88-e4f4b8b3fb21')) with count 87
2017-08-17 21:22:47,126 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ed8436d0-f8e9-4ba4-b7b0-c63d75111ba7'))
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,1c52fdc0-c4c7-48ac-8e81-7509ea209aed,85))
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-3] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ed8436d0-f8e9-4ba4-b7b0-c63d75111ba7')) with count 88
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,1c52fdc0-c4c7-48ac-8e81-7509ea209aed,85) in Set()
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:22:47,126 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ed8436d0-f8e9-4ba4-b7b0-c63d75111ba7'))
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ed8436d0-f8e9-4ba4-b7b0-c63d75111ba7')) with count 89
2017-08-17 21:22:47,126 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ed8436d0-f8e9-4ba4-b7b0-c63d75111ba7',88,'models.Person')),id -> java.util.UUID('fc3d2a0d-dcaf-4c03-b87b-39807a2a9b8e'))
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,ed8436d0-f8e9-4ba4-b7b0-c63d75111ba7,88))
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ed8436d0-f8e9-4ba4-b7b0-c63d75111ba7',88,'models.Person')),id -> java.util.UUID('fc3d2a0d-dcaf-4c03-b87b-39807a2a9b8e')) with count 90
2017-08-17 21:22:47,126 TRACE [ForkJoinPool-1-worker-3] Referee[Person] - included reference Reference(class models.Person,ed8436d0-f8e9-4ba4-b7b0-c63d75111ba7,88) in Set()
2017-08-17 21:22:48,127 INFO  [main] Counter[Person] - counter is 90
2017-08-17 21:22:48,127 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(fb45072f-473c-482d-965f-d882a140e4d2,Map(3 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a01a7dc5-7523-4b0b-bd07-ed41e9c460f0',1,'models.Person')),id -> java.util.UUID('fb45072f-473c-482d-965f-d882a140e4d2'))))
	(ed8436d0-f8e9-4ba4-b7b0-c63d75111ba7,Map(88 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ed8436d0-f8e9-4ba4-b7b0-c63d75111ba7')), 89 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ed8436d0-f8e9-4ba4-b7b0-c63d75111ba7'))))
	(3475121b-0be0-42c9-b1e6-2f67814b3515,Map(42 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('8205ca7f-a308-4a00-8275-a261f903280e',40,'models.Person')),id -> java.util.UUID('3475121b-0be0-42c9-b1e6-2f67814b3515'))))
	(b62e141c-47f3-4673-a91a-3167ebbac2ff,Map(82 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b62e141c-47f3-4673-a91a-3167ebbac2ff')), 83 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b62e141c-47f3-4673-a91a-3167ebbac2ff'))))
	(f910bf6e-befc-4fa9-8f01-0fd5cf2c9771,Map(19 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f910bf6e-befc-4fa9-8f01-0fd5cf2c9771')), 20 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f910bf6e-befc-4fa9-8f01-0fd5cf2c9771'))))
	(1dab698b-7c6f-46e7-8e19-303edfb22033,Map(79 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1dab698b-7c6f-46e7-8e19-303edfb22033')), 80 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1dab698b-7c6f-46e7-8e19-303edfb22033'))))
	(f5039b5f-b7cc-407e-aca9-95985e4c01a2,Map(37 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f5039b5f-b7cc-407e-aca9-95985e4c01a2')), 38 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f5039b5f-b7cc-407e-aca9-95985e4c01a2'))))
	(7bffe8cd-6bc9-4529-8346-5bb8b8db7269,Map(51 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('dda77e61-40e0-477f-897c-4255da754064',49,'models.Person')),id -> java.util.UUID('7bffe8cd-6bc9-4529-8346-5bb8b8db7269'))))
	(aeed9023-82b0-46eb-98d9-ddace7983c3c,Map(78 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4c03d096-ebd1-4e6d-b1d5-e95c871e6dfd',76,'models.Person')),id -> java.util.UUID('aeed9023-82b0-46eb-98d9-ddace7983c3c'))))
	(8d2ee742-d6cf-4391-a063-9f4d6aec7ffb,Map(16 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8d2ee742-d6cf-4391-a063-9f4d6aec7ffb')), 17 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8d2ee742-d6cf-4391-a063-9f4d6aec7ffb'))))
	(bcaaaed9-393b-43a3-9c88-e4f4b8b3fb21,Map(87 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1c52fdc0-c4c7-48ac-8e81-7509ea209aed',85,'models.Person')),id -> java.util.UUID('bcaaaed9-393b-43a3-9c88-e4f4b8b3fb21'))))
	(da0162a4-236d-429c-93c2-02bad807da8c,Map(66 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('224723e4-1530-43fd-99f7-ede875b3f38d',64,'models.Person')),id -> java.util.UUID('da0162a4-236d-429c-93c2-02bad807da8c'))))
	(5ab9cb90-1cdb-4ab6-9978-df878e4dac47,Map(12 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('06d6412a-f030-4de0-853f-23e3d55dcc90',10,'models.Person')),id -> java.util.UUID('5ab9cb90-1cdb-4ab6-9978-df878e4dac47'))))
	(83d9ddee-26a7-4212-b390-f1814efb234d,Map(84 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b62e141c-47f3-4673-a91a-3167ebbac2ff',82,'models.Person')),id -> java.util.UUID('83d9ddee-26a7-4212-b390-f1814efb234d'))))
	(2119652e-4438-4267-9ac1-7dd297f26630,Map(36 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9540cd1c-38f0-4ebb-8310-cc74e4c977fb',34,'models.Person')),id -> java.util.UUID('2119652e-4438-4267-9ac1-7dd297f26630'))))
	(a01a7dc5-7523-4b0b-bd07-ed41e9c460f0,Map(2 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a01a7dc5-7523-4b0b-bd07-ed41e9c460f0')), 1 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a01a7dc5-7523-4b0b-bd07-ed41e9c460f0'))))
	(4c03d096-ebd1-4e6d-b1d5-e95c871e6dfd,Map(76 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4c03d096-ebd1-4e6d-b1d5-e95c871e6dfd')), 77 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4c03d096-ebd1-4e6d-b1d5-e95c871e6dfd'))))
	(224723e4-1530-43fd-99f7-ede875b3f38d,Map(64 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('224723e4-1530-43fd-99f7-ede875b3f38d')), 65 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('224723e4-1530-43fd-99f7-ede875b3f38d'))))
	(3dd129e2-c585-4032-abab-c1c7582e0b3f,Map(28 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3dd129e2-c585-4032-abab-c1c7582e0b3f')), 29 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3dd129e2-c585-4032-abab-c1c7582e0b3f'))))
	(fb0e270b-1c76-4e95-bc20-dd8100874f02,Map(75 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('32ab2dad-25e7-44fb-bc7b-c31460f1a977',73,'models.Person')),id -> java.util.UUID('fb0e270b-1c76-4e95-bc20-dd8100874f02'))))
	(ea263168-f254-4786-9cbc-a257e41813bb,Map(52 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ea263168-f254-4786-9cbc-a257e41813bb')), 53 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ea263168-f254-4786-9cbc-a257e41813bb'))))
	(cb89f5fe-3680-44d8-82d7-7093f1aea814,Map(15 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fbd69b5d-f0c9-4293-a09c-76833cf2bab3',13,'models.Person')),id -> java.util.UUID('cb89f5fe-3680-44d8-82d7-7093f1aea814'))))
	(2ffb06ef-66bb-4dcb-a4c1-e0a53f75edd7,Map(46 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2ffb06ef-66bb-4dcb-a4c1-e0a53f75edd7')), 47 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2ffb06ef-66bb-4dcb-a4c1-e0a53f75edd7'))))
	(ba252f90-eba6-4a5a-8e8e-dcc020d6530d,Map(25 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ba252f90-eba6-4a5a-8e8e-dcc020d6530d')), 26 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ba252f90-eba6-4a5a-8e8e-dcc020d6530d'))))
	(51ac90a2-9fa9-44ae-a66f-dadf3e1fe9dd,Map(69 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c822a6fa-f9e4-4825-b427-893cd4709477',67,'models.Person')),id -> java.util.UUID('51ac90a2-9fa9-44ae-a66f-dadf3e1fe9dd'))))
	(5a8b63a7-4673-4262-b4f9-6d09d691712a,Map(24 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e2a056b2-075a-458a-a223-be4af241edba',22,'models.Person')),id -> java.util.UUID('5a8b63a7-4673-4262-b4f9-6d09d691712a'))))
	(a16ed664-e4f6-4ba4-93cd-00f1438738a3,Map(58 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('a16ed664-e4f6-4ba4-93cd-00f1438738a3')), 59 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('a16ed664-e4f6-4ba4-93cd-00f1438738a3'))))
	(01b377c6-9064-4d6b-b852-edf6eb3e7f72,Map(7 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('01b377c6-9064-4d6b-b852-edf6eb3e7f72')), 8 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('01b377c6-9064-4d6b-b852-edf6eb3e7f72'))))
	(0e36d5b9-a9f3-45ac-84de-d54ebc491ea3,Map(57 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1ae9b904-a376-4beb-8b0f-e21c98b7b25f',55,'models.Person')),id -> java.util.UUID('0e36d5b9-a9f3-45ac-84de-d54ebc491ea3'))))
	(9540cd1c-38f0-4ebb-8310-cc74e4c977fb,Map(35 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9540cd1c-38f0-4ebb-8310-cc74e4c977fb')), 34 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9540cd1c-38f0-4ebb-8310-cc74e4c977fb'))))
	(32ab2dad-25e7-44fb-bc7b-c31460f1a977,Map(73 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('32ab2dad-25e7-44fb-bc7b-c31460f1a977')), 74 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('32ab2dad-25e7-44fb-bc7b-c31460f1a977'))))
	(eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa,Map(43 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa')), 44 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa'))))
	(8205ca7f-a308-4a00-8275-a261f903280e,Map(40 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('8205ca7f-a308-4a00-8275-a261f903280e')), 41 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('8205ca7f-a308-4a00-8275-a261f903280e'))))
	(e4ddde66-ce22-40c2-acd3-948936c32ba5,Map(81 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1dab698b-7c6f-46e7-8e19-303edfb22033',79,'models.Person')),id -> java.util.UUID('e4ddde66-ce22-40c2-acd3-948936c32ba5'))))
	(19fa6708-ee46-457b-b97f-e99ebedb612e,Map(27 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ba252f90-eba6-4a5a-8e8e-dcc020d6530d',25,'models.Person')),id -> java.util.UUID('19fa6708-ee46-457b-b97f-e99ebedb612e'))))
	(b3f71835-caa7-457b-938a-2226a1b2c882,Map(39 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f5039b5f-b7cc-407e-aca9-95985e4c01a2',37,'models.Person')),id -> java.util.UUID('b3f71835-caa7-457b-938a-2226a1b2c882'))))
	(20fe679e-578e-4e26-bc85-c4a6ab60d222,Map(60 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('a16ed664-e4f6-4ba4-93cd-00f1438738a3',58,'models.Person')),id -> java.util.UUID('20fe679e-578e-4e26-bc85-c4a6ab60d222'))))
	(07ebf352-bad8-4f55-9ccd-c69357936e6d,Map(70 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('07ebf352-bad8-4f55-9ccd-c69357936e6d')), 71 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('07ebf352-bad8-4f55-9ccd-c69357936e6d'))))
	(84c03dc3-1a49-42d0-843e-8a0fc8d98244,Map(21 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f910bf6e-befc-4fa9-8f01-0fd5cf2c9771',19,'models.Person')),id -> java.util.UUID('84c03dc3-1a49-42d0-843e-8a0fc8d98244'))))
	(fca7527d-8658-40ec-a47b-7bff2ee58aad,Map(9 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('01b377c6-9064-4d6b-b852-edf6eb3e7f72',7,'models.Person')),id -> java.util.UUID('fca7527d-8658-40ec-a47b-7bff2ee58aad'))))
	(1ae9b904-a376-4beb-8b0f-e21c98b7b25f,Map(55 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1ae9b904-a376-4beb-8b0f-e21c98b7b25f')), 56 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1ae9b904-a376-4beb-8b0f-e21c98b7b25f'))))
	(fc3d2a0d-dcaf-4c03-b87b-39807a2a9b8e,Map(90 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ed8436d0-f8e9-4ba4-b7b0-c63d75111ba7',88,'models.Person')),id -> java.util.UUID('fc3d2a0d-dcaf-4c03-b87b-39807a2a9b8e'))))
	(85cc9f98-a064-48c3-82ed-07b563941e7d,Map(72 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('07ebf352-bad8-4f55-9ccd-c69357936e6d',70,'models.Person')),id -> java.util.UUID('85cc9f98-a064-48c3-82ed-07b563941e7d'))))
	(834abd90-30cb-4f71-b7fd-5fa49c252b4b,Map(48 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2ffb06ef-66bb-4dcb-a4c1-e0a53f75edd7',46,'models.Person')),id -> java.util.UUID('834abd90-30cb-4f71-b7fd-5fa49c252b4b'))))
	(4d5da9e3-c828-4e18-a523-70eeb2ca47d7,Map(6 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9bbc3ce8-e0ad-44e6-964e-6279078c6976',4,'models.Person')),id -> java.util.UUID('4d5da9e3-c828-4e18-a523-70eeb2ca47d7'))))
	(fbd69b5d-f0c9-4293-a09c-76833cf2bab3,Map(13 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fbd69b5d-f0c9-4293-a09c-76833cf2bab3')), 14 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fbd69b5d-f0c9-4293-a09c-76833cf2bab3'))))
	(dda77e61-40e0-477f-897c-4255da754064,Map(49 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('dda77e61-40e0-477f-897c-4255da754064')), 50 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('dda77e61-40e0-477f-897c-4255da754064'))))
	(a0f40bc2-60bb-4691-be78-968f661f6fbb,Map(63 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4327aa9b-160e-4fb0-ba66-438e4d7a8fbf',61,'models.Person')),id -> java.util.UUID('a0f40bc2-60bb-4691-be78-968f661f6fbb'))))
	(e328e8fe-0f56-481e-ac39-7e8278d6de0a,Map(33 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d4dff1b0-58b7-4c4f-a0f4-13ec2a55db1d',31,'models.Person')),id -> java.util.UUID('e328e8fe-0f56-481e-ac39-7e8278d6de0a'))))
	(5373a409-68a4-4b50-8bb1-a54b88e128f1,Map(54 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ea263168-f254-4786-9cbc-a257e41813bb',52,'models.Person')),id -> java.util.UUID('5373a409-68a4-4b50-8bb1-a54b88e128f1'))))
	(c822a6fa-f9e4-4825-b427-893cd4709477,Map(67 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c822a6fa-f9e4-4825-b427-893cd4709477')), 68 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c822a6fa-f9e4-4825-b427-893cd4709477'))))
	(4327aa9b-160e-4fb0-ba66-438e4d7a8fbf,Map(61 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4327aa9b-160e-4fb0-ba66-438e4d7a8fbf')), 62 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4327aa9b-160e-4fb0-ba66-438e4d7a8fbf'))))
	(bf45be99-2ae4-404a-9d8c-84ad4ae1fef2,Map(45 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('eea08ad1-2ae5-4baa-b2cd-db1a4aea0afa',43,'models.Person')),id -> java.util.UUID('bf45be99-2ae4-404a-9d8c-84ad4ae1fef2'))))
	(8dbe2ec1-75e6-4a5c-a26c-baec2ba37b69,Map(30 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3dd129e2-c585-4032-abab-c1c7582e0b3f',28,'models.Person')),id -> java.util.UUID('8dbe2ec1-75e6-4a5c-a26c-baec2ba37b69'))))
	(06d6412a-f030-4de0-853f-23e3d55dcc90,Map(10 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('06d6412a-f030-4de0-853f-23e3d55dcc90')), 11 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('06d6412a-f030-4de0-853f-23e3d55dcc90'))))
	(1c52fdc0-c4c7-48ac-8e81-7509ea209aed,Map(85 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1c52fdc0-c4c7-48ac-8e81-7509ea209aed')), 86 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1c52fdc0-c4c7-48ac-8e81-7509ea209aed'))))
	(e2a056b2-075a-458a-a223-be4af241edba,Map(22 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e2a056b2-075a-458a-a223-be4af241edba')), 23 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e2a056b2-075a-458a-a223-be4af241edba'))))
	(9bbc3ce8-e0ad-44e6-964e-6279078c6976,Map(4 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9bbc3ce8-e0ad-44e6-964e-6279078c6976')), 5 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9bbc3ce8-e0ad-44e6-964e-6279078c6976'))))
	(d4dff1b0-58b7-4c4f-a0f4-13ec2a55db1d,Map(31 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d4dff1b0-58b7-4c4f-a0f4-13ec2a55db1d')), 32 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d4dff1b0-58b7-4c4f-a0f4-13ec2a55db1d'))))
	(91810a49-1fed-41a7-a25e-57a957dceec1,Map(18 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('8d2ee742-d6cf-4391-a063-9f4d6aec7ffb',16,'models.Person')),id -> java.util.UUID('91810a49-1fed-41a7-a25e-57a957dceec1'))))

2017-08-17 21:24:11,244 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b9fefb7b-81f7-466a-b605-b395c22ee599'))
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b9fefb7b-81f7-466a-b605-b395c22ee599')) with count 1
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:24:11,274 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b9fefb7b-81f7-466a-b605-b395c22ee599'))
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b9fefb7b-81f7-466a-b605-b395c22ee599')) with count 2
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b9fefb7b-81f7-466a-b605-b395c22ee599')) with count 1
2017-08-17 21:24:11,274 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b9fefb7b-81f7-466a-b605-b395c22ee599',1,'models.Person')),id -> java.util.UUID('9d1a5514-9c22-4df5-884f-1a35d12da333'))
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b9fefb7b-81f7-466a-b605-b395c22ee599',1,'models.Person')),id -> java.util.UUID('9d1a5514-9c22-4df5-884f-1a35d12da333')) with count 3
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,b9fefb7b-81f7-466a-b605-b395c22ee599,1))
2017-08-17 21:24:11,274 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f029f144-8767-4765-b125-afb94a46f21b'))
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f029f144-8767-4765-b125-afb94a46f21b')) with count 4
2017-08-17 21:24:11,274 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f029f144-8767-4765-b125-afb94a46f21b'))
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f029f144-8767-4765-b125-afb94a46f21b')) with count 5
2017-08-17 21:24:11,274 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f029f144-8767-4765-b125-afb94a46f21b',4,'models.Person')),id -> java.util.UUID('7b375e21-fdc4-4c87-b172-2902c79a40fc'))
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,b9fefb7b-81f7-466a-b605-b395c22ee599,1) in Set()
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,f029f144-8767-4765-b125-afb94a46f21b,4))
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f029f144-8767-4765-b125-afb94a46f21b',4,'models.Person')),id -> java.util.UUID('7b375e21-fdc4-4c87-b172-2902c79a40fc')) with count 6
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,f029f144-8767-4765-b125-afb94a46f21b,4) in Set()
2017-08-17 21:24:11,274 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e6e58dca-9778-4790-b206-19b6f758901e'))
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e6e58dca-9778-4790-b206-19b6f758901e')) with count 7
2017-08-17 21:24:11,274 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e6e58dca-9778-4790-b206-19b6f758901e'))
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:24:11,274 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e6e58dca-9778-4790-b206-19b6f758901e')) with count 8
2017-08-17 21:24:11,274 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e6e58dca-9778-4790-b206-19b6f758901e',7,'models.Person')),id -> java.util.UUID('0d16fb93-868d-4337-b28b-f19a66a0ea51'))
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e6e58dca-9778-4790-b206-19b6f758901e',7,'models.Person')),id -> java.util.UUID('0d16fb93-868d-4337-b28b-f19a66a0ea51')) with count 9
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,e6e58dca-9778-4790-b206-19b6f758901e,7))
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,e6e58dca-9778-4790-b206-19b6f758901e,7) in Set()
2017-08-17 21:24:11,284 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('53a98de9-07e3-4ac1-beea-ce719591fe19'))
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('53a98de9-07e3-4ac1-beea-ce719591fe19')) with count 10
2017-08-17 21:24:11,284 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('53a98de9-07e3-4ac1-beea-ce719591fe19'))
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('53a98de9-07e3-4ac1-beea-ce719591fe19')) with count 11
2017-08-17 21:24:11,284 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('53a98de9-07e3-4ac1-beea-ce719591fe19',10,'models.Person')),id -> java.util.UUID('2ab57687-65b5-4ca7-9ad6-581170f207b6'))
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,53a98de9-07e3-4ac1-beea-ce719591fe19,10))
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('53a98de9-07e3-4ac1-beea-ce719591fe19',10,'models.Person')),id -> java.util.UUID('2ab57687-65b5-4ca7-9ad6-581170f207b6')) with count 12
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,53a98de9-07e3-4ac1-beea-ce719591fe19,10) in Set()
2017-08-17 21:24:11,284 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1a282f68-f8d4-41d7-af26-837650a546b7'))
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1a282f68-f8d4-41d7-af26-837650a546b7')) with count 13
2017-08-17 21:24:11,284 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1a282f68-f8d4-41d7-af26-837650a546b7'))
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1a282f68-f8d4-41d7-af26-837650a546b7')) with count 14
2017-08-17 21:24:11,284 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1a282f68-f8d4-41d7-af26-837650a546b7',13,'models.Person')),id -> java.util.UUID('aa2c45d3-561e-490c-a98d-1d4c919f583c'))
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1a282f68-f8d4-41d7-af26-837650a546b7',13,'models.Person')),id -> java.util.UUID('aa2c45d3-561e-490c-a98d-1d4c919f583c')) with count 15
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,1a282f68-f8d4-41d7-af26-837650a546b7,13))
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,1a282f68-f8d4-41d7-af26-837650a546b7,13) in Set()
2017-08-17 21:24:11,284 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3cfe995e-af64-48a9-aeb4-d7387a0ad445'))
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,284 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3cfe995e-af64-48a9-aeb4-d7387a0ad445')) with count 16
2017-08-17 21:24:11,284 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3cfe995e-af64-48a9-aeb4-d7387a0ad445'))
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3cfe995e-af64-48a9-aeb4-d7387a0ad445')) with count 17
2017-08-17 21:24:11,294 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3cfe995e-af64-48a9-aeb4-d7387a0ad445',16,'models.Person')),id -> java.util.UUID('70367dbc-386b-4e08-8d7a-7441768bc2e6'))
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,3cfe995e-af64-48a9-aeb4-d7387a0ad445,16))
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3cfe995e-af64-48a9-aeb4-d7387a0ad445',16,'models.Person')),id -> java.util.UUID('70367dbc-386b-4e08-8d7a-7441768bc2e6')) with count 18
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,3cfe995e-af64-48a9-aeb4-d7387a0ad445,16) in Set()
2017-08-17 21:24:11,294 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('95c782d5-8a39-4313-9dc2-18003a1cc7df'))
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('95c782d5-8a39-4313-9dc2-18003a1cc7df')) with count 19
2017-08-17 21:24:11,294 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('95c782d5-8a39-4313-9dc2-18003a1cc7df'))
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('95c782d5-8a39-4313-9dc2-18003a1cc7df')) with count 20
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,294 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('95c782d5-8a39-4313-9dc2-18003a1cc7df',19,'models.Person')),id -> java.util.UUID('8eae1268-8948-4196-8fc7-3ae8915ef2a9'))
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('95c782d5-8a39-4313-9dc2-18003a1cc7df',19,'models.Person')),id -> java.util.UUID('8eae1268-8948-4196-8fc7-3ae8915ef2a9')) with count 21
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,95c782d5-8a39-4313-9dc2-18003a1cc7df,19))
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,95c782d5-8a39-4313-9dc2-18003a1cc7df,19) in Set()
2017-08-17 21:24:11,294 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9b2ec69e-0373-4c7c-97a2-576ea1e7045f'))
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9b2ec69e-0373-4c7c-97a2-576ea1e7045f')) with count 22
2017-08-17 21:24:11,294 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9b2ec69e-0373-4c7c-97a2-576ea1e7045f'))
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9b2ec69e-0373-4c7c-97a2-576ea1e7045f')) with count 23
2017-08-17 21:24:11,294 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9b2ec69e-0373-4c7c-97a2-576ea1e7045f',22,'models.Person')),id -> java.util.UUID('8a4d6b13-9f96-4e75-b49d-a3cb36eeb3d0'))
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,9b2ec69e-0373-4c7c-97a2-576ea1e7045f,22))
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9b2ec69e-0373-4c7c-97a2-576ea1e7045f',22,'models.Person')),id -> java.util.UUID('8a4d6b13-9f96-4e75-b49d-a3cb36eeb3d0')) with count 24
2017-08-17 21:24:11,294 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,9b2ec69e-0373-4c7c-97a2-576ea1e7045f,22) in Set()
2017-08-17 21:24:11,294 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2972af6f-7833-4945-b45b-07a2d8f771c9'))
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2972af6f-7833-4945-b45b-07a2d8f771c9')) with count 25
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,304 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2972af6f-7833-4945-b45b-07a2d8f771c9'))
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2972af6f-7833-4945-b45b-07a2d8f771c9')) with count 26
2017-08-17 21:24:11,304 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2972af6f-7833-4945-b45b-07a2d8f771c9',25,'models.Person')),id -> java.util.UUID('56fec5bd-cf03-4907-bd1a-9510efd33032'))
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,2972af6f-7833-4945-b45b-07a2d8f771c9,25))
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2972af6f-7833-4945-b45b-07a2d8f771c9',25,'models.Person')),id -> java.util.UUID('56fec5bd-cf03-4907-bd1a-9510efd33032')) with count 27
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,2972af6f-7833-4945-b45b-07a2d8f771c9,25) in Set()
2017-08-17 21:24:11,304 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5cf4463b-f6ea-4e65-97ae-716aa2bcc557'))
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5cf4463b-f6ea-4e65-97ae-716aa2bcc557')) with count 28
2017-08-17 21:24:11,304 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5cf4463b-f6ea-4e65-97ae-716aa2bcc557'))
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5cf4463b-f6ea-4e65-97ae-716aa2bcc557')) with count 29
2017-08-17 21:24:11,304 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5cf4463b-f6ea-4e65-97ae-716aa2bcc557',28,'models.Person')),id -> java.util.UUID('c45d793c-4ddf-4cdf-b3ad-efbdfff62fd0'))
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,5cf4463b-f6ea-4e65-97ae-716aa2bcc557,28))
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5cf4463b-f6ea-4e65-97ae-716aa2bcc557',28,'models.Person')),id -> java.util.UUID('c45d793c-4ddf-4cdf-b3ad-efbdfff62fd0')) with count 30
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,5cf4463b-f6ea-4e65-97ae-716aa2bcc557,28) in Set()
2017-08-17 21:24:11,304 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('346dadec-5a3f-4644-a5c7-7644c856cdfd'))
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('346dadec-5a3f-4644-a5c7-7644c856cdfd')) with count 31
2017-08-17 21:24:11,304 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('346dadec-5a3f-4644-a5c7-7644c856cdfd'))
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('346dadec-5a3f-4644-a5c7-7644c856cdfd')) with count 32
2017-08-17 21:24:11,304 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,304 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('346dadec-5a3f-4644-a5c7-7644c856cdfd',31,'models.Person')),id -> java.util.UUID('62f0fd4a-3c11-45fe-b6a7-e63e006e8b80'))
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,346dadec-5a3f-4644-a5c7-7644c856cdfd,31))
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('346dadec-5a3f-4644-a5c7-7644c856cdfd',31,'models.Person')),id -> java.util.UUID('62f0fd4a-3c11-45fe-b6a7-e63e006e8b80')) with count 33
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,346dadec-5a3f-4644-a5c7-7644c856cdfd,31) in Set()
2017-08-17 21:24:11,314 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b06f2f4f-33a1-431a-8e11-c5cfeae3e157'))
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b06f2f4f-33a1-431a-8e11-c5cfeae3e157')) with count 34
2017-08-17 21:24:11,314 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b06f2f4f-33a1-431a-8e11-c5cfeae3e157'))
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b06f2f4f-33a1-431a-8e11-c5cfeae3e157')) with count 35
2017-08-17 21:24:11,314 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b06f2f4f-33a1-431a-8e11-c5cfeae3e157',34,'models.Person')),id -> java.util.UUID('7f81a176-094a-465a-8d1b-dca7174526ed'))
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,b06f2f4f-33a1-431a-8e11-c5cfeae3e157,34))
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b06f2f4f-33a1-431a-8e11-c5cfeae3e157',34,'models.Person')),id -> java.util.UUID('7f81a176-094a-465a-8d1b-dca7174526ed')) with count 36
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,b06f2f4f-33a1-431a-8e11-c5cfeae3e157,34) in Set()
2017-08-17 21:24:11,314 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f29f3d81-9777-4f39-812c-ed928d234e33'))
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f29f3d81-9777-4f39-812c-ed928d234e33')) with count 37
2017-08-17 21:24:11,314 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f29f3d81-9777-4f39-812c-ed928d234e33'))
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f29f3d81-9777-4f39-812c-ed928d234e33')) with count 38
2017-08-17 21:24:11,314 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f29f3d81-9777-4f39-812c-ed928d234e33',37,'models.Person')),id -> java.util.UUID('7af639b3-2392-47b2-aaf5-e5968f801bfe'))
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f29f3d81-9777-4f39-812c-ed928d234e33',37,'models.Person')),id -> java.util.UUID('7af639b3-2392-47b2-aaf5-e5968f801bfe')) with count 39
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,f29f3d81-9777-4f39-812c-ed928d234e33,37))
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,f29f3d81-9777-4f39-812c-ed928d234e33,37) in Set()
2017-08-17 21:24:11,314 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f8ebe766-fd83-4512-ba22-2ea7068f542b'))
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,314 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f8ebe766-fd83-4512-ba22-2ea7068f542b')) with count 40
2017-08-17 21:24:11,314 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f8ebe766-fd83-4512-ba22-2ea7068f542b'))
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f8ebe766-fd83-4512-ba22-2ea7068f542b')) with count 41
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,324 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f8ebe766-fd83-4512-ba22-2ea7068f542b',40,'models.Person')),id -> java.util.UUID('318fc505-6b32-4650-bc46-2a108fc3d8dc'))
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f8ebe766-fd83-4512-ba22-2ea7068f542b',40,'models.Person')),id -> java.util.UUID('318fc505-6b32-4650-bc46-2a108fc3d8dc')) with count 42
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,f8ebe766-fd83-4512-ba22-2ea7068f542b,40))
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,f8ebe766-fd83-4512-ba22-2ea7068f542b,40) in Set()
2017-08-17 21:24:11,324 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e3fd7d3b-413b-4f2a-bc85-80344e3d8e09'))
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e3fd7d3b-413b-4f2a-bc85-80344e3d8e09')) with count 43
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:24:11,324 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e3fd7d3b-413b-4f2a-bc85-80344e3d8e09'))
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e3fd7d3b-413b-4f2a-bc85-80344e3d8e09')) with count 44
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:24:11,324 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e3fd7d3b-413b-4f2a-bc85-80344e3d8e09',43,'models.Person')),id -> java.util.UUID('aa963e6b-c6c2-40fd-ac8e-4bd6351b807e'))
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e3fd7d3b-413b-4f2a-bc85-80344e3d8e09',43,'models.Person')),id -> java.util.UUID('aa963e6b-c6c2-40fd-ac8e-4bd6351b807e')) with count 45
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,e3fd7d3b-413b-4f2a-bc85-80344e3d8e09,43))
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,e3fd7d3b-413b-4f2a-bc85-80344e3d8e09,43) in Set()
2017-08-17 21:24:11,324 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0f71b504-900e-4752-96f9-3971a7eca24f'))
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0f71b504-900e-4752-96f9-3971a7eca24f')) with count 46
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,324 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0f71b504-900e-4752-96f9-3971a7eca24f'))
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0f71b504-900e-4752-96f9-3971a7eca24f')) with count 47
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,324 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('0f71b504-900e-4752-96f9-3971a7eca24f',46,'models.Person')),id -> java.util.UUID('81484b3d-ecb0-4488-8c3c-6ba3aaa4aeec'))
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('0f71b504-900e-4752-96f9-3971a7eca24f',46,'models.Person')),id -> java.util.UUID('81484b3d-ecb0-4488-8c3c-6ba3aaa4aeec')) with count 48
2017-08-17 21:24:11,324 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,0f71b504-900e-4752-96f9-3971a7eca24f,46))
2017-08-17 21:24:11,324 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e0a090cc-c713-4a01-982f-36622e7ce6b4'))
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,0f71b504-900e-4752-96f9-3971a7eca24f,46) in Set()
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e0a090cc-c713-4a01-982f-36622e7ce6b4')) with count 49
2017-08-17 21:24:11,334 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e0a090cc-c713-4a01-982f-36622e7ce6b4'))
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e0a090cc-c713-4a01-982f-36622e7ce6b4')) with count 50
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set()
2017-08-17 21:24:11,334 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e0a090cc-c713-4a01-982f-36622e7ce6b4',49,'models.Person')),id -> java.util.UUID('7ce0d5bf-66f9-425c-a084-311bd08881a3'))
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,e0a090cc-c713-4a01-982f-36622e7ce6b4,49))
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,e0a090cc-c713-4a01-982f-36622e7ce6b4,49) in Set()
2017-08-17 21:24:11,334 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('afa51849-e96e-44b3-b9bd-3d25565036d9'))
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('afa51849-e96e-44b3-b9bd-3d25565036d9')) with count 52
2017-08-17 21:24:11,334 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('afa51849-e96e-44b3-b9bd-3d25565036d9'))
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set()
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e0a090cc-c713-4a01-982f-36622e7ce6b4',49,'models.Person')),id -> java.util.UUID('7ce0d5bf-66f9-425c-a084-311bd08881a3')) with count 51
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('afa51849-e96e-44b3-b9bd-3d25565036d9')) with count 53
2017-08-17 21:24:11,334 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('afa51849-e96e-44b3-b9bd-3d25565036d9',52,'models.Person')),id -> java.util.UUID('7bea006b-67f6-4c85-a489-3da78d5e7bfe'))
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('afa51849-e96e-44b3-b9bd-3d25565036d9',52,'models.Person')),id -> java.util.UUID('7bea006b-67f6-4c85-a489-3da78d5e7bfe')) with count 54
2017-08-17 21:24:11,334 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('78899db1-fc4d-420b-a9c8-380c6978e358'))
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,afa51849-e96e-44b3-b9bd-3d25565036d9,52))
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,afa51849-e96e-44b3-b9bd-3d25565036d9,52) in Set()
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('78899db1-fc4d-420b-a9c8-380c6978e358')) with count 55
2017-08-17 21:24:11,334 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('78899db1-fc4d-420b-a9c8-380c6978e358'))
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set()
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('78899db1-fc4d-420b-a9c8-380c6978e358')) with count 56
2017-08-17 21:24:11,334 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('78899db1-fc4d-420b-a9c8-380c6978e358',55,'models.Person')),id -> java.util.UUID('17a83b15-d144-48f7-903d-9cd7301b114d'))
2017-08-17 21:24:11,334 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('afa51849-e96e-44b3-b9bd-3d25565036d9')) with count 53
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('78899db1-fc4d-420b-a9c8-380c6978e358',55,'models.Person')),id -> java.util.UUID('17a83b15-d144-48f7-903d-9cd7301b114d')) with count 57
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('afa51849-e96e-44b3-b9bd-3d25565036d9')) with count 53
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,78899db1-fc4d-420b-a9c8-380c6978e358,55))
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-1] Referee[Person] - included reference Reference(class models.Person,78899db1-fc4d-420b-a9c8-380c6978e358,55) in Set()
2017-08-17 21:24:11,344 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('75d73b65-dc26-4b7f-a5d0-03d86cffe81c'))
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('78899db1-fc4d-420b-a9c8-380c6978e358',55,'models.Person')),id -> java.util.UUID('17a83b15-d144-48f7-903d-9cd7301b114d')) with count 57
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('75d73b65-dc26-4b7f-a5d0-03d86cffe81c')) with count 58
2017-08-17 21:24:11,344 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('75d73b65-dc26-4b7f-a5d0-03d86cffe81c'))
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('75d73b65-dc26-4b7f-a5d0-03d86cffe81c')) with count 59
2017-08-17 21:24:11,344 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('75d73b65-dc26-4b7f-a5d0-03d86cffe81c',58,'models.Person')),id -> java.util.UUID('0bbb836c-efe0-4d42-bf9f-353d689d4704'))
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('75d73b65-dc26-4b7f-a5d0-03d86cffe81c',58,'models.Person')),id -> java.util.UUID('0bbb836c-efe0-4d42-bf9f-353d689d4704')) with count 60
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,75d73b65-dc26-4b7f-a5d0-03d86cffe81c,58))
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,75d73b65-dc26-4b7f-a5d0-03d86cffe81c,58) in Set()
2017-08-17 21:24:11,344 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5fc3e475-7688-43a9-9f52-d4ed173b3380'))
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5fc3e475-7688-43a9-9f52-d4ed173b3380')) with count 61
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:24:11,344 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5fc3e475-7688-43a9-9f52-d4ed173b3380'))
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5fc3e475-7688-43a9-9f52-d4ed173b3380')) with count 62
2017-08-17 21:24:11,344 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5fc3e475-7688-43a9-9f52-d4ed173b3380',61,'models.Person')),id -> java.util.UUID('b20c540c-bccd-4722-a3d2-422816a6ed76'))
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,5fc3e475-7688-43a9-9f52-d4ed173b3380,61))
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5fc3e475-7688-43a9-9f52-d4ed173b3380',61,'models.Person')),id -> java.util.UUID('b20c540c-bccd-4722-a3d2-422816a6ed76')) with count 63
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,5fc3e475-7688-43a9-9f52-d4ed173b3380,61) in Set()
2017-08-17 21:24:11,344 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('979a2c38-9345-4834-837f-38b00793d398'))
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('979a2c38-9345-4834-837f-38b00793d398')) with count 64
2017-08-17 21:24:11,344 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:24:11,344 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('979a2c38-9345-4834-837f-38b00793d398'))
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set()
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('979a2c38-9345-4834-837f-38b00793d398')) with count 65
2017-08-17 21:24:11,354 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('979a2c38-9345-4834-837f-38b00793d398',64,'models.Person')),id -> java.util.UUID('f9c0d95a-3339-4c17-b6ba-aa92119f001f'))
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('979a2c38-9345-4834-837f-38b00793d398',64,'models.Person')),id -> java.util.UUID('f9c0d95a-3339-4c17-b6ba-aa92119f001f')) with count 66
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,979a2c38-9345-4834-837f-38b00793d398,64))
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-1] Referee[Person] - included reference Reference(class models.Person,979a2c38-9345-4834-837f-38b00793d398,64) in Set()
2017-08-17 21:24:11,354 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('057f9e7e-5874-4925-ba8e-cef8ddd66ac0'))
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('057f9e7e-5874-4925-ba8e-cef8ddd66ac0')) with count 67
2017-08-17 21:24:11,354 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('057f9e7e-5874-4925-ba8e-cef8ddd66ac0'))
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('057f9e7e-5874-4925-ba8e-cef8ddd66ac0')) with count 68
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:24:11,354 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('057f9e7e-5874-4925-ba8e-cef8ddd66ac0',67,'models.Person')),id -> java.util.UUID('7c7522af-1587-4541-bf8f-b2f78c51539e'))
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,057f9e7e-5874-4925-ba8e-cef8ddd66ac0,67))
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('057f9e7e-5874-4925-ba8e-cef8ddd66ac0',67,'models.Person')),id -> java.util.UUID('7c7522af-1587-4541-bf8f-b2f78c51539e')) with count 69
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-1] Referee[Person] - included reference Reference(class models.Person,057f9e7e-5874-4925-ba8e-cef8ddd66ac0,67) in Set()
2017-08-17 21:24:11,354 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('30a53481-038f-484b-8b9d-c499c0e33493'))
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('30a53481-038f-484b-8b9d-c499c0e33493')) with count 70
2017-08-17 21:24:11,354 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('30a53481-038f-484b-8b9d-c499c0e33493'))
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('30a53481-038f-484b-8b9d-c499c0e33493')) with count 71
2017-08-17 21:24:11,354 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('30a53481-038f-484b-8b9d-c499c0e33493',70,'models.Person')),id -> java.util.UUID('cb56fa58-215e-448b-9bb3-d36eb78f5257'))
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,30a53481-038f-484b-8b9d-c499c0e33493,70))
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('30a53481-038f-484b-8b9d-c499c0e33493',70,'models.Person')),id -> java.util.UUID('cb56fa58-215e-448b-9bb3-d36eb78f5257')) with count 72
2017-08-17 21:24:11,354 TRACE [ForkJoinPool-1-worker-1] Referee[Person] - included reference Reference(class models.Person,30a53481-038f-484b-8b9d-c499c0e33493,70) in Set()
2017-08-17 21:24:11,354 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('93e2748d-aa3f-4dec-8208-507ae5125fd7'))
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('93e2748d-aa3f-4dec-8208-507ae5125fd7')) with count 73
2017-08-17 21:24:11,364 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('93e2748d-aa3f-4dec-8208-507ae5125fd7'))
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('93e2748d-aa3f-4dec-8208-507ae5125fd7')) with count 74
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:24:11,364 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('93e2748d-aa3f-4dec-8208-507ae5125fd7',73,'models.Person')),id -> java.util.UUID('300b3cc9-9dba-4377-b8ea-0c188e073b56'))
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('93e2748d-aa3f-4dec-8208-507ae5125fd7',73,'models.Person')),id -> java.util.UUID('300b3cc9-9dba-4377-b8ea-0c188e073b56')) with count 75
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,93e2748d-aa3f-4dec-8208-507ae5125fd7,73))
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-15] Referee[Person] - included reference Reference(class models.Person,93e2748d-aa3f-4dec-8208-507ae5125fd7,73) in Set()
2017-08-17 21:24:11,364 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('67113ec1-09dc-4f71-841f-ce9ab605714c'))
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('67113ec1-09dc-4f71-841f-ce9ab605714c')) with count 76
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:24:11,364 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('67113ec1-09dc-4f71-841f-ce9ab605714c'))
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('67113ec1-09dc-4f71-841f-ce9ab605714c')) with count 77
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:24:11,364 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('67113ec1-09dc-4f71-841f-ce9ab605714c',76,'models.Person')),id -> java.util.UUID('fef4ad38-5aa3-48e3-9864-ae21adb47184'))
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('67113ec1-09dc-4f71-841f-ce9ab605714c',76,'models.Person')),id -> java.util.UUID('fef4ad38-5aa3-48e3-9864-ae21adb47184')) with count 78
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set(Reference(class models.Person,67113ec1-09dc-4f71-841f-ce9ab605714c,76))
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-15] Referee[Person] - included reference Reference(class models.Person,67113ec1-09dc-4f71-841f-ce9ab605714c,76) in Set()
2017-08-17 21:24:11,364 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7549a942-46a4-43e2-a45d-065426936c23'))
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7549a942-46a4-43e2-a45d-065426936c23')) with count 79
2017-08-17 21:24:11,364 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7549a942-46a4-43e2-a45d-065426936c23'))
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7549a942-46a4-43e2-a45d-065426936c23')) with count 80
2017-08-17 21:24:11,364 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:24:11,364 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7549a942-46a4-43e2-a45d-065426936c23',79,'models.Person')),id -> java.util.UUID('c7553466-7f7d-4c06-a164-c9ec0b5518b0'))
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,7549a942-46a4-43e2-a45d-065426936c23,79))
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7549a942-46a4-43e2-a45d-065426936c23',79,'models.Person')),id -> java.util.UUID('c7553466-7f7d-4c06-a164-c9ec0b5518b0')) with count 81
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-1] Referee[Person] - included reference Reference(class models.Person,7549a942-46a4-43e2-a45d-065426936c23,79) in Set()
2017-08-17 21:24:11,374 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('96dcd811-3a6a-4693-a1a5-0fe0dd7676f5'))
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set()
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-1] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('96dcd811-3a6a-4693-a1a5-0fe0dd7676f5')) with count 82
2017-08-17 21:24:11,374 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('96dcd811-3a6a-4693-a1a5-0fe0dd7676f5'))
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('96dcd811-3a6a-4693-a1a5-0fe0dd7676f5')) with count 83
2017-08-17 21:24:11,374 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('96dcd811-3a6a-4693-a1a5-0fe0dd7676f5',82,'models.Person')),id -> java.util.UUID('b21eb6bc-d116-4f61-9233-820224f018b2'))
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,96dcd811-3a6a-4693-a1a5-0fe0dd7676f5,82))
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('96dcd811-3a6a-4693-a1a5-0fe0dd7676f5',82,'models.Person')),id -> java.util.UUID('b21eb6bc-d116-4f61-9233-820224f018b2')) with count 84
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,96dcd811-3a6a-4693-a1a5-0fe0dd7676f5,82) in Set()
2017-08-17 21:24:11,374 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3ad68f03-30dd-434e-a51e-ca8653e3f171'))
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-15] Person$[Person] - including Set()
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3ad68f03-30dd-434e-a51e-ca8653e3f171')) with count 85
2017-08-17 21:24:11,374 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3ad68f03-30dd-434e-a51e-ca8653e3f171'))
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3ad68f03-30dd-434e-a51e-ca8653e3f171')) with count 86
2017-08-17 21:24:11,374 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3ad68f03-30dd-434e-a51e-ca8653e3f171',85,'models.Person')),id -> java.util.UUID('6d5182c3-3133-45b9-9efa-dd2f9186f5c6'))
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3ad68f03-30dd-434e-a51e-ca8653e3f171',85,'models.Person')),id -> java.util.UUID('6d5182c3-3133-45b9-9efa-dd2f9186f5c6')) with count 87
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set(Reference(class models.Person,3ad68f03-30dd-434e-a51e-ca8653e3f171,85))
2017-08-17 21:24:11,374 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('450b3087-ec20-4a86-aed3-cda41762ceb7'))
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-1] Referee[Person] - included reference Reference(class models.Person,3ad68f03-30dd-434e-a51e-ca8653e3f171,85) in Set()
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-1] Person$[Person] - including Set()
2017-08-17 21:24:11,374 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('450b3087-ec20-4a86-aed3-cda41762ceb7'))
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('450b3087-ec20-4a86-aed3-cda41762ceb7')) with count 88
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('450b3087-ec20-4a86-aed3-cda41762ceb7')) with count 89
2017-08-17 21:24:11,374 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('450b3087-ec20-4a86-aed3-cda41762ceb7',88,'models.Person')),id -> java.util.UUID('0a4b2566-68f4-4216-9a60-4247d9301db4'))
2017-08-17 21:24:11,374 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set()
2017-08-17 21:24:11,384 TRACE [ForkJoinPool-1-worker-3] Person$[Person] - including Set(Reference(class models.Person,450b3087-ec20-4a86-aed3-cda41762ceb7,88))
2017-08-17 21:24:11,384 TRACE [ForkJoinPool-1-worker-15] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('450b3087-ec20-4a86-aed3-cda41762ceb7',88,'models.Person')),id -> java.util.UUID('0a4b2566-68f4-4216-9a60-4247d9301db4')) with count 90
2017-08-17 21:24:11,384 TRACE [ForkJoinPool-1-worker-3] Referee[Person] - included reference Reference(class models.Person,450b3087-ec20-4a86-aed3-cda41762ceb7,88) in Set()
2017-08-17 21:24:12,384 INFO  [main] Counter[Person] - counter is 90
2017-08-17 21:24:12,384 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(8a4d6b13-9f96-4e75-b49d-a3cb36eeb3d0,Map(24 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('9b2ec69e-0373-4c7c-97a2-576ea1e7045f',22,'models.Person')),id -> java.util.UUID('8a4d6b13-9f96-4e75-b49d-a3cb36eeb3d0'))))
	(9d1a5514-9c22-4df5-884f-1a35d12da333,Map(3 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b9fefb7b-81f7-466a-b605-b395c22ee599',1,'models.Person')),id -> java.util.UUID('9d1a5514-9c22-4df5-884f-1a35d12da333'))))
	(7c7522af-1587-4541-bf8f-b2f78c51539e,Map(69 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('057f9e7e-5874-4925-ba8e-cef8ddd66ac0',67,'models.Person')),id -> java.util.UUID('7c7522af-1587-4541-bf8f-b2f78c51539e'))))
	(70367dbc-386b-4e08-8d7a-7441768bc2e6,Map(18 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3cfe995e-af64-48a9-aeb4-d7387a0ad445',16,'models.Person')),id -> java.util.UUID('70367dbc-386b-4e08-8d7a-7441768bc2e6'))))
	(c45d793c-4ddf-4cdf-b3ad-efbdfff62fd0,Map(30 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5cf4463b-f6ea-4e65-97ae-716aa2bcc557',28,'models.Person')),id -> java.util.UUID('c45d793c-4ddf-4cdf-b3ad-efbdfff62fd0'))))
	(b21eb6bc-d116-4f61-9233-820224f018b2,Map(84 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('96dcd811-3a6a-4693-a1a5-0fe0dd7676f5',82,'models.Person')),id -> java.util.UUID('b21eb6bc-d116-4f61-9233-820224f018b2'))))
	(2972af6f-7833-4945-b45b-07a2d8f771c9,Map(25 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2972af6f-7833-4945-b45b-07a2d8f771c9')), 26 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2972af6f-7833-4945-b45b-07a2d8f771c9'))))
	(b9fefb7b-81f7-466a-b605-b395c22ee599,Map(2 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b9fefb7b-81f7-466a-b605-b395c22ee599')), 1 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b9fefb7b-81f7-466a-b605-b395c22ee599'))))
	(67113ec1-09dc-4f71-841f-ce9ab605714c,Map(76 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('67113ec1-09dc-4f71-841f-ce9ab605714c')), 77 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('67113ec1-09dc-4f71-841f-ce9ab605714c'))))
	(0d16fb93-868d-4337-b28b-f19a66a0ea51,Map(9 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e6e58dca-9778-4790-b206-19b6f758901e',7,'models.Person')),id -> java.util.UUID('0d16fb93-868d-4337-b28b-f19a66a0ea51'))))
	(aa2c45d3-561e-490c-a98d-1d4c919f583c,Map(15 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1a282f68-f8d4-41d7-af26-837650a546b7',13,'models.Person')),id -> java.util.UUID('aa2c45d3-561e-490c-a98d-1d4c919f583c'))))
	(7f81a176-094a-465a-8d1b-dca7174526ed,Map(36 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b06f2f4f-33a1-431a-8e11-c5cfeae3e157',34,'models.Person')),id -> java.util.UUID('7f81a176-094a-465a-8d1b-dca7174526ed'))))
	(0a4b2566-68f4-4216-9a60-4247d9301db4,Map(90 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('450b3087-ec20-4a86-aed3-cda41762ceb7',88,'models.Person')),id -> java.util.UUID('0a4b2566-68f4-4216-9a60-4247d9301db4'))))
	(e6e58dca-9778-4790-b206-19b6f758901e,Map(7 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e6e58dca-9778-4790-b206-19b6f758901e')), 8 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e6e58dca-9778-4790-b206-19b6f758901e'))))
	(6d5182c3-3133-45b9-9efa-dd2f9186f5c6,Map(87 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3ad68f03-30dd-434e-a51e-ca8653e3f171',85,'models.Person')),id -> java.util.UUID('6d5182c3-3133-45b9-9efa-dd2f9186f5c6'))))
	(f29f3d81-9777-4f39-812c-ed928d234e33,Map(37 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f29f3d81-9777-4f39-812c-ed928d234e33')), 38 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f29f3d81-9777-4f39-812c-ed928d234e33'))))
	(318fc505-6b32-4650-bc46-2a108fc3d8dc,Map(42 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f8ebe766-fd83-4512-ba22-2ea7068f542b',40,'models.Person')),id -> java.util.UUID('318fc505-6b32-4650-bc46-2a108fc3d8dc'))))
	(afa51849-e96e-44b3-b9bd-3d25565036d9,Map(52 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('afa51849-e96e-44b3-b9bd-3d25565036d9')), 53 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('afa51849-e96e-44b3-b9bd-3d25565036d9'))))
	(3ad68f03-30dd-434e-a51e-ca8653e3f171,Map(85 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3ad68f03-30dd-434e-a51e-ca8653e3f171')), 86 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3ad68f03-30dd-434e-a51e-ca8653e3f171'))))
	(7ce0d5bf-66f9-425c-a084-311bd08881a3,Map(51 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e0a090cc-c713-4a01-982f-36622e7ce6b4',49,'models.Person')),id -> java.util.UUID('7ce0d5bf-66f9-425c-a084-311bd08881a3'))))
	(aa963e6b-c6c2-40fd-ac8e-4bd6351b807e,Map(45 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('e3fd7d3b-413b-4f2a-bc85-80344e3d8e09',43,'models.Person')),id -> java.util.UUID('aa963e6b-c6c2-40fd-ac8e-4bd6351b807e'))))
	(7b375e21-fdc4-4c87-b172-2902c79a40fc,Map(6 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f029f144-8767-4765-b125-afb94a46f21b',4,'models.Person')),id -> java.util.UUID('7b375e21-fdc4-4c87-b172-2902c79a40fc'))))
	(75d73b65-dc26-4b7f-a5d0-03d86cffe81c,Map(58 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('75d73b65-dc26-4b7f-a5d0-03d86cffe81c')), 59 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('75d73b65-dc26-4b7f-a5d0-03d86cffe81c'))))
	(f029f144-8767-4765-b125-afb94a46f21b,Map(4 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f029f144-8767-4765-b125-afb94a46f21b')), 5 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f029f144-8767-4765-b125-afb94a46f21b'))))
	(5fc3e475-7688-43a9-9f52-d4ed173b3380,Map(61 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5fc3e475-7688-43a9-9f52-d4ed173b3380')), 62 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5fc3e475-7688-43a9-9f52-d4ed173b3380'))))
	(2ab57687-65b5-4ca7-9ad6-581170f207b6,Map(12 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('53a98de9-07e3-4ac1-beea-ce719591fe19',10,'models.Person')),id -> java.util.UUID('2ab57687-65b5-4ca7-9ad6-581170f207b6'))))
	(cb56fa58-215e-448b-9bb3-d36eb78f5257,Map(72 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('30a53481-038f-484b-8b9d-c499c0e33493',70,'models.Person')),id -> java.util.UUID('cb56fa58-215e-448b-9bb3-d36eb78f5257'))))
	(93e2748d-aa3f-4dec-8208-507ae5125fd7,Map(73 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('93e2748d-aa3f-4dec-8208-507ae5125fd7')), 74 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('93e2748d-aa3f-4dec-8208-507ae5125fd7'))))
	(e0a090cc-c713-4a01-982f-36622e7ce6b4,Map(49 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e0a090cc-c713-4a01-982f-36622e7ce6b4')), 50 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e0a090cc-c713-4a01-982f-36622e7ce6b4'))))
	(95c782d5-8a39-4313-9dc2-18003a1cc7df,Map(19 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('95c782d5-8a39-4313-9dc2-18003a1cc7df')), 20 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('95c782d5-8a39-4313-9dc2-18003a1cc7df'))))
	(8eae1268-8948-4196-8fc7-3ae8915ef2a9,Map(21 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('95c782d5-8a39-4313-9dc2-18003a1cc7df',19,'models.Person')),id -> java.util.UUID('8eae1268-8948-4196-8fc7-3ae8915ef2a9'))))
	(53a98de9-07e3-4ac1-beea-ce719591fe19,Map(10 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('53a98de9-07e3-4ac1-beea-ce719591fe19')), 11 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('53a98de9-07e3-4ac1-beea-ce719591fe19'))))
	(30a53481-038f-484b-8b9d-c499c0e33493,Map(70 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('30a53481-038f-484b-8b9d-c499c0e33493')), 71 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('30a53481-038f-484b-8b9d-c499c0e33493'))))
	(fef4ad38-5aa3-48e3-9864-ae21adb47184,Map(78 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('67113ec1-09dc-4f71-841f-ce9ab605714c',76,'models.Person')),id -> java.util.UUID('fef4ad38-5aa3-48e3-9864-ae21adb47184'))))
	(9b2ec69e-0373-4c7c-97a2-576ea1e7045f,Map(22 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('9b2ec69e-0373-4c7c-97a2-576ea1e7045f')), 23 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('9b2ec69e-0373-4c7c-97a2-576ea1e7045f'))))
	(c7553466-7f7d-4c06-a164-c9ec0b5518b0,Map(81 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7549a942-46a4-43e2-a45d-065426936c23',79,'models.Person')),id -> java.util.UUID('c7553466-7f7d-4c06-a164-c9ec0b5518b0'))))
	(7bea006b-67f6-4c85-a489-3da78d5e7bfe,Map(54 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('afa51849-e96e-44b3-b9bd-3d25565036d9',52,'models.Person')),id -> java.util.UUID('7bea006b-67f6-4c85-a489-3da78d5e7bfe'))))
	(78899db1-fc4d-420b-a9c8-380c6978e358,Map(55 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('78899db1-fc4d-420b-a9c8-380c6978e358')), 56 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('78899db1-fc4d-420b-a9c8-380c6978e358'))))
	(300b3cc9-9dba-4377-b8ea-0c188e073b56,Map(75 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('93e2748d-aa3f-4dec-8208-507ae5125fd7',73,'models.Person')),id -> java.util.UUID('300b3cc9-9dba-4377-b8ea-0c188e073b56'))))
	(5cf4463b-f6ea-4e65-97ae-716aa2bcc557,Map(28 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5cf4463b-f6ea-4e65-97ae-716aa2bcc557')), 29 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5cf4463b-f6ea-4e65-97ae-716aa2bcc557'))))
	(3cfe995e-af64-48a9-aeb4-d7387a0ad445,Map(16 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3cfe995e-af64-48a9-aeb4-d7387a0ad445')), 17 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3cfe995e-af64-48a9-aeb4-d7387a0ad445'))))
	(17a83b15-d144-48f7-903d-9cd7301b114d,Map(57 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('78899db1-fc4d-420b-a9c8-380c6978e358',55,'models.Person')),id -> java.util.UUID('17a83b15-d144-48f7-903d-9cd7301b114d'))))
	(979a2c38-9345-4834-837f-38b00793d398,Map(64 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('979a2c38-9345-4834-837f-38b00793d398')), 65 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('979a2c38-9345-4834-837f-38b00793d398'))))
	(0f71b504-900e-4752-96f9-3971a7eca24f,Map(46 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('0f71b504-900e-4752-96f9-3971a7eca24f')), 47 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('0f71b504-900e-4752-96f9-3971a7eca24f'))))
	(f8ebe766-fd83-4512-ba22-2ea7068f542b,Map(40 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('f8ebe766-fd83-4512-ba22-2ea7068f542b')), 41 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('f8ebe766-fd83-4512-ba22-2ea7068f542b'))))
	(7549a942-46a4-43e2-a45d-065426936c23,Map(79 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7549a942-46a4-43e2-a45d-065426936c23')), 80 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7549a942-46a4-43e2-a45d-065426936c23'))))
	(96dcd811-3a6a-4693-a1a5-0fe0dd7676f5,Map(82 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('96dcd811-3a6a-4693-a1a5-0fe0dd7676f5')), 83 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('96dcd811-3a6a-4693-a1a5-0fe0dd7676f5'))))
	(346dadec-5a3f-4644-a5c7-7644c856cdfd,Map(31 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('346dadec-5a3f-4644-a5c7-7644c856cdfd')), 32 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('346dadec-5a3f-4644-a5c7-7644c856cdfd'))))
	(56fec5bd-cf03-4907-bd1a-9510efd33032,Map(27 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2972af6f-7833-4945-b45b-07a2d8f771c9',25,'models.Person')),id -> java.util.UUID('56fec5bd-cf03-4907-bd1a-9510efd33032'))))
	(81484b3d-ecb0-4488-8c3c-6ba3aaa4aeec,Map(48 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('0f71b504-900e-4752-96f9-3971a7eca24f',46,'models.Person')),id -> java.util.UUID('81484b3d-ecb0-4488-8c3c-6ba3aaa4aeec'))))
	(f9c0d95a-3339-4c17-b6ba-aa92119f001f,Map(66 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('979a2c38-9345-4834-837f-38b00793d398',64,'models.Person')),id -> java.util.UUID('f9c0d95a-3339-4c17-b6ba-aa92119f001f'))))
	(b06f2f4f-33a1-431a-8e11-c5cfeae3e157,Map(34 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b06f2f4f-33a1-431a-8e11-c5cfeae3e157')), 35 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b06f2f4f-33a1-431a-8e11-c5cfeae3e157'))))
	(1a282f68-f8d4-41d7-af26-837650a546b7,Map(13 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1a282f68-f8d4-41d7-af26-837650a546b7')), 14 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1a282f68-f8d4-41d7-af26-837650a546b7'))))
	(7af639b3-2392-47b2-aaf5-e5968f801bfe,Map(39 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('f29f3d81-9777-4f39-812c-ed928d234e33',37,'models.Person')),id -> java.util.UUID('7af639b3-2392-47b2-aaf5-e5968f801bfe'))))
	(0bbb836c-efe0-4d42-bf9f-353d689d4704,Map(60 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('75d73b65-dc26-4b7f-a5d0-03d86cffe81c',58,'models.Person')),id -> java.util.UUID('0bbb836c-efe0-4d42-bf9f-353d689d4704'))))
	(e3fd7d3b-413b-4f2a-bc85-80344e3d8e09,Map(43 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('e3fd7d3b-413b-4f2a-bc85-80344e3d8e09')), 44 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('e3fd7d3b-413b-4f2a-bc85-80344e3d8e09'))))
	(b20c540c-bccd-4722-a3d2-422816a6ed76,Map(63 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5fc3e475-7688-43a9-9f52-d4ed173b3380',61,'models.Person')),id -> java.util.UUID('b20c540c-bccd-4722-a3d2-422816a6ed76'))))
	(62f0fd4a-3c11-45fe-b6a7-e63e006e8b80,Map(33 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('346dadec-5a3f-4644-a5c7-7644c856cdfd',31,'models.Person')),id -> java.util.UUID('62f0fd4a-3c11-45fe-b6a7-e63e006e8b80'))))
	(057f9e7e-5874-4925-ba8e-cef8ddd66ac0,Map(67 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('057f9e7e-5874-4925-ba8e-cef8ddd66ac0')), 68 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('057f9e7e-5874-4925-ba8e-cef8ddd66ac0'))))
	(450b3087-ec20-4a86-aed3-cda41762ceb7,Map(88 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('450b3087-ec20-4a86-aed3-cda41762ceb7')), 89 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('450b3087-ec20-4a86-aed3-cda41762ceb7'))))

2017-08-17 21:29:05,424 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cc3a9331-8e7c-4481-9110-349eb81b70d2'))
2017-08-17 21:29:05,454 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cc3a9331-8e7c-4481-9110-349eb81b70d2')) with count 1
2017-08-17 21:29:05,464 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cc3a9331-8e7c-4481-9110-349eb81b70d2'))
2017-08-17 21:29:05,464 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cc3a9331-8e7c-4481-9110-349eb81b70d2')) with count 2
2017-08-17 21:29:05,464 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('cc3a9331-8e7c-4481-9110-349eb81b70d2',1,'models.Person')),id -> java.util.UUID('3cd14ac2-94f8-4e33-8ff7-2d6aab9d984c'))
2017-08-17 21:29:05,464 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('cc3a9331-8e7c-4481-9110-349eb81b70d2',1,'models.Person')),id -> java.util.UUID('3cd14ac2-94f8-4e33-8ff7-2d6aab9d984c')) with count 3
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,cc3a9331-8e7c-4481-9110-349eb81b70d2,1))
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,cc3a9331-8e7c-4481-9110-349eb81b70d2,1) in Set()
2017-08-17 21:29:05,474 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bc36712c-5ba0-4572-8c21-8182556d30a7'))
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bc36712c-5ba0-4572-8c21-8182556d30a7')) with count 4
2017-08-17 21:29:05,474 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bc36712c-5ba0-4572-8c21-8182556d30a7'))
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bc36712c-5ba0-4572-8c21-8182556d30a7')) with count 5
2017-08-17 21:29:05,474 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('bc36712c-5ba0-4572-8c21-8182556d30a7',4,'models.Person')),id -> java.util.UUID('d9769892-c22a-4ab3-9ca9-d726eb5c2b74'))
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('bc36712c-5ba0-4572-8c21-8182556d30a7',4,'models.Person')),id -> java.util.UUID('d9769892-c22a-4ab3-9ca9-d726eb5c2b74')) with count 6
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,bc36712c-5ba0-4572-8c21-8182556d30a7,4))
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,bc36712c-5ba0-4572-8c21-8182556d30a7,4) in Set()
2017-08-17 21:29:05,474 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5ffbecda-87f0-454c-bec0-0bec7b3a2cb7'))
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5ffbecda-87f0-454c-bec0-0bec7b3a2cb7')) with count 7
2017-08-17 21:29:05,474 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5ffbecda-87f0-454c-bec0-0bec7b3a2cb7'))
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5ffbecda-87f0-454c-bec0-0bec7b3a2cb7')) with count 8
2017-08-17 21:29:05,474 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5ffbecda-87f0-454c-bec0-0bec7b3a2cb7',7,'models.Person')),id -> java.util.UUID('425f4b6d-79f6-4726-819b-2f956c1c89a0'))
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,5ffbecda-87f0-454c-bec0-0bec7b3a2cb7,7))
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5ffbecda-87f0-454c-bec0-0bec7b3a2cb7',7,'models.Person')),id -> java.util.UUID('425f4b6d-79f6-4726-819b-2f956c1c89a0')) with count 9
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,5ffbecda-87f0-454c-bec0-0bec7b3a2cb7,7) in Set()
2017-08-17 21:29:05,474 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('61aaf553-aa79-4947-99ee-fc1d2a91da26'))
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('61aaf553-aa79-4947-99ee-fc1d2a91da26')) with count 10
2017-08-17 21:29:05,474 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('61aaf553-aa79-4947-99ee-fc1d2a91da26'))
2017-08-17 21:29:05,474 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('61aaf553-aa79-4947-99ee-fc1d2a91da26')) with count 11
2017-08-17 21:29:05,474 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('61aaf553-aa79-4947-99ee-fc1d2a91da26',10,'models.Person')),id -> java.util.UUID('2a5cb821-d0e4-4af2-89f9-e72ab4ac9b49'))
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,61aaf553-aa79-4947-99ee-fc1d2a91da26,10))
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('61aaf553-aa79-4947-99ee-fc1d2a91da26',10,'models.Person')),id -> java.util.UUID('2a5cb821-d0e4-4af2-89f9-e72ab4ac9b49')) with count 12
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,61aaf553-aa79-4947-99ee-fc1d2a91da26,10) in Set()
2017-08-17 21:29:05,484 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4284fbdb-01d9-4dc4-8bb6-d0d513c10f1b'))
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4284fbdb-01d9-4dc4-8bb6-d0d513c10f1b')) with count 13
2017-08-17 21:29:05,484 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4284fbdb-01d9-4dc4-8bb6-d0d513c10f1b'))
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4284fbdb-01d9-4dc4-8bb6-d0d513c10f1b')) with count 14
2017-08-17 21:29:05,484 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4284fbdb-01d9-4dc4-8bb6-d0d513c10f1b',13,'models.Person')),id -> java.util.UUID('485f9ce4-2207-4568-ac23-60984e317b7e'))
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,4284fbdb-01d9-4dc4-8bb6-d0d513c10f1b,13))
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4284fbdb-01d9-4dc4-8bb6-d0d513c10f1b',13,'models.Person')),id -> java.util.UUID('485f9ce4-2207-4568-ac23-60984e317b7e')) with count 15
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,4284fbdb-01d9-4dc4-8bb6-d0d513c10f1b,13) in Set()
2017-08-17 21:29:05,484 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c512505c-3893-4db5-85c6-56f2d6f09538'))
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c512505c-3893-4db5-85c6-56f2d6f09538')) with count 16
2017-08-17 21:29:05,484 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c512505c-3893-4db5-85c6-56f2d6f09538'))
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c512505c-3893-4db5-85c6-56f2d6f09538')) with count 17
2017-08-17 21:29:05,484 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c512505c-3893-4db5-85c6-56f2d6f09538',16,'models.Person')),id -> java.util.UUID('7da0ee2e-a4c5-426b-abae-f14ce4e39d98'))
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,c512505c-3893-4db5-85c6-56f2d6f09538,16))
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c512505c-3893-4db5-85c6-56f2d6f09538',16,'models.Person')),id -> java.util.UUID('7da0ee2e-a4c5-426b-abae-f14ce4e39d98')) with count 18
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,c512505c-3893-4db5-85c6-56f2d6f09538,16) in Set()
2017-08-17 21:29:05,484 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b8a1105b-0233-460c-a604-5a8e56a784f2'))
2017-08-17 21:29:05,484 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b8a1105b-0233-460c-a604-5a8e56a784f2')) with count 19
2017-08-17 21:29:05,484 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b8a1105b-0233-460c-a604-5a8e56a784f2'))
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b8a1105b-0233-460c-a604-5a8e56a784f2')) with count 20
2017-08-17 21:29:05,494 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b8a1105b-0233-460c-a604-5a8e56a784f2',19,'models.Person')),id -> java.util.UUID('88f737ad-17e1-42d9-ae55-288db323b9b2'))
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,b8a1105b-0233-460c-a604-5a8e56a784f2,19))
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b8a1105b-0233-460c-a604-5a8e56a784f2',19,'models.Person')),id -> java.util.UUID('88f737ad-17e1-42d9-ae55-288db323b9b2')) with count 21
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,b8a1105b-0233-460c-a604-5a8e56a784f2,19) in Set()
2017-08-17 21:29:05,494 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4b9c7651-5248-49c2-a24e-911ccc1fd10a'))
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4b9c7651-5248-49c2-a24e-911ccc1fd10a')) with count 22
2017-08-17 21:29:05,494 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4b9c7651-5248-49c2-a24e-911ccc1fd10a'))
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4b9c7651-5248-49c2-a24e-911ccc1fd10a')) with count 23
2017-08-17 21:29:05,494 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4b9c7651-5248-49c2-a24e-911ccc1fd10a',22,'models.Person')),id -> java.util.UUID('d9906611-ded4-4a1e-8125-2beef2529612'))
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,4b9c7651-5248-49c2-a24e-911ccc1fd10a,22))
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4b9c7651-5248-49c2-a24e-911ccc1fd10a',22,'models.Person')),id -> java.util.UUID('d9906611-ded4-4a1e-8125-2beef2529612')) with count 24
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,4b9c7651-5248-49c2-a24e-911ccc1fd10a,22) in Set()
2017-08-17 21:29:05,494 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('935b284b-d988-45ea-b549-fc8f0d7fa180'))
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('935b284b-d988-45ea-b549-fc8f0d7fa180')) with count 25
2017-08-17 21:29:05,494 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('935b284b-d988-45ea-b549-fc8f0d7fa180'))
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('935b284b-d988-45ea-b549-fc8f0d7fa180')) with count 26
2017-08-17 21:29:05,494 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('935b284b-d988-45ea-b549-fc8f0d7fa180',25,'models.Person')),id -> java.util.UUID('67d48946-c72d-4ebf-997b-828c56346f45'))
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,935b284b-d988-45ea-b549-fc8f0d7fa180,25))
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('935b284b-d988-45ea-b549-fc8f0d7fa180',25,'models.Person')),id -> java.util.UUID('67d48946-c72d-4ebf-997b-828c56346f45')) with count 27
2017-08-17 21:29:05,494 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,935b284b-d988-45ea-b549-fc8f0d7fa180,25) in Set()
2017-08-17 21:29:05,494 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3f61dbcc-1aca-496a-8f23-f0c4a6c94314'))
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3f61dbcc-1aca-496a-8f23-f0c4a6c94314')) with count 28
2017-08-17 21:29:05,504 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3f61dbcc-1aca-496a-8f23-f0c4a6c94314'))
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3f61dbcc-1aca-496a-8f23-f0c4a6c94314')) with count 29
2017-08-17 21:29:05,504 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3f61dbcc-1aca-496a-8f23-f0c4a6c94314',28,'models.Person')),id -> java.util.UUID('55acb1cc-adeb-4cb1-bcc3-76d21b789909'))
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3f61dbcc-1aca-496a-8f23-f0c4a6c94314',28,'models.Person')),id -> java.util.UUID('55acb1cc-adeb-4cb1-bcc3-76d21b789909')) with count 30
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,3f61dbcc-1aca-496a-8f23-f0c4a6c94314,28))
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,3f61dbcc-1aca-496a-8f23-f0c4a6c94314,28) in Set()
2017-08-17 21:29:05,504 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('89bc5933-fbd9-443a-bdb8-128ab4daa1eb'))
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('89bc5933-fbd9-443a-bdb8-128ab4daa1eb')) with count 31
2017-08-17 21:29:05,504 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('89bc5933-fbd9-443a-bdb8-128ab4daa1eb'))
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('89bc5933-fbd9-443a-bdb8-128ab4daa1eb')) with count 32
2017-08-17 21:29:05,504 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('89bc5933-fbd9-443a-bdb8-128ab4daa1eb',31,'models.Person')),id -> java.util.UUID('128d20ea-ec22-42f9-a108-1d8ffbb994ac'))
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('89bc5933-fbd9-443a-bdb8-128ab4daa1eb',31,'models.Person')),id -> java.util.UUID('128d20ea-ec22-42f9-a108-1d8ffbb994ac')) with count 33
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,89bc5933-fbd9-443a-bdb8-128ab4daa1eb,31))
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,89bc5933-fbd9-443a-bdb8-128ab4daa1eb,31) in Set()
2017-08-17 21:29:05,504 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ba2bfbd0-2429-47d2-aae0-75dec0071428'))
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ba2bfbd0-2429-47d2-aae0-75dec0071428')) with count 34
2017-08-17 21:29:05,504 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ba2bfbd0-2429-47d2-aae0-75dec0071428'))
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ba2bfbd0-2429-47d2-aae0-75dec0071428')) with count 35
2017-08-17 21:29:05,504 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ba2bfbd0-2429-47d2-aae0-75dec0071428',34,'models.Person')),id -> java.util.UUID('013912d5-9004-470a-ab52-f650d1800d87'))
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ba2bfbd0-2429-47d2-aae0-75dec0071428',34,'models.Person')),id -> java.util.UUID('013912d5-9004-470a-ab52-f650d1800d87')) with count 36
2017-08-17 21:29:05,504 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,ba2bfbd0-2429-47d2-aae0-75dec0071428,34))
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,ba2bfbd0-2429-47d2-aae0-75dec0071428,34) in Set()
2017-08-17 21:29:05,514 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1305ebb3-b5b5-42b7-8401-2ab71cc378fb'))
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1305ebb3-b5b5-42b7-8401-2ab71cc378fb')) with count 37
2017-08-17 21:29:05,514 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1305ebb3-b5b5-42b7-8401-2ab71cc378fb'))
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1305ebb3-b5b5-42b7-8401-2ab71cc378fb')) with count 38
2017-08-17 21:29:05,514 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1305ebb3-b5b5-42b7-8401-2ab71cc378fb',37,'models.Person')),id -> java.util.UUID('7ed07823-434d-4960-8019-1122ad6b0376'))
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1305ebb3-b5b5-42b7-8401-2ab71cc378fb',37,'models.Person')),id -> java.util.UUID('7ed07823-434d-4960-8019-1122ad6b0376')) with count 39
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,1305ebb3-b5b5-42b7-8401-2ab71cc378fb,37))
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,1305ebb3-b5b5-42b7-8401-2ab71cc378fb,37) in Set()
2017-08-17 21:29:05,514 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('eaac8c5e-7de7-40cf-aa88-e045d4d4fd15'))
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('eaac8c5e-7de7-40cf-aa88-e045d4d4fd15')) with count 40
2017-08-17 21:29:05,514 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('eaac8c5e-7de7-40cf-aa88-e045d4d4fd15'))
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('eaac8c5e-7de7-40cf-aa88-e045d4d4fd15')) with count 41
2017-08-17 21:29:05,514 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('eaac8c5e-7de7-40cf-aa88-e045d4d4fd15',40,'models.Person')),id -> java.util.UUID('e53963dc-8bad-4b51-9e79-171eb2151df0'))
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('eaac8c5e-7de7-40cf-aa88-e045d4d4fd15',40,'models.Person')),id -> java.util.UUID('e53963dc-8bad-4b51-9e79-171eb2151df0')) with count 42
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,eaac8c5e-7de7-40cf-aa88-e045d4d4fd15,40))
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,eaac8c5e-7de7-40cf-aa88-e045d4d4fd15,40) in Set()
2017-08-17 21:29:05,514 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('77d8ba53-3341-4fe1-b2d0-74c64a2756f4'))
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('77d8ba53-3341-4fe1-b2d0-74c64a2756f4')) with count 43
2017-08-17 21:29:05,514 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('77d8ba53-3341-4fe1-b2d0-74c64a2756f4'))
2017-08-17 21:29:05,514 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('77d8ba53-3341-4fe1-b2d0-74c64a2756f4')) with count 44
2017-08-17 21:29:05,514 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('77d8ba53-3341-4fe1-b2d0-74c64a2756f4',43,'models.Person')),id -> java.util.UUID('97573328-412a-4ca0-a74d-fde99dd9e8ce'))
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,77d8ba53-3341-4fe1-b2d0-74c64a2756f4,43))
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('77d8ba53-3341-4fe1-b2d0-74c64a2756f4',43,'models.Person')),id -> java.util.UUID('97573328-412a-4ca0-a74d-fde99dd9e8ce')) with count 45
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,77d8ba53-3341-4fe1-b2d0-74c64a2756f4,43) in Set()
2017-08-17 21:29:05,524 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5c9aae07-b0f2-4944-a7a9-d59f462eacd6'))
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5c9aae07-b0f2-4944-a7a9-d59f462eacd6')) with count 46
2017-08-17 21:29:05,524 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5c9aae07-b0f2-4944-a7a9-d59f462eacd6'))
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5c9aae07-b0f2-4944-a7a9-d59f462eacd6')) with count 47
2017-08-17 21:29:05,524 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5c9aae07-b0f2-4944-a7a9-d59f462eacd6',46,'models.Person')),id -> java.util.UUID('98a03257-6d33-498e-a4da-c8a17e7dc5ce'))
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,5c9aae07-b0f2-4944-a7a9-d59f462eacd6,46))
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5c9aae07-b0f2-4944-a7a9-d59f462eacd6',46,'models.Person')),id -> java.util.UUID('98a03257-6d33-498e-a4da-c8a17e7dc5ce')) with count 48
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,5c9aae07-b0f2-4944-a7a9-d59f462eacd6,46) in Set()
2017-08-17 21:29:05,524 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('70e7c61c-501b-4827-aa58-a6d902ad58dc'))
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('70e7c61c-501b-4827-aa58-a6d902ad58dc')) with count 49
2017-08-17 21:29:05,524 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('70e7c61c-501b-4827-aa58-a6d902ad58dc'))
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('70e7c61c-501b-4827-aa58-a6d902ad58dc')) with count 50
2017-08-17 21:29:05,524 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('70e7c61c-501b-4827-aa58-a6d902ad58dc',49,'models.Person')),id -> java.util.UUID('d73a2ade-597b-40cd-84cf-7824f29e3d7e'))
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('70e7c61c-501b-4827-aa58-a6d902ad58dc',49,'models.Person')),id -> java.util.UUID('d73a2ade-597b-40cd-84cf-7824f29e3d7e')) with count 51
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,70e7c61c-501b-4827-aa58-a6d902ad58dc,49))
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,70e7c61c-501b-4827-aa58-a6d902ad58dc,49) in Set()
2017-08-17 21:29:05,524 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5fb3445d-4bc4-4c6f-8a32-1dc97f0bcd9c'))
2017-08-17 21:29:05,524 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5fb3445d-4bc4-4c6f-8a32-1dc97f0bcd9c')) with count 52
2017-08-17 21:29:05,524 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5fb3445d-4bc4-4c6f-8a32-1dc97f0bcd9c'))
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5fb3445d-4bc4-4c6f-8a32-1dc97f0bcd9c')) with count 53
2017-08-17 21:29:05,534 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5fb3445d-4bc4-4c6f-8a32-1dc97f0bcd9c',52,'models.Person')),id -> java.util.UUID('9eb5a938-ef95-4082-80ee-b6d09cfc0fc7'))
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5fb3445d-4bc4-4c6f-8a32-1dc97f0bcd9c',52,'models.Person')),id -> java.util.UUID('9eb5a938-ef95-4082-80ee-b6d09cfc0fc7')) with count 54
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,5fb3445d-4bc4-4c6f-8a32-1dc97f0bcd9c,52))
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,5fb3445d-4bc4-4c6f-8a32-1dc97f0bcd9c,52) in Set()
2017-08-17 21:29:05,534 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('257c72b4-fc96-43dc-b36a-97c2420a4b83'))
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('257c72b4-fc96-43dc-b36a-97c2420a4b83')) with count 55
2017-08-17 21:29:05,534 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('257c72b4-fc96-43dc-b36a-97c2420a4b83'))
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('257c72b4-fc96-43dc-b36a-97c2420a4b83')) with count 56
2017-08-17 21:29:05,534 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('257c72b4-fc96-43dc-b36a-97c2420a4b83',55,'models.Person')),id -> java.util.UUID('497f13b7-3408-42e3-8835-4d8828de1c60'))
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('257c72b4-fc96-43dc-b36a-97c2420a4b83',55,'models.Person')),id -> java.util.UUID('497f13b7-3408-42e3-8835-4d8828de1c60')) with count 57
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,257c72b4-fc96-43dc-b36a-97c2420a4b83,55))
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,257c72b4-fc96-43dc-b36a-97c2420a4b83,55) in Set()
2017-08-17 21:29:05,534 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d5112949-6a93-482c-9ee1-fa54c3f53ba8'))
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d5112949-6a93-482c-9ee1-fa54c3f53ba8')) with count 58
2017-08-17 21:29:05,534 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d5112949-6a93-482c-9ee1-fa54c3f53ba8'))
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d5112949-6a93-482c-9ee1-fa54c3f53ba8')) with count 59
2017-08-17 21:29:05,534 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d5112949-6a93-482c-9ee1-fa54c3f53ba8',58,'models.Person')),id -> java.util.UUID('b1a8f915-f15d-4766-9498-3f79486d9c2f'))
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,d5112949-6a93-482c-9ee1-fa54c3f53ba8,58))
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d5112949-6a93-482c-9ee1-fa54c3f53ba8',58,'models.Person')),id -> java.util.UUID('b1a8f915-f15d-4766-9498-3f79486d9c2f')) with count 60
2017-08-17 21:29:05,534 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,d5112949-6a93-482c-9ee1-fa54c3f53ba8,58) in Set()
2017-08-17 21:29:05,534 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('af89ce3b-3b1c-4ec8-b54b-4233ea6bdf77'))
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('af89ce3b-3b1c-4ec8-b54b-4233ea6bdf77')) with count 61
2017-08-17 21:29:05,544 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('af89ce3b-3b1c-4ec8-b54b-4233ea6bdf77'))
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('af89ce3b-3b1c-4ec8-b54b-4233ea6bdf77')) with count 62
2017-08-17 21:29:05,544 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('af89ce3b-3b1c-4ec8-b54b-4233ea6bdf77',61,'models.Person')),id -> java.util.UUID('1dbf4e40-c738-41f2-a7a3-9d1baaf50b3d'))
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('af89ce3b-3b1c-4ec8-b54b-4233ea6bdf77',61,'models.Person')),id -> java.util.UUID('1dbf4e40-c738-41f2-a7a3-9d1baaf50b3d')) with count 63
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,af89ce3b-3b1c-4ec8-b54b-4233ea6bdf77,61))
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,af89ce3b-3b1c-4ec8-b54b-4233ea6bdf77,61) in Set()
2017-08-17 21:29:05,544 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ba6fcdf6-ac8b-4c3c-b00c-2c36add88cce'))
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ba6fcdf6-ac8b-4c3c-b00c-2c36add88cce')) with count 64
2017-08-17 21:29:05,544 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ba6fcdf6-ac8b-4c3c-b00c-2c36add88cce'))
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ba6fcdf6-ac8b-4c3c-b00c-2c36add88cce')) with count 65
2017-08-17 21:29:05,544 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ba6fcdf6-ac8b-4c3c-b00c-2c36add88cce',64,'models.Person')),id -> java.util.UUID('7db11781-93b3-4098-a545-9f0cdf33763c'))
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ba6fcdf6-ac8b-4c3c-b00c-2c36add88cce',64,'models.Person')),id -> java.util.UUID('7db11781-93b3-4098-a545-9f0cdf33763c')) with count 66
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,ba6fcdf6-ac8b-4c3c-b00c-2c36add88cce,64))
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,ba6fcdf6-ac8b-4c3c-b00c-2c36add88cce,64) in Set()
2017-08-17 21:29:05,544 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d790d088-628e-4e19-95d7-8ae7fb90ccbb'))
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d790d088-628e-4e19-95d7-8ae7fb90ccbb')) with count 67
2017-08-17 21:29:05,544 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d790d088-628e-4e19-95d7-8ae7fb90ccbb'))
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d790d088-628e-4e19-95d7-8ae7fb90ccbb')) with count 68
2017-08-17 21:29:05,544 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d790d088-628e-4e19-95d7-8ae7fb90ccbb',67,'models.Person')),id -> java.util.UUID('9e8f75b1-5316-4ad6-b71f-ed92de7ce14e'))
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d790d088-628e-4e19-95d7-8ae7fb90ccbb',67,'models.Person')),id -> java.util.UUID('9e8f75b1-5316-4ad6-b71f-ed92de7ce14e')) with count 69
2017-08-17 21:29:05,544 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,d790d088-628e-4e19-95d7-8ae7fb90ccbb,67))
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,d790d088-628e-4e19-95d7-8ae7fb90ccbb,67) in Set()
2017-08-17 21:29:05,554 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7d38d162-d3d5-42fd-85a5-e88d5fa25493'))
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7d38d162-d3d5-42fd-85a5-e88d5fa25493')) with count 70
2017-08-17 21:29:05,554 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7d38d162-d3d5-42fd-85a5-e88d5fa25493'))
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7d38d162-d3d5-42fd-85a5-e88d5fa25493')) with count 71
2017-08-17 21:29:05,554 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7d38d162-d3d5-42fd-85a5-e88d5fa25493',70,'models.Person')),id -> java.util.UUID('ff1ff513-a2f6-4d49-9628-adaeda891dfc'))
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7d38d162-d3d5-42fd-85a5-e88d5fa25493',70,'models.Person')),id -> java.util.UUID('ff1ff513-a2f6-4d49-9628-adaeda891dfc')) with count 72
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,7d38d162-d3d5-42fd-85a5-e88d5fa25493,70))
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,7d38d162-d3d5-42fd-85a5-e88d5fa25493,70) in Set()
2017-08-17 21:29:05,554 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2b8b8e8b-d5a0-4344-908f-15512d1935cd'))
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2b8b8e8b-d5a0-4344-908f-15512d1935cd')) with count 73
2017-08-17 21:29:05,554 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2b8b8e8b-d5a0-4344-908f-15512d1935cd'))
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2b8b8e8b-d5a0-4344-908f-15512d1935cd')) with count 74
2017-08-17 21:29:05,554 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2b8b8e8b-d5a0-4344-908f-15512d1935cd',73,'models.Person')),id -> java.util.UUID('d305bddb-ac59-4a0b-9b28-b460d71a9fc6'))
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2b8b8e8b-d5a0-4344-908f-15512d1935cd',73,'models.Person')),id -> java.util.UUID('d305bddb-ac59-4a0b-9b28-b460d71a9fc6')) with count 75
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,2b8b8e8b-d5a0-4344-908f-15512d1935cd,73))
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,2b8b8e8b-d5a0-4344-908f-15512d1935cd,73) in Set()
2017-08-17 21:29:05,554 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c66e48ab-bc82-4e87-9585-0260b1b4f3ff'))
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c66e48ab-bc82-4e87-9585-0260b1b4f3ff')) with count 76
2017-08-17 21:29:05,554 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c66e48ab-bc82-4e87-9585-0260b1b4f3ff'))
2017-08-17 21:29:05,554 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c66e48ab-bc82-4e87-9585-0260b1b4f3ff')) with count 77
2017-08-17 21:29:05,554 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c66e48ab-bc82-4e87-9585-0260b1b4f3ff',76,'models.Person')),id -> java.util.UUID('85378c52-aeea-4f1e-807f-62cb27afa191'))
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,c66e48ab-bc82-4e87-9585-0260b1b4f3ff,76))
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c66e48ab-bc82-4e87-9585-0260b1b4f3ff',76,'models.Person')),id -> java.util.UUID('85378c52-aeea-4f1e-807f-62cb27afa191')) with count 78
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,c66e48ab-bc82-4e87-9585-0260b1b4f3ff,76) in Set()
2017-08-17 21:29:05,564 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d48a21b8-066c-432f-b611-9ebb17180cd0'))
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d48a21b8-066c-432f-b611-9ebb17180cd0')) with count 79
2017-08-17 21:29:05,564 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d48a21b8-066c-432f-b611-9ebb17180cd0'))
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d48a21b8-066c-432f-b611-9ebb17180cd0')) with count 80
2017-08-17 21:29:05,564 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d48a21b8-066c-432f-b611-9ebb17180cd0',79,'models.Person')),id -> java.util.UUID('b47dac32-8cb1-4e6f-aaf2-4aec24e93101'))
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,d48a21b8-066c-432f-b611-9ebb17180cd0,79))
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d48a21b8-066c-432f-b611-9ebb17180cd0',79,'models.Person')),id -> java.util.UUID('b47dac32-8cb1-4e6f-aaf2-4aec24e93101')) with count 81
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,d48a21b8-066c-432f-b611-9ebb17180cd0,79) in Set()
2017-08-17 21:29:05,564 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('37f51958-556a-4e24-a7fc-e97842eedad4'))
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('37f51958-556a-4e24-a7fc-e97842eedad4')) with count 82
2017-08-17 21:29:05,564 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('37f51958-556a-4e24-a7fc-e97842eedad4'))
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('37f51958-556a-4e24-a7fc-e97842eedad4')) with count 83
2017-08-17 21:29:05,564 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('37f51958-556a-4e24-a7fc-e97842eedad4',82,'models.Person')),id -> java.util.UUID('654c1efd-cd7f-4b4d-9e99-246e6a3683ae'))
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,37f51958-556a-4e24-a7fc-e97842eedad4,82))
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('37f51958-556a-4e24-a7fc-e97842eedad4',82,'models.Person')),id -> java.util.UUID('654c1efd-cd7f-4b4d-9e99-246e6a3683ae')) with count 84
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,37f51958-556a-4e24-a7fc-e97842eedad4,82) in Set()
2017-08-17 21:29:05,564 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fee926e1-92db-462b-a127-11aec8d05094'))
2017-08-17 21:29:05,564 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fee926e1-92db-462b-a127-11aec8d05094')) with count 85
2017-08-17 21:29:05,564 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fee926e1-92db-462b-a127-11aec8d05094'))
2017-08-17 21:29:05,574 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fee926e1-92db-462b-a127-11aec8d05094')) with count 86
2017-08-17 21:29:05,574 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fee926e1-92db-462b-a127-11aec8d05094',85,'models.Person')),id -> java.util.UUID('36c535de-bbb2-4dbf-bb58-3cec40084955'))
2017-08-17 21:29:05,574 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fee926e1-92db-462b-a127-11aec8d05094',85,'models.Person')),id -> java.util.UUID('36c535de-bbb2-4dbf-bb58-3cec40084955')) with count 87
2017-08-17 21:29:05,574 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,fee926e1-92db-462b-a127-11aec8d05094,85))
2017-08-17 21:29:05,574 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,fee926e1-92db-462b-a127-11aec8d05094,85) in Set()
2017-08-17 21:29:05,574 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ad94dcfd-530b-4eea-a530-82f4427322e8'))
2017-08-17 21:29:05,574 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ad94dcfd-530b-4eea-a530-82f4427322e8')) with count 88
2017-08-17 21:29:05,574 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ad94dcfd-530b-4eea-a530-82f4427322e8'))
2017-08-17 21:29:05,574 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ad94dcfd-530b-4eea-a530-82f4427322e8')) with count 89
2017-08-17 21:29:05,574 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ad94dcfd-530b-4eea-a530-82f4427322e8',88,'models.Person')),id -> java.util.UUID('f4572c44-9227-4e9e-88f5-6068b825283e'))
2017-08-17 21:29:05,574 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ad94dcfd-530b-4eea-a530-82f4427322e8',88,'models.Person')),id -> java.util.UUID('f4572c44-9227-4e9e-88f5-6068b825283e')) with count 90
2017-08-17 21:29:05,574 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,ad94dcfd-530b-4eea-a530-82f4427322e8,88))
2017-08-17 21:29:05,574 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,ad94dcfd-530b-4eea-a530-82f4427322e8,88) in Set()
2017-08-17 21:29:06,574 INFO  [main] Counter[Person] - counter is 90
2017-08-17 21:29:06,574 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(7db11781-93b3-4098-a545-9f0cdf33763c,Map(66 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ba6fcdf6-ac8b-4c3c-b00c-2c36add88cce',64,'models.Person')),id -> java.util.UUID('7db11781-93b3-4098-a545-9f0cdf33763c'))))
	(eaac8c5e-7de7-40cf-aa88-e045d4d4fd15,Map(40 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('eaac8c5e-7de7-40cf-aa88-e045d4d4fd15')), 41 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('eaac8c5e-7de7-40cf-aa88-e045d4d4fd15'))))
	(fee926e1-92db-462b-a127-11aec8d05094,Map(85 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('fee926e1-92db-462b-a127-11aec8d05094')), 86 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('fee926e1-92db-462b-a127-11aec8d05094'))))
	(257c72b4-fc96-43dc-b36a-97c2420a4b83,Map(55 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('257c72b4-fc96-43dc-b36a-97c2420a4b83')), 56 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('257c72b4-fc96-43dc-b36a-97c2420a4b83'))))
	(1305ebb3-b5b5-42b7-8401-2ab71cc378fb,Map(37 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('1305ebb3-b5b5-42b7-8401-2ab71cc378fb')), 38 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('1305ebb3-b5b5-42b7-8401-2ab71cc378fb'))))
	(7da0ee2e-a4c5-426b-abae-f14ce4e39d98,Map(18 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c512505c-3893-4db5-85c6-56f2d6f09538',16,'models.Person')),id -> java.util.UUID('7da0ee2e-a4c5-426b-abae-f14ce4e39d98'))))
	(5fb3445d-4bc4-4c6f-8a32-1dc97f0bcd9c,Map(52 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5fb3445d-4bc4-4c6f-8a32-1dc97f0bcd9c')), 53 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5fb3445d-4bc4-4c6f-8a32-1dc97f0bcd9c'))))
	(935b284b-d988-45ea-b549-fc8f0d7fa180,Map(25 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('935b284b-d988-45ea-b549-fc8f0d7fa180')), 26 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('935b284b-d988-45ea-b549-fc8f0d7fa180'))))
	(5c9aae07-b0f2-4944-a7a9-d59f462eacd6,Map(46 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5c9aae07-b0f2-4944-a7a9-d59f462eacd6')), 47 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5c9aae07-b0f2-4944-a7a9-d59f462eacd6'))))
	(d9769892-c22a-4ab3-9ca9-d726eb5c2b74,Map(6 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('bc36712c-5ba0-4572-8c21-8182556d30a7',4,'models.Person')),id -> java.util.UUID('d9769892-c22a-4ab3-9ca9-d726eb5c2b74'))))
	(89bc5933-fbd9-443a-bdb8-128ab4daa1eb,Map(31 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('89bc5933-fbd9-443a-bdb8-128ab4daa1eb')), 32 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('89bc5933-fbd9-443a-bdb8-128ab4daa1eb'))))
	(497f13b7-3408-42e3-8835-4d8828de1c60,Map(57 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('257c72b4-fc96-43dc-b36a-97c2420a4b83',55,'models.Person')),id -> java.util.UUID('497f13b7-3408-42e3-8835-4d8828de1c60'))))
	(70e7c61c-501b-4827-aa58-a6d902ad58dc,Map(49 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('70e7c61c-501b-4827-aa58-a6d902ad58dc')), 50 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('70e7c61c-501b-4827-aa58-a6d902ad58dc'))))
	(3cd14ac2-94f8-4e33-8ff7-2d6aab9d984c,Map(3 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('cc3a9331-8e7c-4481-9110-349eb81b70d2',1,'models.Person')),id -> java.util.UUID('3cd14ac2-94f8-4e33-8ff7-2d6aab9d984c'))))
	(ad94dcfd-530b-4eea-a530-82f4427322e8,Map(88 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ad94dcfd-530b-4eea-a530-82f4427322e8')), 89 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ad94dcfd-530b-4eea-a530-82f4427322e8'))))
	(7d38d162-d3d5-42fd-85a5-e88d5fa25493,Map(70 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('7d38d162-d3d5-42fd-85a5-e88d5fa25493')), 71 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('7d38d162-d3d5-42fd-85a5-e88d5fa25493'))))
	(e53963dc-8bad-4b51-9e79-171eb2151df0,Map(42 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('eaac8c5e-7de7-40cf-aa88-e045d4d4fd15',40,'models.Person')),id -> java.util.UUID('e53963dc-8bad-4b51-9e79-171eb2151df0'))))
	(2b8b8e8b-d5a0-4344-908f-15512d1935cd,Map(73 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('2b8b8e8b-d5a0-4344-908f-15512d1935cd')), 74 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('2b8b8e8b-d5a0-4344-908f-15512d1935cd'))))
	(37f51958-556a-4e24-a7fc-e97842eedad4,Map(82 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('37f51958-556a-4e24-a7fc-e97842eedad4')), 83 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('37f51958-556a-4e24-a7fc-e97842eedad4'))))
	(2a5cb821-d0e4-4af2-89f9-e72ab4ac9b49,Map(12 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('61aaf553-aa79-4947-99ee-fc1d2a91da26',10,'models.Person')),id -> java.util.UUID('2a5cb821-d0e4-4af2-89f9-e72ab4ac9b49'))))
	(5ffbecda-87f0-454c-bec0-0bec7b3a2cb7,Map(7 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('5ffbecda-87f0-454c-bec0-0bec7b3a2cb7')), 8 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('5ffbecda-87f0-454c-bec0-0bec7b3a2cb7'))))
	(b8a1105b-0233-460c-a604-5a8e56a784f2,Map(19 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('b8a1105b-0233-460c-a604-5a8e56a784f2')), 20 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('b8a1105b-0233-460c-a604-5a8e56a784f2'))))
	(f4572c44-9227-4e9e-88f5-6068b825283e,Map(90 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ad94dcfd-530b-4eea-a530-82f4427322e8',88,'models.Person')),id -> java.util.UUID('f4572c44-9227-4e9e-88f5-6068b825283e'))))
	(d73a2ade-597b-40cd-84cf-7824f29e3d7e,Map(51 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('70e7c61c-501b-4827-aa58-a6d902ad58dc',49,'models.Person')),id -> java.util.UUID('d73a2ade-597b-40cd-84cf-7824f29e3d7e'))))
	(98a03257-6d33-498e-a4da-c8a17e7dc5ce,Map(48 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5c9aae07-b0f2-4944-a7a9-d59f462eacd6',46,'models.Person')),id -> java.util.UUID('98a03257-6d33-498e-a4da-c8a17e7dc5ce'))))
	(654c1efd-cd7f-4b4d-9e99-246e6a3683ae,Map(84 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('37f51958-556a-4e24-a7fc-e97842eedad4',82,'models.Person')),id -> java.util.UUID('654c1efd-cd7f-4b4d-9e99-246e6a3683ae'))))
	(55acb1cc-adeb-4cb1-bcc3-76d21b789909,Map(30 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('3f61dbcc-1aca-496a-8f23-f0c4a6c94314',28,'models.Person')),id -> java.util.UUID('55acb1cc-adeb-4cb1-bcc3-76d21b789909'))))
	(128d20ea-ec22-42f9-a108-1d8ffbb994ac,Map(33 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('89bc5933-fbd9-443a-bdb8-128ab4daa1eb',31,'models.Person')),id -> java.util.UUID('128d20ea-ec22-42f9-a108-1d8ffbb994ac'))))
	(7ed07823-434d-4960-8019-1122ad6b0376,Map(39 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('1305ebb3-b5b5-42b7-8401-2ab71cc378fb',37,'models.Person')),id -> java.util.UUID('7ed07823-434d-4960-8019-1122ad6b0376'))))
	(d9906611-ded4-4a1e-8125-2beef2529612,Map(24 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4b9c7651-5248-49c2-a24e-911ccc1fd10a',22,'models.Person')),id -> java.util.UUID('d9906611-ded4-4a1e-8125-2beef2529612'))))
	(61aaf553-aa79-4947-99ee-fc1d2a91da26,Map(10 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('61aaf553-aa79-4947-99ee-fc1d2a91da26')), 11 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('61aaf553-aa79-4947-99ee-fc1d2a91da26'))))
	(013912d5-9004-470a-ab52-f650d1800d87,Map(36 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('ba2bfbd0-2429-47d2-aae0-75dec0071428',34,'models.Person')),id -> java.util.UUID('013912d5-9004-470a-ab52-f650d1800d87'))))
	(d305bddb-ac59-4a0b-9b28-b460d71a9fc6,Map(75 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('2b8b8e8b-d5a0-4344-908f-15512d1935cd',73,'models.Person')),id -> java.util.UUID('d305bddb-ac59-4a0b-9b28-b460d71a9fc6'))))
	(9eb5a938-ef95-4082-80ee-b6d09cfc0fc7,Map(54 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5fb3445d-4bc4-4c6f-8a32-1dc97f0bcd9c',52,'models.Person')),id -> java.util.UUID('9eb5a938-ef95-4082-80ee-b6d09cfc0fc7'))))
	(4b9c7651-5248-49c2-a24e-911ccc1fd10a,Map(22 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4b9c7651-5248-49c2-a24e-911ccc1fd10a')), 23 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4b9c7651-5248-49c2-a24e-911ccc1fd10a'))))
	(88f737ad-17e1-42d9-ae55-288db323b9b2,Map(21 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('b8a1105b-0233-460c-a604-5a8e56a784f2',19,'models.Person')),id -> java.util.UUID('88f737ad-17e1-42d9-ae55-288db323b9b2'))))
	(af89ce3b-3b1c-4ec8-b54b-4233ea6bdf77,Map(61 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('af89ce3b-3b1c-4ec8-b54b-4233ea6bdf77')), 62 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('af89ce3b-3b1c-4ec8-b54b-4233ea6bdf77'))))
	(d5112949-6a93-482c-9ee1-fa54c3f53ba8,Map(58 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d5112949-6a93-482c-9ee1-fa54c3f53ba8')), 59 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d5112949-6a93-482c-9ee1-fa54c3f53ba8'))))
	(d48a21b8-066c-432f-b611-9ebb17180cd0,Map(79 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d48a21b8-066c-432f-b611-9ebb17180cd0')), 80 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d48a21b8-066c-432f-b611-9ebb17180cd0'))))
	(c512505c-3893-4db5-85c6-56f2d6f09538,Map(16 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c512505c-3893-4db5-85c6-56f2d6f09538')), 17 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c512505c-3893-4db5-85c6-56f2d6f09538'))))
	(ba6fcdf6-ac8b-4c3c-b00c-2c36add88cce,Map(64 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ba6fcdf6-ac8b-4c3c-b00c-2c36add88cce')), 65 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ba6fcdf6-ac8b-4c3c-b00c-2c36add88cce'))))
	(9e8f75b1-5316-4ad6-b71f-ed92de7ce14e,Map(69 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d790d088-628e-4e19-95d7-8ae7fb90ccbb',67,'models.Person')),id -> java.util.UUID('9e8f75b1-5316-4ad6-b71f-ed92de7ce14e'))))
	(1dbf4e40-c738-41f2-a7a3-9d1baaf50b3d,Map(63 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('af89ce3b-3b1c-4ec8-b54b-4233ea6bdf77',61,'models.Person')),id -> java.util.UUID('1dbf4e40-c738-41f2-a7a3-9d1baaf50b3d'))))
	(ba2bfbd0-2429-47d2-aae0-75dec0071428,Map(34 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('ba2bfbd0-2429-47d2-aae0-75dec0071428')), 35 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('ba2bfbd0-2429-47d2-aae0-75dec0071428'))))
	(3f61dbcc-1aca-496a-8f23-f0c4a6c94314,Map(28 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('3f61dbcc-1aca-496a-8f23-f0c4a6c94314')), 29 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('3f61dbcc-1aca-496a-8f23-f0c4a6c94314'))))
	(bc36712c-5ba0-4572-8c21-8182556d30a7,Map(4 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('bc36712c-5ba0-4572-8c21-8182556d30a7')), 5 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('bc36712c-5ba0-4572-8c21-8182556d30a7'))))
	(c66e48ab-bc82-4e87-9585-0260b1b4f3ff,Map(76 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('c66e48ab-bc82-4e87-9585-0260b1b4f3ff')), 77 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('c66e48ab-bc82-4e87-9585-0260b1b4f3ff'))))
	(485f9ce4-2207-4568-ac23-60984e317b7e,Map(15 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('4284fbdb-01d9-4dc4-8bb6-d0d513c10f1b',13,'models.Person')),id -> java.util.UUID('485f9ce4-2207-4568-ac23-60984e317b7e'))))
	(b47dac32-8cb1-4e6f-aaf2-4aec24e93101,Map(81 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d48a21b8-066c-432f-b611-9ebb17180cd0',79,'models.Person')),id -> java.util.UUID('b47dac32-8cb1-4e6f-aaf2-4aec24e93101'))))
	(97573328-412a-4ca0-a74d-fde99dd9e8ce,Map(45 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('77d8ba53-3341-4fe1-b2d0-74c64a2756f4',43,'models.Person')),id -> java.util.UUID('97573328-412a-4ca0-a74d-fde99dd9e8ce'))))
	(ff1ff513-a2f6-4d49-9628-adaeda891dfc,Map(72 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('7d38d162-d3d5-42fd-85a5-e88d5fa25493',70,'models.Person')),id -> java.util.UUID('ff1ff513-a2f6-4d49-9628-adaeda891dfc'))))
	(36c535de-bbb2-4dbf-bb58-3cec40084955,Map(87 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('fee926e1-92db-462b-a127-11aec8d05094',85,'models.Person')),id -> java.util.UUID('36c535de-bbb2-4dbf-bb58-3cec40084955'))))
	(77d8ba53-3341-4fe1-b2d0-74c64a2756f4,Map(43 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('77d8ba53-3341-4fe1-b2d0-74c64a2756f4')), 44 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('77d8ba53-3341-4fe1-b2d0-74c64a2756f4'))))
	(4284fbdb-01d9-4dc4-8bb6-d0d513c10f1b,Map(13 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('4284fbdb-01d9-4dc4-8bb6-d0d513c10f1b')), 14 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('4284fbdb-01d9-4dc4-8bb6-d0d513c10f1b'))))
	(cc3a9331-8e7c-4481-9110-349eb81b70d2,Map(1 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('cc3a9331-8e7c-4481-9110-349eb81b70d2')), 2 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('cc3a9331-8e7c-4481-9110-349eb81b70d2'))))
	(85378c52-aeea-4f1e-807f-62cb27afa191,Map(78 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('c66e48ab-bc82-4e87-9585-0260b1b4f3ff',76,'models.Person')),id -> java.util.UUID('85378c52-aeea-4f1e-807f-62cb27afa191'))))
	(b1a8f915-f15d-4766-9498-3f79486d9c2f,Map(60 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('d5112949-6a93-482c-9ee1-fa54c3f53ba8',58,'models.Person')),id -> java.util.UUID('b1a8f915-f15d-4766-9498-3f79486d9c2f'))))
	(d790d088-628e-4e19-95d7-8ae7fb90ccbb,Map(67 -> models.Person(name -> 'Oleg',parent -> None,id -> java.util.UUID('d790d088-628e-4e19-95d7-8ae7fb90ccbb')), 68 -> models.Person(name -> 'Oleg2',parent -> None,id -> java.util.UUID('d790d088-628e-4e19-95d7-8ae7fb90ccbb'))))
	(425f4b6d-79f6-4726-819b-2f956c1c89a0,Map(9 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('5ffbecda-87f0-454c-bec0-0bec7b3a2cb7',7,'models.Person')),id -> java.util.UUID('425f4b6d-79f6-4726-819b-2f956c1c89a0'))))
	(67d48946-c72d-4ebf-997b-828c56346f45,Map(27 -> models.Person(name -> 'Igor',parent -> scala.Option(ru.yudnikov.core.modeling.Reference('935b284b-d988-45ea-b549-fc8f0d7fa180',25,'models.Person')),id -> java.util.UUID('67d48946-c72d-4ebf-997b-828c56346f45'))))

2017-08-17 21:31:22,657 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('279f1813-e8b7-484e-85cb-e988643380d5'))
2017-08-17 21:31:22,697 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('279f1813-e8b7-484e-85cb-e988643380d5')) with count 1
2017-08-17 21:31:22,697 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('279f1813-e8b7-484e-85cb-e988643380d5',1,'models.Person')),id -> java.util.UUID('279f1813-e8b7-484e-85cb-e988643380d5'))
2017-08-17 21:31:22,697 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('279f1813-e8b7-484e-85cb-e988643380d5',1,'models.Person')),id -> java.util.UUID('279f1813-e8b7-484e-85cb-e988643380d5')) with count 2
2017-08-17 21:31:22,697 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,279f1813-e8b7-484e-85cb-e988643380d5,1))
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,279f1813-e8b7-484e-85cb-e988643380d5,1) in Set()
2017-08-17 21:31:22,707 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('279f1813-e8b7-484e-85cb-e988643380d5',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('279f1813-e8b7-484e-85cb-e988643380d5',2,'models.Person')),id -> java.util.UUID('c639c4b7-3566-4f3a-9638-e27dcd7d4548'))
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('279f1813-e8b7-484e-85cb-e988643380d5',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('279f1813-e8b7-484e-85cb-e988643380d5',2,'models.Person')),id -> java.util.UUID('c639c4b7-3566-4f3a-9638-e27dcd7d4548')) with count 3
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,279f1813-e8b7-484e-85cb-e988643380d5,1), Reference(class models.Person,279f1813-e8b7-484e-85cb-e988643380d5,2))
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,279f1813-e8b7-484e-85cb-e988643380d5,1) in Set()
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,279f1813-e8b7-484e-85cb-e988643380d5,2) in Set(Reference(class models.Person,279f1813-e8b7-484e-85cb-e988643380d5,1))
2017-08-17 21:31:22,707 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f'))
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f')) with count 4
2017-08-17 21:31:22,707 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f',4,'models.Person')),id -> java.util.UUID('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f'))
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f',4,'models.Person')),id -> java.util.UUID('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f')) with count 5
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,5149b6a8-c8ee-46e1-9e2c-f659ce99a51f,4))
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,5149b6a8-c8ee-46e1-9e2c-f659ce99a51f,4) in Set()
2017-08-17 21:31:22,707 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f',4,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f',5,'models.Person')),id -> java.util.UUID('2b271dae-1dbd-43cf-becf-2a76e9660958'))
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,5149b6a8-c8ee-46e1-9e2c-f659ce99a51f,4), Reference(class models.Person,5149b6a8-c8ee-46e1-9e2c-f659ce99a51f,5))
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f',4,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f',5,'models.Person')),id -> java.util.UUID('2b271dae-1dbd-43cf-becf-2a76e9660958')) with count 6
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,5149b6a8-c8ee-46e1-9e2c-f659ce99a51f,4) in Set()
2017-08-17 21:31:22,707 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,5149b6a8-c8ee-46e1-9e2c-f659ce99a51f,5) in Set(Reference(class models.Person,5149b6a8-c8ee-46e1-9e2c-f659ce99a51f,4))
2017-08-17 21:31:22,707 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('303b7a81-9ff5-4628-a759-96f7196b6cdb'))
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('303b7a81-9ff5-4628-a759-96f7196b6cdb')) with count 7
2017-08-17 21:31:22,717 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('303b7a81-9ff5-4628-a759-96f7196b6cdb',7,'models.Person')),id -> java.util.UUID('303b7a81-9ff5-4628-a759-96f7196b6cdb'))
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('303b7a81-9ff5-4628-a759-96f7196b6cdb',7,'models.Person')),id -> java.util.UUID('303b7a81-9ff5-4628-a759-96f7196b6cdb')) with count 8
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,303b7a81-9ff5-4628-a759-96f7196b6cdb,7))
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,303b7a81-9ff5-4628-a759-96f7196b6cdb,7) in Set()
2017-08-17 21:31:22,717 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('303b7a81-9ff5-4628-a759-96f7196b6cdb',7,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('303b7a81-9ff5-4628-a759-96f7196b6cdb',8,'models.Person')),id -> java.util.UUID('54241de0-46ab-47b8-8351-f852bd651059'))
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('303b7a81-9ff5-4628-a759-96f7196b6cdb',7,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('303b7a81-9ff5-4628-a759-96f7196b6cdb',8,'models.Person')),id -> java.util.UUID('54241de0-46ab-47b8-8351-f852bd651059')) with count 9
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,303b7a81-9ff5-4628-a759-96f7196b6cdb,7), Reference(class models.Person,303b7a81-9ff5-4628-a759-96f7196b6cdb,8))
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,303b7a81-9ff5-4628-a759-96f7196b6cdb,7) in Set()
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,303b7a81-9ff5-4628-a759-96f7196b6cdb,8) in Set(Reference(class models.Person,303b7a81-9ff5-4628-a759-96f7196b6cdb,7))
2017-08-17 21:31:22,717 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('14f7011e-e789-4a9b-a959-61b6e4839b36'))
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('14f7011e-e789-4a9b-a959-61b6e4839b36')) with count 10
2017-08-17 21:31:22,717 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('14f7011e-e789-4a9b-a959-61b6e4839b36',10,'models.Person')),id -> java.util.UUID('14f7011e-e789-4a9b-a959-61b6e4839b36'))
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,14f7011e-e789-4a9b-a959-61b6e4839b36,10))
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('14f7011e-e789-4a9b-a959-61b6e4839b36',10,'models.Person')),id -> java.util.UUID('14f7011e-e789-4a9b-a959-61b6e4839b36')) with count 11
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,14f7011e-e789-4a9b-a959-61b6e4839b36,10) in Set()
2017-08-17 21:31:22,717 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('14f7011e-e789-4a9b-a959-61b6e4839b36',10,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('14f7011e-e789-4a9b-a959-61b6e4839b36',11,'models.Person')),id -> java.util.UUID('0dee8641-b122-48e1-a473-a35ede8dd0e3'))
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('14f7011e-e789-4a9b-a959-61b6e4839b36',10,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('14f7011e-e789-4a9b-a959-61b6e4839b36',11,'models.Person')),id -> java.util.UUID('0dee8641-b122-48e1-a473-a35ede8dd0e3')) with count 12
2017-08-17 21:31:22,717 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,14f7011e-e789-4a9b-a959-61b6e4839b36,10), Reference(class models.Person,14f7011e-e789-4a9b-a959-61b6e4839b36,11))
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,14f7011e-e789-4a9b-a959-61b6e4839b36,10) in Set()
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,14f7011e-e789-4a9b-a959-61b6e4839b36,11) in Set(Reference(class models.Person,14f7011e-e789-4a9b-a959-61b6e4839b36,10))
2017-08-17 21:31:22,727 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('33227633-52bc-46dc-8389-da8671771e10'))
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('33227633-52bc-46dc-8389-da8671771e10')) with count 13
2017-08-17 21:31:22,727 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('33227633-52bc-46dc-8389-da8671771e10',13,'models.Person')),id -> java.util.UUID('33227633-52bc-46dc-8389-da8671771e10'))
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('33227633-52bc-46dc-8389-da8671771e10',13,'models.Person')),id -> java.util.UUID('33227633-52bc-46dc-8389-da8671771e10')) with count 14
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,33227633-52bc-46dc-8389-da8671771e10,13))
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,33227633-52bc-46dc-8389-da8671771e10,13) in Set()
2017-08-17 21:31:22,727 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('33227633-52bc-46dc-8389-da8671771e10',13,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('33227633-52bc-46dc-8389-da8671771e10',14,'models.Person')),id -> java.util.UUID('37675636-09fe-4d59-b449-04ba3337697b'))
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('33227633-52bc-46dc-8389-da8671771e10',13,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('33227633-52bc-46dc-8389-da8671771e10',14,'models.Person')),id -> java.util.UUID('37675636-09fe-4d59-b449-04ba3337697b')) with count 15
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,33227633-52bc-46dc-8389-da8671771e10,13), Reference(class models.Person,33227633-52bc-46dc-8389-da8671771e10,14))
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,33227633-52bc-46dc-8389-da8671771e10,13) in Set()
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,33227633-52bc-46dc-8389-da8671771e10,14) in Set(Reference(class models.Person,33227633-52bc-46dc-8389-da8671771e10,13))
2017-08-17 21:31:22,727 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('69380850-da79-472f-9d39-27c355c9f2ec'))
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('69380850-da79-472f-9d39-27c355c9f2ec')) with count 16
2017-08-17 21:31:22,727 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('69380850-da79-472f-9d39-27c355c9f2ec',16,'models.Person')),id -> java.util.UUID('69380850-da79-472f-9d39-27c355c9f2ec'))
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,69380850-da79-472f-9d39-27c355c9f2ec,16))
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('69380850-da79-472f-9d39-27c355c9f2ec',16,'models.Person')),id -> java.util.UUID('69380850-da79-472f-9d39-27c355c9f2ec')) with count 17
2017-08-17 21:31:22,727 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,69380850-da79-472f-9d39-27c355c9f2ec,16) in Set()
2017-08-17 21:31:22,737 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('69380850-da79-472f-9d39-27c355c9f2ec',16,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('69380850-da79-472f-9d39-27c355c9f2ec',17,'models.Person')),id -> java.util.UUID('89d57ab2-1e2f-4e13-ac9a-8d119abedefb'))
2017-08-17 21:31:22,737 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('69380850-da79-472f-9d39-27c355c9f2ec',16,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('69380850-da79-472f-9d39-27c355c9f2ec',17,'models.Person')),id -> java.util.UUID('89d57ab2-1e2f-4e13-ac9a-8d119abedefb')) with count 18
2017-08-17 21:31:22,737 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,69380850-da79-472f-9d39-27c355c9f2ec,16), Reference(class models.Person,69380850-da79-472f-9d39-27c355c9f2ec,17))
2017-08-17 21:31:22,737 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,69380850-da79-472f-9d39-27c355c9f2ec,16) in Set()
2017-08-17 21:31:22,737 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,69380850-da79-472f-9d39-27c355c9f2ec,17) in Set(Reference(class models.Person,69380850-da79-472f-9d39-27c355c9f2ec,16))
2017-08-17 21:31:22,737 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('1cb218be-7eb5-4320-9a2d-9229cd048251'))
2017-08-17 21:31:22,737 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('1cb218be-7eb5-4320-9a2d-9229cd048251')) with count 19
2017-08-17 21:31:22,737 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('1cb218be-7eb5-4320-9a2d-9229cd048251',19,'models.Person')),id -> java.util.UUID('1cb218be-7eb5-4320-9a2d-9229cd048251'))
2017-08-17 21:31:22,737 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,1cb218be-7eb5-4320-9a2d-9229cd048251,19))
2017-08-17 21:31:22,737 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('1cb218be-7eb5-4320-9a2d-9229cd048251',19,'models.Person')),id -> java.util.UUID('1cb218be-7eb5-4320-9a2d-9229cd048251')) with count 20
2017-08-17 21:31:22,737 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,1cb218be-7eb5-4320-9a2d-9229cd048251,19) in Set()
2017-08-17 21:31:22,737 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('1cb218be-7eb5-4320-9a2d-9229cd048251',19,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('1cb218be-7eb5-4320-9a2d-9229cd048251',20,'models.Person')),id -> java.util.UUID('4a0f09e8-e8d3-4001-a57b-8db86e5118dc'))
2017-08-17 21:31:22,737 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,1cb218be-7eb5-4320-9a2d-9229cd048251,19), Reference(class models.Person,1cb218be-7eb5-4320-9a2d-9229cd048251,20))
2017-08-17 21:31:22,737 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('1cb218be-7eb5-4320-9a2d-9229cd048251',19,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('1cb218be-7eb5-4320-9a2d-9229cd048251',20,'models.Person')),id -> java.util.UUID('4a0f09e8-e8d3-4001-a57b-8db86e5118dc')) with count 21
2017-08-17 21:31:22,737 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,1cb218be-7eb5-4320-9a2d-9229cd048251,19) in Set()
2017-08-17 21:31:22,737 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,1cb218be-7eb5-4320-9a2d-9229cd048251,20) in Set(Reference(class models.Person,1cb218be-7eb5-4320-9a2d-9229cd048251,19))
2017-08-17 21:31:22,737 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('16965589-cf80-43d3-a299-7996e88d3d58'))
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('16965589-cf80-43d3-a299-7996e88d3d58')) with count 22
2017-08-17 21:31:22,747 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('16965589-cf80-43d3-a299-7996e88d3d58',22,'models.Person')),id -> java.util.UUID('16965589-cf80-43d3-a299-7996e88d3d58'))
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('16965589-cf80-43d3-a299-7996e88d3d58',22,'models.Person')),id -> java.util.UUID('16965589-cf80-43d3-a299-7996e88d3d58')) with count 23
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,16965589-cf80-43d3-a299-7996e88d3d58,22))
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,16965589-cf80-43d3-a299-7996e88d3d58,22) in Set()
2017-08-17 21:31:22,747 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('16965589-cf80-43d3-a299-7996e88d3d58',22,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('16965589-cf80-43d3-a299-7996e88d3d58',23,'models.Person')),id -> java.util.UUID('fcd33bb3-989d-4425-bd40-d9be0e3ee6b9'))
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('16965589-cf80-43d3-a299-7996e88d3d58',22,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('16965589-cf80-43d3-a299-7996e88d3d58',23,'models.Person')),id -> java.util.UUID('fcd33bb3-989d-4425-bd40-d9be0e3ee6b9')) with count 24
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,16965589-cf80-43d3-a299-7996e88d3d58,22), Reference(class models.Person,16965589-cf80-43d3-a299-7996e88d3d58,23))
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,16965589-cf80-43d3-a299-7996e88d3d58,22) in Set()
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,16965589-cf80-43d3-a299-7996e88d3d58,23) in Set(Reference(class models.Person,16965589-cf80-43d3-a299-7996e88d3d58,22))
2017-08-17 21:31:22,747 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('c1d3d0ee-dc83-465e-9c49-0e87e2943457'))
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('c1d3d0ee-dc83-465e-9c49-0e87e2943457')) with count 25
2017-08-17 21:31:22,747 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('c1d3d0ee-dc83-465e-9c49-0e87e2943457',25,'models.Person')),id -> java.util.UUID('c1d3d0ee-dc83-465e-9c49-0e87e2943457'))
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,c1d3d0ee-dc83-465e-9c49-0e87e2943457,25))
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('c1d3d0ee-dc83-465e-9c49-0e87e2943457',25,'models.Person')),id -> java.util.UUID('c1d3d0ee-dc83-465e-9c49-0e87e2943457')) with count 26
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,c1d3d0ee-dc83-465e-9c49-0e87e2943457,25) in Set()
2017-08-17 21:31:22,747 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('c1d3d0ee-dc83-465e-9c49-0e87e2943457',25,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('c1d3d0ee-dc83-465e-9c49-0e87e2943457',26,'models.Person')),id -> java.util.UUID('d550d74e-89ab-45b4-9db5-9620e5e35861'))
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('c1d3d0ee-dc83-465e-9c49-0e87e2943457',25,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('c1d3d0ee-dc83-465e-9c49-0e87e2943457',26,'models.Person')),id -> java.util.UUID('d550d74e-89ab-45b4-9db5-9620e5e35861')) with count 27
2017-08-17 21:31:22,747 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,c1d3d0ee-dc83-465e-9c49-0e87e2943457,25), Reference(class models.Person,c1d3d0ee-dc83-465e-9c49-0e87e2943457,26))
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,c1d3d0ee-dc83-465e-9c49-0e87e2943457,25) in Set()
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,c1d3d0ee-dc83-465e-9c49-0e87e2943457,26) in Set(Reference(class models.Person,c1d3d0ee-dc83-465e-9c49-0e87e2943457,25))
2017-08-17 21:31:22,757 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('245bc715-7443-4d08-bab6-69ca5cef0c50'))
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('245bc715-7443-4d08-bab6-69ca5cef0c50')) with count 28
2017-08-17 21:31:22,757 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('245bc715-7443-4d08-bab6-69ca5cef0c50',28,'models.Person')),id -> java.util.UUID('245bc715-7443-4d08-bab6-69ca5cef0c50'))
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('245bc715-7443-4d08-bab6-69ca5cef0c50',28,'models.Person')),id -> java.util.UUID('245bc715-7443-4d08-bab6-69ca5cef0c50')) with count 29
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,245bc715-7443-4d08-bab6-69ca5cef0c50,28))
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,245bc715-7443-4d08-bab6-69ca5cef0c50,28) in Set()
2017-08-17 21:31:22,757 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('245bc715-7443-4d08-bab6-69ca5cef0c50',28,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('245bc715-7443-4d08-bab6-69ca5cef0c50',29,'models.Person')),id -> java.util.UUID('f0c9f408-06fd-4128-afaf-1804bacf687a'))
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('245bc715-7443-4d08-bab6-69ca5cef0c50',28,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('245bc715-7443-4d08-bab6-69ca5cef0c50',29,'models.Person')),id -> java.util.UUID('f0c9f408-06fd-4128-afaf-1804bacf687a')) with count 30
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,245bc715-7443-4d08-bab6-69ca5cef0c50,28), Reference(class models.Person,245bc715-7443-4d08-bab6-69ca5cef0c50,29))
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,245bc715-7443-4d08-bab6-69ca5cef0c50,28) in Set()
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,245bc715-7443-4d08-bab6-69ca5cef0c50,29) in Set(Reference(class models.Person,245bc715-7443-4d08-bab6-69ca5cef0c50,28))
2017-08-17 21:31:22,757 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('5c59ae74-7f71-4c18-a9c3-df9118d3c52c'))
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('5c59ae74-7f71-4c18-a9c3-df9118d3c52c')) with count 31
2017-08-17 21:31:22,757 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('5c59ae74-7f71-4c18-a9c3-df9118d3c52c',31,'models.Person')),id -> java.util.UUID('5c59ae74-7f71-4c18-a9c3-df9118d3c52c'))
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('5c59ae74-7f71-4c18-a9c3-df9118d3c52c',31,'models.Person')),id -> java.util.UUID('5c59ae74-7f71-4c18-a9c3-df9118d3c52c')) with count 32
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,5c59ae74-7f71-4c18-a9c3-df9118d3c52c,31))
2017-08-17 21:31:22,757 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,5c59ae74-7f71-4c18-a9c3-df9118d3c52c,31) in Set()
2017-08-17 21:31:22,767 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('5c59ae74-7f71-4c18-a9c3-df9118d3c52c',31,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('5c59ae74-7f71-4c18-a9c3-df9118d3c52c',32,'models.Person')),id -> java.util.UUID('2dd2c4b5-5411-4df7-88a7-a59147c5d8e2'))
2017-08-17 21:31:22,767 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('5c59ae74-7f71-4c18-a9c3-df9118d3c52c',31,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('5c59ae74-7f71-4c18-a9c3-df9118d3c52c',32,'models.Person')),id -> java.util.UUID('2dd2c4b5-5411-4df7-88a7-a59147c5d8e2')) with count 33
2017-08-17 21:31:22,767 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,5c59ae74-7f71-4c18-a9c3-df9118d3c52c,31), Reference(class models.Person,5c59ae74-7f71-4c18-a9c3-df9118d3c52c,32))
2017-08-17 21:31:22,767 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,5c59ae74-7f71-4c18-a9c3-df9118d3c52c,31) in Set()
2017-08-17 21:31:22,767 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,5c59ae74-7f71-4c18-a9c3-df9118d3c52c,32) in Set(Reference(class models.Person,5c59ae74-7f71-4c18-a9c3-df9118d3c52c,31))
2017-08-17 21:31:22,767 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('cfa052d3-36ee-4ac4-8112-ae24bb76d823'))
2017-08-17 21:31:22,767 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('cfa052d3-36ee-4ac4-8112-ae24bb76d823')) with count 34
2017-08-17 21:31:22,767 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('cfa052d3-36ee-4ac4-8112-ae24bb76d823',34,'models.Person')),id -> java.util.UUID('cfa052d3-36ee-4ac4-8112-ae24bb76d823'))
2017-08-17 21:31:22,767 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('cfa052d3-36ee-4ac4-8112-ae24bb76d823',34,'models.Person')),id -> java.util.UUID('cfa052d3-36ee-4ac4-8112-ae24bb76d823')) with count 35
2017-08-17 21:31:22,767 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,cfa052d3-36ee-4ac4-8112-ae24bb76d823,34))
2017-08-17 21:31:22,767 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,cfa052d3-36ee-4ac4-8112-ae24bb76d823,34) in Set()
2017-08-17 21:31:22,767 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('cfa052d3-36ee-4ac4-8112-ae24bb76d823',34,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('cfa052d3-36ee-4ac4-8112-ae24bb76d823',35,'models.Person')),id -> java.util.UUID('3e342a2b-6c81-4752-96e9-497f9c119cf9'))
2017-08-17 21:31:22,767 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('cfa052d3-36ee-4ac4-8112-ae24bb76d823',34,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('cfa052d3-36ee-4ac4-8112-ae24bb76d823',35,'models.Person')),id -> java.util.UUID('3e342a2b-6c81-4752-96e9-497f9c119cf9')) with count 36
2017-08-17 21:31:22,767 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,cfa052d3-36ee-4ac4-8112-ae24bb76d823,34), Reference(class models.Person,cfa052d3-36ee-4ac4-8112-ae24bb76d823,35))
2017-08-17 21:31:22,767 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,cfa052d3-36ee-4ac4-8112-ae24bb76d823,34) in Set()
2017-08-17 21:31:22,767 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,cfa052d3-36ee-4ac4-8112-ae24bb76d823,35) in Set(Reference(class models.Person,cfa052d3-36ee-4ac4-8112-ae24bb76d823,34))
2017-08-17 21:31:22,767 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('ada68f91-9de3-4b7d-b00c-2957298a24fe'))
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('ada68f91-9de3-4b7d-b00c-2957298a24fe')) with count 37
2017-08-17 21:31:22,777 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('ada68f91-9de3-4b7d-b00c-2957298a24fe',37,'models.Person')),id -> java.util.UUID('ada68f91-9de3-4b7d-b00c-2957298a24fe'))
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('ada68f91-9de3-4b7d-b00c-2957298a24fe',37,'models.Person')),id -> java.util.UUID('ada68f91-9de3-4b7d-b00c-2957298a24fe')) with count 38
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,ada68f91-9de3-4b7d-b00c-2957298a24fe,37))
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,ada68f91-9de3-4b7d-b00c-2957298a24fe,37) in Set()
2017-08-17 21:31:22,777 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('ada68f91-9de3-4b7d-b00c-2957298a24fe',37,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('ada68f91-9de3-4b7d-b00c-2957298a24fe',38,'models.Person')),id -> java.util.UUID('64aeb4f4-3eec-4a01-b712-22cc37a79065'))
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('ada68f91-9de3-4b7d-b00c-2957298a24fe',37,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('ada68f91-9de3-4b7d-b00c-2957298a24fe',38,'models.Person')),id -> java.util.UUID('64aeb4f4-3eec-4a01-b712-22cc37a79065')) with count 39
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,ada68f91-9de3-4b7d-b00c-2957298a24fe,37), Reference(class models.Person,ada68f91-9de3-4b7d-b00c-2957298a24fe,38))
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,ada68f91-9de3-4b7d-b00c-2957298a24fe,37) in Set()
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,ada68f91-9de3-4b7d-b00c-2957298a24fe,38) in Set(Reference(class models.Person,ada68f91-9de3-4b7d-b00c-2957298a24fe,37))
2017-08-17 21:31:22,777 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('213adc69-dd53-4de2-8b72-79ce4084e826'))
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('213adc69-dd53-4de2-8b72-79ce4084e826')) with count 40
2017-08-17 21:31:22,777 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('213adc69-dd53-4de2-8b72-79ce4084e826',40,'models.Person')),id -> java.util.UUID('213adc69-dd53-4de2-8b72-79ce4084e826'))
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('213adc69-dd53-4de2-8b72-79ce4084e826',40,'models.Person')),id -> java.util.UUID('213adc69-dd53-4de2-8b72-79ce4084e826')) with count 41
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,213adc69-dd53-4de2-8b72-79ce4084e826,40))
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,213adc69-dd53-4de2-8b72-79ce4084e826,40) in Set()
2017-08-17 21:31:22,777 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('213adc69-dd53-4de2-8b72-79ce4084e826',40,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('213adc69-dd53-4de2-8b72-79ce4084e826',41,'models.Person')),id -> java.util.UUID('03c6871e-38fc-4ae7-8f4a-3b6745d62465'))
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,213adc69-dd53-4de2-8b72-79ce4084e826,40), Reference(class models.Person,213adc69-dd53-4de2-8b72-79ce4084e826,41))
2017-08-17 21:31:22,777 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('213adc69-dd53-4de2-8b72-79ce4084e826',40,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('213adc69-dd53-4de2-8b72-79ce4084e826',41,'models.Person')),id -> java.util.UUID('03c6871e-38fc-4ae7-8f4a-3b6745d62465')) with count 42
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,213adc69-dd53-4de2-8b72-79ce4084e826,40) in Set()
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,213adc69-dd53-4de2-8b72-79ce4084e826,41) in Set(Reference(class models.Person,213adc69-dd53-4de2-8b72-79ce4084e826,40))
2017-08-17 21:31:22,787 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('97697cbc-ab6e-4c52-bd23-99fbe5388be1'))
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('97697cbc-ab6e-4c52-bd23-99fbe5388be1')) with count 43
2017-08-17 21:31:22,787 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('97697cbc-ab6e-4c52-bd23-99fbe5388be1',43,'models.Person')),id -> java.util.UUID('97697cbc-ab6e-4c52-bd23-99fbe5388be1'))
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('97697cbc-ab6e-4c52-bd23-99fbe5388be1',43,'models.Person')),id -> java.util.UUID('97697cbc-ab6e-4c52-bd23-99fbe5388be1')) with count 44
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,97697cbc-ab6e-4c52-bd23-99fbe5388be1,43))
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,97697cbc-ab6e-4c52-bd23-99fbe5388be1,43) in Set()
2017-08-17 21:31:22,787 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('97697cbc-ab6e-4c52-bd23-99fbe5388be1',43,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('97697cbc-ab6e-4c52-bd23-99fbe5388be1',44,'models.Person')),id -> java.util.UUID('e0a67ddb-2ae5-4d8b-a30b-86d923b8bf8e'))
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('97697cbc-ab6e-4c52-bd23-99fbe5388be1',43,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('97697cbc-ab6e-4c52-bd23-99fbe5388be1',44,'models.Person')),id -> java.util.UUID('e0a67ddb-2ae5-4d8b-a30b-86d923b8bf8e')) with count 45
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,97697cbc-ab6e-4c52-bd23-99fbe5388be1,43), Reference(class models.Person,97697cbc-ab6e-4c52-bd23-99fbe5388be1,44))
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,97697cbc-ab6e-4c52-bd23-99fbe5388be1,43) in Set()
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,97697cbc-ab6e-4c52-bd23-99fbe5388be1,44) in Set(Reference(class models.Person,97697cbc-ab6e-4c52-bd23-99fbe5388be1,43))
2017-08-17 21:31:22,787 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('febe8a08-25e3-4c39-9e7a-08561d2fe41c'))
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('febe8a08-25e3-4c39-9e7a-08561d2fe41c')) with count 46
2017-08-17 21:31:22,787 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('febe8a08-25e3-4c39-9e7a-08561d2fe41c',46,'models.Person')),id -> java.util.UUID('febe8a08-25e3-4c39-9e7a-08561d2fe41c'))
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('febe8a08-25e3-4c39-9e7a-08561d2fe41c',46,'models.Person')),id -> java.util.UUID('febe8a08-25e3-4c39-9e7a-08561d2fe41c')) with count 47
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,febe8a08-25e3-4c39-9e7a-08561d2fe41c,46))
2017-08-17 21:31:22,787 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,febe8a08-25e3-4c39-9e7a-08561d2fe41c,46) in Set()
2017-08-17 21:31:22,797 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('febe8a08-25e3-4c39-9e7a-08561d2fe41c',46,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('febe8a08-25e3-4c39-9e7a-08561d2fe41c',47,'models.Person')),id -> java.util.UUID('1294f9f9-ca66-4e0c-9e19-ff657e9c7167'))
2017-08-17 21:31:22,797 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('febe8a08-25e3-4c39-9e7a-08561d2fe41c',46,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('febe8a08-25e3-4c39-9e7a-08561d2fe41c',47,'models.Person')),id -> java.util.UUID('1294f9f9-ca66-4e0c-9e19-ff657e9c7167')) with count 48
2017-08-17 21:31:22,797 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,febe8a08-25e3-4c39-9e7a-08561d2fe41c,46), Reference(class models.Person,febe8a08-25e3-4c39-9e7a-08561d2fe41c,47))
2017-08-17 21:31:22,797 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,febe8a08-25e3-4c39-9e7a-08561d2fe41c,46) in Set()
2017-08-17 21:31:22,797 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,febe8a08-25e3-4c39-9e7a-08561d2fe41c,47) in Set(Reference(class models.Person,febe8a08-25e3-4c39-9e7a-08561d2fe41c,46))
2017-08-17 21:31:22,797 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0'))
2017-08-17 21:31:22,797 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0')) with count 49
2017-08-17 21:31:22,797 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0',49,'models.Person')),id -> java.util.UUID('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0'))
2017-08-17 21:31:22,797 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0',49,'models.Person')),id -> java.util.UUID('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0')) with count 50
2017-08-17 21:31:22,797 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0,49))
2017-08-17 21:31:22,797 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0,49) in Set()
2017-08-17 21:31:22,797 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0',49,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0',50,'models.Person')),id -> java.util.UUID('93d245bf-b23b-42b8-a934-ab185ad42622'))
2017-08-17 21:31:22,797 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0',49,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0',50,'models.Person')),id -> java.util.UUID('93d245bf-b23b-42b8-a934-ab185ad42622')) with count 51
2017-08-17 21:31:22,797 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0,49), Reference(class models.Person,f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0,50))
2017-08-17 21:31:22,797 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0,49) in Set()
2017-08-17 21:31:22,797 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0,50) in Set(Reference(class models.Person,f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0,49))
2017-08-17 21:31:22,797 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('a1988d3c-3870-4b70-bb52-d338588e6c1c'))
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('a1988d3c-3870-4b70-bb52-d338588e6c1c')) with count 52
2017-08-17 21:31:22,807 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('a1988d3c-3870-4b70-bb52-d338588e6c1c',52,'models.Person')),id -> java.util.UUID('a1988d3c-3870-4b70-bb52-d338588e6c1c'))
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('a1988d3c-3870-4b70-bb52-d338588e6c1c',52,'models.Person')),id -> java.util.UUID('a1988d3c-3870-4b70-bb52-d338588e6c1c')) with count 53
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,a1988d3c-3870-4b70-bb52-d338588e6c1c,52))
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,a1988d3c-3870-4b70-bb52-d338588e6c1c,52) in Set()
2017-08-17 21:31:22,807 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('a1988d3c-3870-4b70-bb52-d338588e6c1c',52,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('a1988d3c-3870-4b70-bb52-d338588e6c1c',53,'models.Person')),id -> java.util.UUID('b85bd1dd-a10e-4946-a9a4-0fdfe5fb8289'))
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('a1988d3c-3870-4b70-bb52-d338588e6c1c',52,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('a1988d3c-3870-4b70-bb52-d338588e6c1c',53,'models.Person')),id -> java.util.UUID('b85bd1dd-a10e-4946-a9a4-0fdfe5fb8289')) with count 54
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,a1988d3c-3870-4b70-bb52-d338588e6c1c,52), Reference(class models.Person,a1988d3c-3870-4b70-bb52-d338588e6c1c,53))
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,a1988d3c-3870-4b70-bb52-d338588e6c1c,52) in Set()
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,a1988d3c-3870-4b70-bb52-d338588e6c1c,53) in Set(Reference(class models.Person,a1988d3c-3870-4b70-bb52-d338588e6c1c,52))
2017-08-17 21:31:22,807 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('d7aaff4a-38be-4d34-a2f2-d120e4411012'))
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('d7aaff4a-38be-4d34-a2f2-d120e4411012')) with count 55
2017-08-17 21:31:22,807 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('d7aaff4a-38be-4d34-a2f2-d120e4411012',55,'models.Person')),id -> java.util.UUID('d7aaff4a-38be-4d34-a2f2-d120e4411012'))
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,d7aaff4a-38be-4d34-a2f2-d120e4411012,55))
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('d7aaff4a-38be-4d34-a2f2-d120e4411012',55,'models.Person')),id -> java.util.UUID('d7aaff4a-38be-4d34-a2f2-d120e4411012')) with count 56
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,d7aaff4a-38be-4d34-a2f2-d120e4411012,55) in Set()
2017-08-17 21:31:22,807 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('d7aaff4a-38be-4d34-a2f2-d120e4411012',55,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('d7aaff4a-38be-4d34-a2f2-d120e4411012',56,'models.Person')),id -> java.util.UUID('528406e3-6d1e-42a9-9f08-bb0f51a81264'))
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('d7aaff4a-38be-4d34-a2f2-d120e4411012',55,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('d7aaff4a-38be-4d34-a2f2-d120e4411012',56,'models.Person')),id -> java.util.UUID('528406e3-6d1e-42a9-9f08-bb0f51a81264')) with count 57
2017-08-17 21:31:22,807 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,d7aaff4a-38be-4d34-a2f2-d120e4411012,55), Reference(class models.Person,d7aaff4a-38be-4d34-a2f2-d120e4411012,56))
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,d7aaff4a-38be-4d34-a2f2-d120e4411012,55) in Set()
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,d7aaff4a-38be-4d34-a2f2-d120e4411012,56) in Set(Reference(class models.Person,d7aaff4a-38be-4d34-a2f2-d120e4411012,55))
2017-08-17 21:31:22,817 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('21b3a759-c3b1-4259-9f79-a9ff57f718e4'))
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('21b3a759-c3b1-4259-9f79-a9ff57f718e4')) with count 58
2017-08-17 21:31:22,817 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('21b3a759-c3b1-4259-9f79-a9ff57f718e4',58,'models.Person')),id -> java.util.UUID('21b3a759-c3b1-4259-9f79-a9ff57f718e4'))
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('21b3a759-c3b1-4259-9f79-a9ff57f718e4',58,'models.Person')),id -> java.util.UUID('21b3a759-c3b1-4259-9f79-a9ff57f718e4')) with count 59
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,21b3a759-c3b1-4259-9f79-a9ff57f718e4,58))
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,21b3a759-c3b1-4259-9f79-a9ff57f718e4,58) in Set()
2017-08-17 21:31:22,817 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('21b3a759-c3b1-4259-9f79-a9ff57f718e4',58,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('21b3a759-c3b1-4259-9f79-a9ff57f718e4',59,'models.Person')),id -> java.util.UUID('a9391241-6b47-4a2d-b4e7-59d97d5df405'))
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('21b3a759-c3b1-4259-9f79-a9ff57f718e4',58,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('21b3a759-c3b1-4259-9f79-a9ff57f718e4',59,'models.Person')),id -> java.util.UUID('a9391241-6b47-4a2d-b4e7-59d97d5df405')) with count 60
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,21b3a759-c3b1-4259-9f79-a9ff57f718e4,58), Reference(class models.Person,21b3a759-c3b1-4259-9f79-a9ff57f718e4,59))
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,21b3a759-c3b1-4259-9f79-a9ff57f718e4,58) in Set()
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,21b3a759-c3b1-4259-9f79-a9ff57f718e4,59) in Set(Reference(class models.Person,21b3a759-c3b1-4259-9f79-a9ff57f718e4,58))
2017-08-17 21:31:22,817 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc'))
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc')) with count 61
2017-08-17 21:31:22,817 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc',61,'models.Person')),id -> java.util.UUID('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc'))
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc',61,'models.Person')),id -> java.util.UUID('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc')) with count 62
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc,61))
2017-08-17 21:31:22,817 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc,61) in Set()
2017-08-17 21:31:22,827 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc',61,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc',62,'models.Person')),id -> java.util.UUID('c4a06ecc-b6ab-402b-b285-d43afe428023'))
2017-08-17 21:31:22,827 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc,61), Reference(class models.Person,f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc,62))
2017-08-17 21:31:22,827 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc',61,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc',62,'models.Person')),id -> java.util.UUID('c4a06ecc-b6ab-402b-b285-d43afe428023')) with count 63
2017-08-17 21:31:22,827 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc,61) in Set()
2017-08-17 21:31:22,827 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc,62) in Set(Reference(class models.Person,f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc,61))
2017-08-17 21:31:22,827 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('13ed16b2-d811-41cd-9708-30942c232238'))
2017-08-17 21:31:22,827 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('13ed16b2-d811-41cd-9708-30942c232238')) with count 64
2017-08-17 21:31:22,827 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('13ed16b2-d811-41cd-9708-30942c232238',64,'models.Person')),id -> java.util.UUID('13ed16b2-d811-41cd-9708-30942c232238'))
2017-08-17 21:31:22,827 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,13ed16b2-d811-41cd-9708-30942c232238,64))
2017-08-17 21:31:22,827 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('13ed16b2-d811-41cd-9708-30942c232238',64,'models.Person')),id -> java.util.UUID('13ed16b2-d811-41cd-9708-30942c232238')) with count 65
2017-08-17 21:31:22,827 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,13ed16b2-d811-41cd-9708-30942c232238,64) in Set()
2017-08-17 21:31:22,827 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('13ed16b2-d811-41cd-9708-30942c232238',64,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('13ed16b2-d811-41cd-9708-30942c232238',65,'models.Person')),id -> java.util.UUID('150f88f0-9525-43b1-810d-bb6502ec94db'))
2017-08-17 21:31:22,827 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('13ed16b2-d811-41cd-9708-30942c232238',64,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('13ed16b2-d811-41cd-9708-30942c232238',65,'models.Person')),id -> java.util.UUID('150f88f0-9525-43b1-810d-bb6502ec94db')) with count 66
2017-08-17 21:31:22,827 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,13ed16b2-d811-41cd-9708-30942c232238,64), Reference(class models.Person,13ed16b2-d811-41cd-9708-30942c232238,65))
2017-08-17 21:31:22,827 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,13ed16b2-d811-41cd-9708-30942c232238,64) in Set()
2017-08-17 21:31:22,827 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,13ed16b2-d811-41cd-9708-30942c232238,65) in Set(Reference(class models.Person,13ed16b2-d811-41cd-9708-30942c232238,64))
2017-08-17 21:31:22,827 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('8f0711dd-ae9c-4a8c-95cf-6741427d3896'))
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('8f0711dd-ae9c-4a8c-95cf-6741427d3896')) with count 67
2017-08-17 21:31:22,837 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('8f0711dd-ae9c-4a8c-95cf-6741427d3896',67,'models.Person')),id -> java.util.UUID('8f0711dd-ae9c-4a8c-95cf-6741427d3896'))
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('8f0711dd-ae9c-4a8c-95cf-6741427d3896',67,'models.Person')),id -> java.util.UUID('8f0711dd-ae9c-4a8c-95cf-6741427d3896')) with count 68
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,8f0711dd-ae9c-4a8c-95cf-6741427d3896,67))
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,8f0711dd-ae9c-4a8c-95cf-6741427d3896,67) in Set()
2017-08-17 21:31:22,837 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('8f0711dd-ae9c-4a8c-95cf-6741427d3896',67,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('8f0711dd-ae9c-4a8c-95cf-6741427d3896',68,'models.Person')),id -> java.util.UUID('50a6a849-fbf4-4daa-b96a-12b1d5270086'))
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('8f0711dd-ae9c-4a8c-95cf-6741427d3896',67,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('8f0711dd-ae9c-4a8c-95cf-6741427d3896',68,'models.Person')),id -> java.util.UUID('50a6a849-fbf4-4daa-b96a-12b1d5270086')) with count 69
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,8f0711dd-ae9c-4a8c-95cf-6741427d3896,67), Reference(class models.Person,8f0711dd-ae9c-4a8c-95cf-6741427d3896,68))
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,8f0711dd-ae9c-4a8c-95cf-6741427d3896,67) in Set()
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,8f0711dd-ae9c-4a8c-95cf-6741427d3896,68) in Set(Reference(class models.Person,8f0711dd-ae9c-4a8c-95cf-6741427d3896,67))
2017-08-17 21:31:22,837 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('7858033e-e06f-4de2-afc4-42772edfabc5'))
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('7858033e-e06f-4de2-afc4-42772edfabc5')) with count 70
2017-08-17 21:31:22,837 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('7858033e-e06f-4de2-afc4-42772edfabc5',70,'models.Person')),id -> java.util.UUID('7858033e-e06f-4de2-afc4-42772edfabc5'))
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('7858033e-e06f-4de2-afc4-42772edfabc5',70,'models.Person')),id -> java.util.UUID('7858033e-e06f-4de2-afc4-42772edfabc5')) with count 71
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,7858033e-e06f-4de2-afc4-42772edfabc5,70))
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,7858033e-e06f-4de2-afc4-42772edfabc5,70) in Set()
2017-08-17 21:31:22,837 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('7858033e-e06f-4de2-afc4-42772edfabc5',70,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('7858033e-e06f-4de2-afc4-42772edfabc5',71,'models.Person')),id -> java.util.UUID('26de74d3-cb66-400d-b05b-1e811434f81e'))
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('7858033e-e06f-4de2-afc4-42772edfabc5',70,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('7858033e-e06f-4de2-afc4-42772edfabc5',71,'models.Person')),id -> java.util.UUID('26de74d3-cb66-400d-b05b-1e811434f81e')) with count 72
2017-08-17 21:31:22,837 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,7858033e-e06f-4de2-afc4-42772edfabc5,70), Reference(class models.Person,7858033e-e06f-4de2-afc4-42772edfabc5,71))
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,7858033e-e06f-4de2-afc4-42772edfabc5,70) in Set()
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,7858033e-e06f-4de2-afc4-42772edfabc5,71) in Set(Reference(class models.Person,7858033e-e06f-4de2-afc4-42772edfabc5,70))
2017-08-17 21:31:22,847 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('89de7f13-8e17-4513-a495-1129f2d25c92'))
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('89de7f13-8e17-4513-a495-1129f2d25c92')) with count 73
2017-08-17 21:31:22,847 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('89de7f13-8e17-4513-a495-1129f2d25c92',73,'models.Person')),id -> java.util.UUID('89de7f13-8e17-4513-a495-1129f2d25c92'))
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('89de7f13-8e17-4513-a495-1129f2d25c92',73,'models.Person')),id -> java.util.UUID('89de7f13-8e17-4513-a495-1129f2d25c92')) with count 74
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,89de7f13-8e17-4513-a495-1129f2d25c92,73))
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,89de7f13-8e17-4513-a495-1129f2d25c92,73) in Set()
2017-08-17 21:31:22,847 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('89de7f13-8e17-4513-a495-1129f2d25c92',73,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('89de7f13-8e17-4513-a495-1129f2d25c92',74,'models.Person')),id -> java.util.UUID('91532353-c1c1-446e-83bb-a241fba76a29'))
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('89de7f13-8e17-4513-a495-1129f2d25c92',73,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('89de7f13-8e17-4513-a495-1129f2d25c92',74,'models.Person')),id -> java.util.UUID('91532353-c1c1-446e-83bb-a241fba76a29')) with count 75
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,89de7f13-8e17-4513-a495-1129f2d25c92,73), Reference(class models.Person,89de7f13-8e17-4513-a495-1129f2d25c92,74))
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,89de7f13-8e17-4513-a495-1129f2d25c92,73) in Set()
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,89de7f13-8e17-4513-a495-1129f2d25c92,74) in Set(Reference(class models.Person,89de7f13-8e17-4513-a495-1129f2d25c92,73))
2017-08-17 21:31:22,847 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('d61d7785-067d-49f2-92f7-406047451470'))
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('d61d7785-067d-49f2-92f7-406047451470')) with count 76
2017-08-17 21:31:22,847 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('d61d7785-067d-49f2-92f7-406047451470',76,'models.Person')),id -> java.util.UUID('d61d7785-067d-49f2-92f7-406047451470'))
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-7] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('d61d7785-067d-49f2-92f7-406047451470',76,'models.Person')),id -> java.util.UUID('d61d7785-067d-49f2-92f7-406047451470')) with count 77
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,d61d7785-067d-49f2-92f7-406047451470,76))
2017-08-17 21:31:22,847 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,d61d7785-067d-49f2-92f7-406047451470,76) in Set()
2017-08-17 21:31:22,857 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('d61d7785-067d-49f2-92f7-406047451470',76,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('d61d7785-067d-49f2-92f7-406047451470',77,'models.Person')),id -> java.util.UUID('81cee60a-948e-4e12-8475-024dd3d8759d'))
2017-08-17 21:31:22,857 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('d61d7785-067d-49f2-92f7-406047451470',76,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('d61d7785-067d-49f2-92f7-406047451470',77,'models.Person')),id -> java.util.UUID('81cee60a-948e-4e12-8475-024dd3d8759d')) with count 78
2017-08-17 21:31:22,857 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,d61d7785-067d-49f2-92f7-406047451470,76), Reference(class models.Person,d61d7785-067d-49f2-92f7-406047451470,77))
2017-08-17 21:31:22,857 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,d61d7785-067d-49f2-92f7-406047451470,76) in Set()
2017-08-17 21:31:22,857 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,d61d7785-067d-49f2-92f7-406047451470,77) in Set(Reference(class models.Person,d61d7785-067d-49f2-92f7-406047451470,76))
2017-08-17 21:31:22,857 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de'))
2017-08-17 21:31:22,857 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de')) with count 79
2017-08-17 21:31:22,857 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de',79,'models.Person')),id -> java.util.UUID('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de'))
2017-08-17 21:31:22,857 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,6a04a7ad-8c2b-45d1-ae72-0f49f08b87de,79))
2017-08-17 21:31:22,857 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de',79,'models.Person')),id -> java.util.UUID('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de')) with count 80
2017-08-17 21:31:22,857 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,6a04a7ad-8c2b-45d1-ae72-0f49f08b87de,79) in Set()
2017-08-17 21:31:22,857 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de',79,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de',80,'models.Person')),id -> java.util.UUID('a750b390-d70b-4e12-97e8-aad842a8686f'))
2017-08-17 21:31:22,857 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de',79,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de',80,'models.Person')),id -> java.util.UUID('a750b390-d70b-4e12-97e8-aad842a8686f')) with count 81
2017-08-17 21:31:22,857 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,6a04a7ad-8c2b-45d1-ae72-0f49f08b87de,79), Reference(class models.Person,6a04a7ad-8c2b-45d1-ae72-0f49f08b87de,80))
2017-08-17 21:31:22,857 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,6a04a7ad-8c2b-45d1-ae72-0f49f08b87de,79) in Set()
2017-08-17 21:31:22,857 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,6a04a7ad-8c2b-45d1-ae72-0f49f08b87de,80) in Set(Reference(class models.Person,6a04a7ad-8c2b-45d1-ae72-0f49f08b87de,79))
2017-08-17 21:31:22,857 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('53132c50-b3d5-457b-af02-b84b1689452d'))
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('53132c50-b3d5-457b-af02-b84b1689452d')) with count 82
2017-08-17 21:31:22,867 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('53132c50-b3d5-457b-af02-b84b1689452d',82,'models.Person')),id -> java.util.UUID('53132c50-b3d5-457b-af02-b84b1689452d'))
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('53132c50-b3d5-457b-af02-b84b1689452d',82,'models.Person')),id -> java.util.UUID('53132c50-b3d5-457b-af02-b84b1689452d')) with count 83
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,53132c50-b3d5-457b-af02-b84b1689452d,82))
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,53132c50-b3d5-457b-af02-b84b1689452d,82) in Set()
2017-08-17 21:31:22,867 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('53132c50-b3d5-457b-af02-b84b1689452d',82,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('53132c50-b3d5-457b-af02-b84b1689452d',83,'models.Person')),id -> java.util.UUID('da564d6f-f7f9-4968-9ee7-78c0236c30d0'))
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('53132c50-b3d5-457b-af02-b84b1689452d',82,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('53132c50-b3d5-457b-af02-b84b1689452d',83,'models.Person')),id -> java.util.UUID('da564d6f-f7f9-4968-9ee7-78c0236c30d0')) with count 84
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,53132c50-b3d5-457b-af02-b84b1689452d,82), Reference(class models.Person,53132c50-b3d5-457b-af02-b84b1689452d,83))
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,53132c50-b3d5-457b-af02-b84b1689452d,82) in Set()
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,53132c50-b3d5-457b-af02-b84b1689452d,83) in Set(Reference(class models.Person,53132c50-b3d5-457b-af02-b84b1689452d,82))
2017-08-17 21:31:22,867 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('e2b5898b-e288-4be7-9795-a12e2384fd8e'))
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('e2b5898b-e288-4be7-9795-a12e2384fd8e')) with count 85
2017-08-17 21:31:22,867 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('e2b5898b-e288-4be7-9795-a12e2384fd8e',85,'models.Person')),id -> java.util.UUID('e2b5898b-e288-4be7-9795-a12e2384fd8e'))
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('e2b5898b-e288-4be7-9795-a12e2384fd8e',85,'models.Person')),id -> java.util.UUID('e2b5898b-e288-4be7-9795-a12e2384fd8e')) with count 86
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,e2b5898b-e288-4be7-9795-a12e2384fd8e,85))
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,e2b5898b-e288-4be7-9795-a12e2384fd8e,85) in Set()
2017-08-17 21:31:22,867 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('e2b5898b-e288-4be7-9795-a12e2384fd8e',85,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('e2b5898b-e288-4be7-9795-a12e2384fd8e',86,'models.Person')),id -> java.util.UUID('ba237f6e-b882-4b7f-b25c-0f1f4fbab691'))
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('e2b5898b-e288-4be7-9795-a12e2384fd8e',85,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('e2b5898b-e288-4be7-9795-a12e2384fd8e',86,'models.Person')),id -> java.util.UUID('ba237f6e-b882-4b7f-b25c-0f1f4fbab691')) with count 87
2017-08-17 21:31:22,867 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,e2b5898b-e288-4be7-9795-a12e2384fd8e,85), Reference(class models.Person,e2b5898b-e288-4be7-9795-a12e2384fd8e,86))
2017-08-17 21:31:22,877 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,e2b5898b-e288-4be7-9795-a12e2384fd8e,85) in Set()
2017-08-17 21:31:22,877 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,e2b5898b-e288-4be7-9795-a12e2384fd8e,86) in Set(Reference(class models.Person,e2b5898b-e288-4be7-9795-a12e2384fd8e,85))
2017-08-17 21:31:22,877 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c'))
2017-08-17 21:31:22,877 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c')) with count 88
2017-08-17 21:31:22,877 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c',88,'models.Person')),id -> java.util.UUID('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c'))
2017-08-17 21:31:22,877 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c',88,'models.Person')),id -> java.util.UUID('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c')) with count 89
2017-08-17 21:31:22,877 TRACE [ForkJoinPool-1-worker-5] Person$[Person] - including Set(Reference(class models.Person,2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c,88))
2017-08-17 21:31:22,877 TRACE [ForkJoinPool-1-worker-5] Referee[Person] - included reference Reference(class models.Person,2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c,88) in Set()
2017-08-17 21:31:22,877 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c',88,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c',89,'models.Person')),id -> java.util.UUID('3788375c-6bdc-4fe7-9a19-38ed8a3f2600'))
2017-08-17 21:31:22,877 TRACE [ForkJoinPool-1-worker-5] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c',88,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c',89,'models.Person')),id -> java.util.UUID('3788375c-6bdc-4fe7-9a19-38ed8a3f2600')) with count 90
2017-08-17 21:31:22,877 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c,88), Reference(class models.Person,2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c,89))
2017-08-17 21:31:22,877 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c,88) in Set()
2017-08-17 21:31:22,877 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c,89) in Set(Reference(class models.Person,2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c,88))
2017-08-17 21:31:23,878 INFO  [main] Counter[Person] - counter is 90
2017-08-17 21:31:23,878 INFO  [main] Keeper[Person] - versions of size (60) contains: 
	(5149b6a8-c8ee-46e1-9e2c-f659ce99a51f,Map(4 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f')), 5 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f',4,'models.Person')),id -> java.util.UUID('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f'))))
	(ba237f6e-b882-4b7f-b25c-0f1f4fbab691,Map(87 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('e2b5898b-e288-4be7-9795-a12e2384fd8e',85,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('e2b5898b-e288-4be7-9795-a12e2384fd8e',86,'models.Person')),id -> java.util.UUID('ba237f6e-b882-4b7f-b25c-0f1f4fbab691'))))
	(c1d3d0ee-dc83-465e-9c49-0e87e2943457,Map(25 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('c1d3d0ee-dc83-465e-9c49-0e87e2943457')), 26 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('c1d3d0ee-dc83-465e-9c49-0e87e2943457',25,'models.Person')),id -> java.util.UUID('c1d3d0ee-dc83-465e-9c49-0e87e2943457'))))
	(69380850-da79-472f-9d39-27c355c9f2ec,Map(16 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('69380850-da79-472f-9d39-27c355c9f2ec')), 17 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('69380850-da79-472f-9d39-27c355c9f2ec',16,'models.Person')),id -> java.util.UUID('69380850-da79-472f-9d39-27c355c9f2ec'))))
	(da564d6f-f7f9-4968-9ee7-78c0236c30d0,Map(84 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('53132c50-b3d5-457b-af02-b84b1689452d',82,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('53132c50-b3d5-457b-af02-b84b1689452d',83,'models.Person')),id -> java.util.UUID('da564d6f-f7f9-4968-9ee7-78c0236c30d0'))))
	(6a04a7ad-8c2b-45d1-ae72-0f49f08b87de,Map(79 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de')), 80 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de',79,'models.Person')),id -> java.util.UUID('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de'))))
	(0dee8641-b122-48e1-a473-a35ede8dd0e3,Map(12 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('14f7011e-e789-4a9b-a959-61b6e4839b36',10,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('14f7011e-e789-4a9b-a959-61b6e4839b36',11,'models.Person')),id -> java.util.UUID('0dee8641-b122-48e1-a473-a35ede8dd0e3'))))
	(54241de0-46ab-47b8-8351-f852bd651059,Map(9 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('303b7a81-9ff5-4628-a759-96f7196b6cdb',7,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('303b7a81-9ff5-4628-a759-96f7196b6cdb',8,'models.Person')),id -> java.util.UUID('54241de0-46ab-47b8-8351-f852bd651059'))))
	(c4a06ecc-b6ab-402b-b285-d43afe428023,Map(63 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc',61,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc',62,'models.Person')),id -> java.util.UUID('c4a06ecc-b6ab-402b-b285-d43afe428023'))))
	(53132c50-b3d5-457b-af02-b84b1689452d,Map(82 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('53132c50-b3d5-457b-af02-b84b1689452d')), 83 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('53132c50-b3d5-457b-af02-b84b1689452d',82,'models.Person')),id -> java.util.UUID('53132c50-b3d5-457b-af02-b84b1689452d'))))
	(febe8a08-25e3-4c39-9e7a-08561d2fe41c,Map(46 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('febe8a08-25e3-4c39-9e7a-08561d2fe41c')), 47 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('febe8a08-25e3-4c39-9e7a-08561d2fe41c',46,'models.Person')),id -> java.util.UUID('febe8a08-25e3-4c39-9e7a-08561d2fe41c'))))
	(16965589-cf80-43d3-a299-7996e88d3d58,Map(22 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('16965589-cf80-43d3-a299-7996e88d3d58')), 23 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('16965589-cf80-43d3-a299-7996e88d3d58',22,'models.Person')),id -> java.util.UUID('16965589-cf80-43d3-a299-7996e88d3d58'))))
	(d7aaff4a-38be-4d34-a2f2-d120e4411012,Map(55 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('d7aaff4a-38be-4d34-a2f2-d120e4411012')), 56 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('d7aaff4a-38be-4d34-a2f2-d120e4411012',55,'models.Person')),id -> java.util.UUID('d7aaff4a-38be-4d34-a2f2-d120e4411012'))))
	(a9391241-6b47-4a2d-b4e7-59d97d5df405,Map(60 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('21b3a759-c3b1-4259-9f79-a9ff57f718e4',58,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('21b3a759-c3b1-4259-9f79-a9ff57f718e4',59,'models.Person')),id -> java.util.UUID('a9391241-6b47-4a2d-b4e7-59d97d5df405'))))
	(89de7f13-8e17-4513-a495-1129f2d25c92,Map(73 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('89de7f13-8e17-4513-a495-1129f2d25c92')), 74 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('89de7f13-8e17-4513-a495-1129f2d25c92',73,'models.Person')),id -> java.util.UUID('89de7f13-8e17-4513-a495-1129f2d25c92'))))
	(4a0f09e8-e8d3-4001-a57b-8db86e5118dc,Map(21 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('1cb218be-7eb5-4320-9a2d-9229cd048251',19,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('1cb218be-7eb5-4320-9a2d-9229cd048251',20,'models.Person')),id -> java.util.UUID('4a0f09e8-e8d3-4001-a57b-8db86e5118dc'))))
	(13ed16b2-d811-41cd-9708-30942c232238,Map(64 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('13ed16b2-d811-41cd-9708-30942c232238')), 65 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('13ed16b2-d811-41cd-9708-30942c232238',64,'models.Person')),id -> java.util.UUID('13ed16b2-d811-41cd-9708-30942c232238'))))
	(7858033e-e06f-4de2-afc4-42772edfabc5,Map(70 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('7858033e-e06f-4de2-afc4-42772edfabc5')), 71 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('7858033e-e06f-4de2-afc4-42772edfabc5',70,'models.Person')),id -> java.util.UUID('7858033e-e06f-4de2-afc4-42772edfabc5'))))
	(81cee60a-948e-4e12-8475-024dd3d8759d,Map(78 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('d61d7785-067d-49f2-92f7-406047451470',76,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('d61d7785-067d-49f2-92f7-406047451470',77,'models.Person')),id -> java.util.UUID('81cee60a-948e-4e12-8475-024dd3d8759d'))))
	(c639c4b7-3566-4f3a-9638-e27dcd7d4548,Map(3 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('279f1813-e8b7-484e-85cb-e988643380d5',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('279f1813-e8b7-484e-85cb-e988643380d5',2,'models.Person')),id -> java.util.UUID('c639c4b7-3566-4f3a-9638-e27dcd7d4548'))))
	(14f7011e-e789-4a9b-a959-61b6e4839b36,Map(10 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('14f7011e-e789-4a9b-a959-61b6e4839b36')), 11 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('14f7011e-e789-4a9b-a959-61b6e4839b36',10,'models.Person')),id -> java.util.UUID('14f7011e-e789-4a9b-a959-61b6e4839b36'))))
	(50a6a849-fbf4-4daa-b96a-12b1d5270086,Map(69 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('8f0711dd-ae9c-4a8c-95cf-6741427d3896',67,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('8f0711dd-ae9c-4a8c-95cf-6741427d3896',68,'models.Person')),id -> java.util.UUID('50a6a849-fbf4-4daa-b96a-12b1d5270086'))))
	(303b7a81-9ff5-4628-a759-96f7196b6cdb,Map(7 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('303b7a81-9ff5-4628-a759-96f7196b6cdb')), 8 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('303b7a81-9ff5-4628-a759-96f7196b6cdb',7,'models.Person')),id -> java.util.UUID('303b7a81-9ff5-4628-a759-96f7196b6cdb'))))
	(97697cbc-ab6e-4c52-bd23-99fbe5388be1,Map(43 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('97697cbc-ab6e-4c52-bd23-99fbe5388be1')), 44 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('97697cbc-ab6e-4c52-bd23-99fbe5388be1',43,'models.Person')),id -> java.util.UUID('97697cbc-ab6e-4c52-bd23-99fbe5388be1'))))
	(fcd33bb3-989d-4425-bd40-d9be0e3ee6b9,Map(24 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('16965589-cf80-43d3-a299-7996e88d3d58',22,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('16965589-cf80-43d3-a299-7996e88d3d58',23,'models.Person')),id -> java.util.UUID('fcd33bb3-989d-4425-bd40-d9be0e3ee6b9'))))
	(89d57ab2-1e2f-4e13-ac9a-8d119abedefb,Map(18 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('69380850-da79-472f-9d39-27c355c9f2ec',16,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('69380850-da79-472f-9d39-27c355c9f2ec',17,'models.Person')),id -> java.util.UUID('89d57ab2-1e2f-4e13-ac9a-8d119abedefb'))))
	(245bc715-7443-4d08-bab6-69ca5cef0c50,Map(28 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('245bc715-7443-4d08-bab6-69ca5cef0c50')), 29 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('245bc715-7443-4d08-bab6-69ca5cef0c50',28,'models.Person')),id -> java.util.UUID('245bc715-7443-4d08-bab6-69ca5cef0c50'))))
	(e2b5898b-e288-4be7-9795-a12e2384fd8e,Map(85 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('e2b5898b-e288-4be7-9795-a12e2384fd8e')), 86 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('e2b5898b-e288-4be7-9795-a12e2384fd8e',85,'models.Person')),id -> java.util.UUID('e2b5898b-e288-4be7-9795-a12e2384fd8e'))))
	(2b271dae-1dbd-43cf-becf-2a76e9660958,Map(6 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f',4,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('5149b6a8-c8ee-46e1-9e2c-f659ce99a51f',5,'models.Person')),id -> java.util.UUID('2b271dae-1dbd-43cf-becf-2a76e9660958'))))
	(2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c,Map(88 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c')), 89 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c',88,'models.Person')),id -> java.util.UUID('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c'))))
	(528406e3-6d1e-42a9-9f08-bb0f51a81264,Map(57 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('d7aaff4a-38be-4d34-a2f2-d120e4411012',55,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('d7aaff4a-38be-4d34-a2f2-d120e4411012',56,'models.Person')),id -> java.util.UUID('528406e3-6d1e-42a9-9f08-bb0f51a81264'))))
	(d61d7785-067d-49f2-92f7-406047451470,Map(76 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('d61d7785-067d-49f2-92f7-406047451470')), 77 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('d61d7785-067d-49f2-92f7-406047451470',76,'models.Person')),id -> java.util.UUID('d61d7785-067d-49f2-92f7-406047451470'))))
	(21b3a759-c3b1-4259-9f79-a9ff57f718e4,Map(58 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('21b3a759-c3b1-4259-9f79-a9ff57f718e4')), 59 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('21b3a759-c3b1-4259-9f79-a9ff57f718e4',58,'models.Person')),id -> java.util.UUID('21b3a759-c3b1-4259-9f79-a9ff57f718e4'))))
	(213adc69-dd53-4de2-8b72-79ce4084e826,Map(40 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('213adc69-dd53-4de2-8b72-79ce4084e826')), 41 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('213adc69-dd53-4de2-8b72-79ce4084e826',40,'models.Person')),id -> java.util.UUID('213adc69-dd53-4de2-8b72-79ce4084e826'))))
	(3e342a2b-6c81-4752-96e9-497f9c119cf9,Map(36 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('cfa052d3-36ee-4ac4-8112-ae24bb76d823',34,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('cfa052d3-36ee-4ac4-8112-ae24bb76d823',35,'models.Person')),id -> java.util.UUID('3e342a2b-6c81-4752-96e9-497f9c119cf9'))))
	(ada68f91-9de3-4b7d-b00c-2957298a24fe,Map(37 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('ada68f91-9de3-4b7d-b00c-2957298a24fe')), 38 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('ada68f91-9de3-4b7d-b00c-2957298a24fe',37,'models.Person')),id -> java.util.UUID('ada68f91-9de3-4b7d-b00c-2957298a24fe'))))
	(8f0711dd-ae9c-4a8c-95cf-6741427d3896,Map(67 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('8f0711dd-ae9c-4a8c-95cf-6741427d3896')), 68 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('8f0711dd-ae9c-4a8c-95cf-6741427d3896',67,'models.Person')),id -> java.util.UUID('8f0711dd-ae9c-4a8c-95cf-6741427d3896'))))
	(d550d74e-89ab-45b4-9db5-9620e5e35861,Map(27 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('c1d3d0ee-dc83-465e-9c49-0e87e2943457',25,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('c1d3d0ee-dc83-465e-9c49-0e87e2943457',26,'models.Person')),id -> java.util.UUID('d550d74e-89ab-45b4-9db5-9620e5e35861'))))
	(33227633-52bc-46dc-8389-da8671771e10,Map(13 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('33227633-52bc-46dc-8389-da8671771e10')), 14 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('33227633-52bc-46dc-8389-da8671771e10',13,'models.Person')),id -> java.util.UUID('33227633-52bc-46dc-8389-da8671771e10'))))
	(03c6871e-38fc-4ae7-8f4a-3b6745d62465,Map(42 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('213adc69-dd53-4de2-8b72-79ce4084e826',40,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('213adc69-dd53-4de2-8b72-79ce4084e826',41,'models.Person')),id -> java.util.UUID('03c6871e-38fc-4ae7-8f4a-3b6745d62465'))))
	(91532353-c1c1-446e-83bb-a241fba76a29,Map(75 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('89de7f13-8e17-4513-a495-1129f2d25c92',73,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('89de7f13-8e17-4513-a495-1129f2d25c92',74,'models.Person')),id -> java.util.UUID('91532353-c1c1-446e-83bb-a241fba76a29'))))
	(1294f9f9-ca66-4e0c-9e19-ff657e9c7167,Map(48 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('febe8a08-25e3-4c39-9e7a-08561d2fe41c',46,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('febe8a08-25e3-4c39-9e7a-08561d2fe41c',47,'models.Person')),id -> java.util.UUID('1294f9f9-ca66-4e0c-9e19-ff657e9c7167'))))
	(93d245bf-b23b-42b8-a934-ab185ad42622,Map(51 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0',49,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0',50,'models.Person')),id -> java.util.UUID('93d245bf-b23b-42b8-a934-ab185ad42622'))))
	(a1988d3c-3870-4b70-bb52-d338588e6c1c,Map(52 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('a1988d3c-3870-4b70-bb52-d338588e6c1c')), 53 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('a1988d3c-3870-4b70-bb52-d338588e6c1c',52,'models.Person')),id -> java.util.UUID('a1988d3c-3870-4b70-bb52-d338588e6c1c'))))
	(5c59ae74-7f71-4c18-a9c3-df9118d3c52c,Map(31 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('5c59ae74-7f71-4c18-a9c3-df9118d3c52c')), 32 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('5c59ae74-7f71-4c18-a9c3-df9118d3c52c',31,'models.Person')),id -> java.util.UUID('5c59ae74-7f71-4c18-a9c3-df9118d3c52c'))))
	(279f1813-e8b7-484e-85cb-e988643380d5,Map(1 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('279f1813-e8b7-484e-85cb-e988643380d5')), 2 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('279f1813-e8b7-484e-85cb-e988643380d5',1,'models.Person')),id -> java.util.UUID('279f1813-e8b7-484e-85cb-e988643380d5'))))
	(f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0,Map(49 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0')), 50 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0',49,'models.Person')),id -> java.util.UUID('f7d7dbbe-f2b3-49e1-96dc-5a925f1116c0'))))
	(1cb218be-7eb5-4320-9a2d-9229cd048251,Map(19 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('1cb218be-7eb5-4320-9a2d-9229cd048251')), 20 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('1cb218be-7eb5-4320-9a2d-9229cd048251',19,'models.Person')),id -> java.util.UUID('1cb218be-7eb5-4320-9a2d-9229cd048251'))))
	(26de74d3-cb66-400d-b05b-1e811434f81e,Map(72 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('7858033e-e06f-4de2-afc4-42772edfabc5',70,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('7858033e-e06f-4de2-afc4-42772edfabc5',71,'models.Person')),id -> java.util.UUID('26de74d3-cb66-400d-b05b-1e811434f81e'))))
	(37675636-09fe-4d59-b449-04ba3337697b,Map(15 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('33227633-52bc-46dc-8389-da8671771e10',13,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('33227633-52bc-46dc-8389-da8671771e10',14,'models.Person')),id -> java.util.UUID('37675636-09fe-4d59-b449-04ba3337697b'))))
	(cfa052d3-36ee-4ac4-8112-ae24bb76d823,Map(34 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('cfa052d3-36ee-4ac4-8112-ae24bb76d823')), 35 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('cfa052d3-36ee-4ac4-8112-ae24bb76d823',34,'models.Person')),id -> java.util.UUID('cfa052d3-36ee-4ac4-8112-ae24bb76d823'))))
	(64aeb4f4-3eec-4a01-b712-22cc37a79065,Map(39 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('ada68f91-9de3-4b7d-b00c-2957298a24fe',37,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('ada68f91-9de3-4b7d-b00c-2957298a24fe',38,'models.Person')),id -> java.util.UUID('64aeb4f4-3eec-4a01-b712-22cc37a79065'))))
	(f0c9f408-06fd-4128-afaf-1804bacf687a,Map(30 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('245bc715-7443-4d08-bab6-69ca5cef0c50',28,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('245bc715-7443-4d08-bab6-69ca5cef0c50',29,'models.Person')),id -> java.util.UUID('f0c9f408-06fd-4128-afaf-1804bacf687a'))))
	(150f88f0-9525-43b1-810d-bb6502ec94db,Map(66 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('13ed16b2-d811-41cd-9708-30942c232238',64,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('13ed16b2-d811-41cd-9708-30942c232238',65,'models.Person')),id -> java.util.UUID('150f88f0-9525-43b1-810d-bb6502ec94db'))))
	(f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc,Map(61 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc')), 62 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc',61,'models.Person')),id -> java.util.UUID('f39e08a7-25f9-4ec5-ab1e-01c450fd9bcc'))))
	(3788375c-6bdc-4fe7-9a19-38ed8a3f2600,Map(90 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c',88,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('2f509a02-6a69-4f2a-8b0b-e3dd7e33f32c',89,'models.Person')),id -> java.util.UUID('3788375c-6bdc-4fe7-9a19-38ed8a3f2600'))))
	(a750b390-d70b-4e12-97e8-aad842a8686f,Map(81 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de',79,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('6a04a7ad-8c2b-45d1-ae72-0f49f08b87de',80,'models.Person')),id -> java.util.UUID('a750b390-d70b-4e12-97e8-aad842a8686f'))))
	(2dd2c4b5-5411-4df7-88a7-a59147c5d8e2,Map(33 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('5c59ae74-7f71-4c18-a9c3-df9118d3c52c',31,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('5c59ae74-7f71-4c18-a9c3-df9118d3c52c',32,'models.Person')),id -> java.util.UUID('2dd2c4b5-5411-4df7-88a7-a59147c5d8e2'))))
	(e0a67ddb-2ae5-4d8b-a30b-86d923b8bf8e,Map(45 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('97697cbc-ab6e-4c52-bd23-99fbe5388be1',43,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('97697cbc-ab6e-4c52-bd23-99fbe5388be1',44,'models.Person')),id -> java.util.UUID('e0a67ddb-2ae5-4d8b-a30b-86d923b8bf8e'))))
	(b85bd1dd-a10e-4946-a9a4-0fdfe5fb8289,Map(54 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('a1988d3c-3870-4b70-bb52-d338588e6c1c',52,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('a1988d3c-3870-4b70-bb52-d338588e6c1c',53,'models.Person')),id -> java.util.UUID('b85bd1dd-a10e-4946-a9a4-0fdfe5fb8289'))))

2017-08-17 21:32:41,033 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('a79882f7-53e7-4840-ab89-1ef89c405576'))
2017-08-17 21:32:41,063 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('a79882f7-53e7-4840-ab89-1ef89c405576')) with count 1
2017-08-17 21:32:41,073 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('a79882f7-53e7-4840-ab89-1ef89c405576',1,'models.Person')),id -> java.util.UUID('a79882f7-53e7-4840-ab89-1ef89c405576'))
2017-08-17 21:32:41,073 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('a79882f7-53e7-4840-ab89-1ef89c405576',1,'models.Person')),id -> java.util.UUID('a79882f7-53e7-4840-ab89-1ef89c405576')) with count 2
2017-08-17 21:32:41,073 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,a79882f7-53e7-4840-ab89-1ef89c405576,1))
2017-08-17 21:32:41,083 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,a79882f7-53e7-4840-ab89-1ef89c405576,1) in Set()
2017-08-17 21:32:41,083 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('a79882f7-53e7-4840-ab89-1ef89c405576',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('a79882f7-53e7-4840-ab89-1ef89c405576',2,'models.Person')),id -> java.util.UUID('28e15971-0b8b-4222-b933-079751d4109a'))
2017-08-17 21:32:41,083 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,a79882f7-53e7-4840-ab89-1ef89c405576,1), Reference(class models.Person,a79882f7-53e7-4840-ab89-1ef89c405576,2))
2017-08-17 21:32:41,083 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('a79882f7-53e7-4840-ab89-1ef89c405576',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('a79882f7-53e7-4840-ab89-1ef89c405576',2,'models.Person')),id -> java.util.UUID('28e15971-0b8b-4222-b933-079751d4109a')) with count 3
2017-08-17 21:32:41,083 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,a79882f7-53e7-4840-ab89-1ef89c405576,1) in Set()
2017-08-17 21:32:41,083 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,a79882f7-53e7-4840-ab89-1ef89c405576,2) in Set(Reference(class models.Person,a79882f7-53e7-4840-ab89-1ef89c405576,1))
2017-08-17 21:32:42,083 INFO  [main] Counter[Person] - counter is 3
2017-08-17 21:32:42,083 INFO  [main] Keeper[Person] - versions of size (2) contains: 
	(28e15971-0b8b-4222-b933-079751d4109a,Map(3 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('a79882f7-53e7-4840-ab89-1ef89c405576',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('a79882f7-53e7-4840-ab89-1ef89c405576',2,'models.Person')),id -> java.util.UUID('28e15971-0b8b-4222-b933-079751d4109a'))))
	(a79882f7-53e7-4840-ab89-1ef89c405576,Map(1 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('a79882f7-53e7-4840-ab89-1ef89c405576')), 2 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('a79882f7-53e7-4840-ab89-1ef89c405576',1,'models.Person')),id -> java.util.UUID('a79882f7-53e7-4840-ab89-1ef89c405576'))))

2017-08-17 22:27:06,930 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('9bb1afba-581c-40c0-9d86-dada75adde3a'))
2017-08-17 22:27:06,960 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('9bb1afba-581c-40c0-9d86-dada75adde3a')) with count 1
2017-08-17 22:27:06,960 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('9bb1afba-581c-40c0-9d86-dada75adde3a',1,'models.Person')),id -> java.util.UUID('9bb1afba-581c-40c0-9d86-dada75adde3a'))
2017-08-17 22:27:06,970 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('9bb1afba-581c-40c0-9d86-dada75adde3a',1,'models.Person')),id -> java.util.UUID('9bb1afba-581c-40c0-9d86-dada75adde3a')) with count 2
2017-08-17 22:27:06,970 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,9bb1afba-581c-40c0-9d86-dada75adde3a,1))
2017-08-17 22:27:06,970 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,9bb1afba-581c-40c0-9d86-dada75adde3a,1) in Set()
2017-08-17 22:27:06,970 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('9bb1afba-581c-40c0-9d86-dada75adde3a',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('9bb1afba-581c-40c0-9d86-dada75adde3a',2,'models.Person')),id -> java.util.UUID('2fd9bdeb-9dd1-4f5e-ad6d-e15836d140f3'))
2017-08-17 22:27:06,970 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('9bb1afba-581c-40c0-9d86-dada75adde3a',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('9bb1afba-581c-40c0-9d86-dada75adde3a',2,'models.Person')),id -> java.util.UUID('2fd9bdeb-9dd1-4f5e-ad6d-e15836d140f3')) with count 3
2017-08-17 22:27:06,970 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,9bb1afba-581c-40c0-9d86-dada75adde3a,1), Reference(class models.Person,9bb1afba-581c-40c0-9d86-dada75adde3a,2))
2017-08-17 22:27:06,970 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,9bb1afba-581c-40c0-9d86-dada75adde3a,1) in Set()
2017-08-17 22:27:06,970 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,9bb1afba-581c-40c0-9d86-dada75adde3a,2) in Set(Reference(class models.Person,9bb1afba-581c-40c0-9d86-dada75adde3a,1))
2017-08-17 22:27:07,970 INFO  [main] Counter[Person] - counter is 3
2017-08-17 22:27:07,970 INFO  [main] Keeper[Person] - versions of size (2) contains: 
	(9bb1afba-581c-40c0-9d86-dada75adde3a,Map(1 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('9bb1afba-581c-40c0-9d86-dada75adde3a')), 2 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('9bb1afba-581c-40c0-9d86-dada75adde3a',1,'models.Person')),id -> java.util.UUID('9bb1afba-581c-40c0-9d86-dada75adde3a'))))
	(2fd9bdeb-9dd1-4f5e-ad6d-e15836d140f3,Map(3 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('9bb1afba-581c-40c0-9d86-dada75adde3a',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('9bb1afba-581c-40c0-9d86-dada75adde3a',2,'models.Person')),id -> java.util.UUID('2fd9bdeb-9dd1-4f5e-ad6d-e15836d140f3'))))

2017-08-17 22:27:59,118 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('fa1240d5-6052-4ff3-bd11-1e6672cec277'))
2017-08-17 22:27:59,138 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('fa1240d5-6052-4ff3-bd11-1e6672cec277')) with count 1
2017-08-17 22:27:59,148 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('fa1240d5-6052-4ff3-bd11-1e6672cec277',1,'models.Person')),id -> java.util.UUID('fa1240d5-6052-4ff3-bd11-1e6672cec277'))
2017-08-17 22:27:59,148 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('fa1240d5-6052-4ff3-bd11-1e6672cec277',1,'models.Person')),id -> java.util.UUID('fa1240d5-6052-4ff3-bd11-1e6672cec277')) with count 2
2017-08-17 22:27:59,148 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,fa1240d5-6052-4ff3-bd11-1e6672cec277,1))
2017-08-17 22:27:59,148 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,fa1240d5-6052-4ff3-bd11-1e6672cec277,1) in Set()
2017-08-17 22:27:59,158 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('fa1240d5-6052-4ff3-bd11-1e6672cec277',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('fa1240d5-6052-4ff3-bd11-1e6672cec277',2,'models.Person')),id -> java.util.UUID('4c9fb042-d052-4cc8-8938-9155d3d340e8'))
2017-08-17 22:27:59,158 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('fa1240d5-6052-4ff3-bd11-1e6672cec277',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('fa1240d5-6052-4ff3-bd11-1e6672cec277',2,'models.Person')),id -> java.util.UUID('4c9fb042-d052-4cc8-8938-9155d3d340e8')) with count 3
2017-08-17 22:27:59,158 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,fa1240d5-6052-4ff3-bd11-1e6672cec277,1), Reference(class models.Person,fa1240d5-6052-4ff3-bd11-1e6672cec277,2))
2017-08-17 22:27:59,158 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,fa1240d5-6052-4ff3-bd11-1e6672cec277,1) in Set()
2017-08-17 22:27:59,158 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,fa1240d5-6052-4ff3-bd11-1e6672cec277,2) in Set(Reference(class models.Person,fa1240d5-6052-4ff3-bd11-1e6672cec277,1))
2017-08-17 22:28:00,158 INFO  [main] Counter[Person] - counter is 3
2017-08-17 22:28:00,158 INFO  [main] Keeper[Person] - versions of size (2) contains: 
	(4c9fb042-d052-4cc8-8938-9155d3d340e8,Map(3 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('fa1240d5-6052-4ff3-bd11-1e6672cec277',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('fa1240d5-6052-4ff3-bd11-1e6672cec277',2,'models.Person')),id -> java.util.UUID('4c9fb042-d052-4cc8-8938-9155d3d340e8'))))
	(fa1240d5-6052-4ff3-bd11-1e6672cec277,Map(1 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('fa1240d5-6052-4ff3-bd11-1e6672cec277')), 2 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('fa1240d5-6052-4ff3-bd11-1e6672cec277',1,'models.Person')),id -> java.util.UUID('fa1240d5-6052-4ff3-bd11-1e6672cec277'))))

2017-08-17 22:28:17,233 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('0e96de0d-3346-4fc3-bb8a-b92db7b9140c'))
2017-08-17 22:28:17,263 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('0e96de0d-3346-4fc3-bb8a-b92db7b9140c')) with count 1
2017-08-17 22:28:17,273 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('0e96de0d-3346-4fc3-bb8a-b92db7b9140c',1,'models.Person')),id -> java.util.UUID('0e96de0d-3346-4fc3-bb8a-b92db7b9140c'))
2017-08-17 22:28:17,273 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('0e96de0d-3346-4fc3-bb8a-b92db7b9140c',1,'models.Person')),id -> java.util.UUID('0e96de0d-3346-4fc3-bb8a-b92db7b9140c')) with count 2
2017-08-17 22:28:17,273 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,0e96de0d-3346-4fc3-bb8a-b92db7b9140c,1))
2017-08-17 22:28:17,273 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,0e96de0d-3346-4fc3-bb8a-b92db7b9140c,1) in Set()
2017-08-17 22:28:17,273 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('0e96de0d-3346-4fc3-bb8a-b92db7b9140c',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('0e96de0d-3346-4fc3-bb8a-b92db7b9140c',2,'models.Person')),id -> java.util.UUID('6fd19003-ad8d-4d12-9724-11e12e11aac4'))
2017-08-17 22:28:17,273 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('0e96de0d-3346-4fc3-bb8a-b92db7b9140c',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('0e96de0d-3346-4fc3-bb8a-b92db7b9140c',2,'models.Person')),id -> java.util.UUID('6fd19003-ad8d-4d12-9724-11e12e11aac4')) with count 3
2017-08-17 22:28:17,273 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,0e96de0d-3346-4fc3-bb8a-b92db7b9140c,1), Reference(class models.Person,0e96de0d-3346-4fc3-bb8a-b92db7b9140c,2))
2017-08-17 22:28:17,273 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,0e96de0d-3346-4fc3-bb8a-b92db7b9140c,1) in Set()
2017-08-17 22:28:17,273 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,0e96de0d-3346-4fc3-bb8a-b92db7b9140c,2) in Set()
2017-08-17 22:28:18,273 INFO  [main] Counter[Person] - counter is 3
2017-08-17 22:28:18,273 INFO  [main] Keeper[Person] - versions of size (2) contains: 
	(0e96de0d-3346-4fc3-bb8a-b92db7b9140c,Map(1 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('0e96de0d-3346-4fc3-bb8a-b92db7b9140c')), 2 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('0e96de0d-3346-4fc3-bb8a-b92db7b9140c',1,'models.Person')),id -> java.util.UUID('0e96de0d-3346-4fc3-bb8a-b92db7b9140c'))))
	(6fd19003-ad8d-4d12-9724-11e12e11aac4,Map(3 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('0e96de0d-3346-4fc3-bb8a-b92db7b9140c',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('0e96de0d-3346-4fc3-bb8a-b92db7b9140c',2,'models.Person')),id -> java.util.UUID('6fd19003-ad8d-4d12-9724-11e12e11aac4'))))

2017-08-17 22:28:29,461 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('4f17f999-a613-492a-b654-0b685821cea7'))
2017-08-17 22:28:29,491 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('4f17f999-a613-492a-b654-0b685821cea7')) with count 1
2017-08-17 22:28:32,151 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('4f17f999-a613-492a-b654-0b685821cea7',1,'models.Person')),id -> java.util.UUID('4f17f999-a613-492a-b654-0b685821cea7'))
2017-08-17 22:28:32,151 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,4f17f999-a613-492a-b654-0b685821cea7,1))
2017-08-17 22:28:32,151 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('4f17f999-a613-492a-b654-0b685821cea7',1,'models.Person')),id -> java.util.UUID('4f17f999-a613-492a-b654-0b685821cea7')) with count 2
2017-08-17 22:28:45,822 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,4f17f999-a613-492a-b654-0b685821cea7,1) in Set()
2017-08-17 22:28:45,822 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('4f17f999-a613-492a-b654-0b685821cea7',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('4f17f999-a613-492a-b654-0b685821cea7',2,'models.Person')),id -> java.util.UUID('fa5727e5-c30e-4b0c-8d71-0134620b4700'))
2017-08-17 22:28:45,822 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('4f17f999-a613-492a-b654-0b685821cea7',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('4f17f999-a613-492a-b654-0b685821cea7',2,'models.Person')),id -> java.util.UUID('fa5727e5-c30e-4b0c-8d71-0134620b4700')) with count 3
2017-08-17 22:28:45,822 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,4f17f999-a613-492a-b654-0b685821cea7,1), Reference(class models.Person,4f17f999-a613-492a-b654-0b685821cea7,2))
2017-08-17 22:28:45,822 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,4f17f999-a613-492a-b654-0b685821cea7,1) in Set()
2017-08-17 22:28:45,822 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,4f17f999-a613-492a-b654-0b685821cea7,2) in Set()
2017-08-17 22:29:04,059 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6'))
2017-08-17 22:29:04,079 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6')) with count 1
2017-08-17 22:29:04,089 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6',1,'models.Person')),id -> java.util.UUID('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6'))
2017-08-17 22:29:04,089 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6,1))
2017-08-17 22:29:04,089 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6',1,'models.Person')),id -> java.util.UUID('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6')) with count 2
2017-08-17 22:29:04,089 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6,1) in Set()
2017-08-17 22:29:04,099 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6',2,'models.Person')),id -> java.util.UUID('686de50a-3b84-4d73-a2ba-2fb600bad4bb'))
2017-08-17 22:29:04,099 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6',2,'models.Person')),id -> java.util.UUID('686de50a-3b84-4d73-a2ba-2fb600bad4bb')) with count 3
2017-08-17 22:29:04,099 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6,1), Reference(class models.Person,2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6,2))
2017-08-17 22:29:04,099 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6,1) in Set()
2017-08-17 22:29:04,099 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6,2) in Set()
2017-08-17 22:29:05,099 INFO  [main] Counter[Person] - counter is 3
2017-08-17 22:29:05,099 INFO  [main] Keeper[Person] - versions of size (2) contains: 
	(2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6,Map(1 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6')), 2 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6',1,'models.Person')),id -> java.util.UUID('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6'))))
	(686de50a-3b84-4d73-a2ba-2fb600bad4bb,Map(3 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('2bdcbe7b-99d0-4e7e-8f2b-44b7e8e694c6',2,'models.Person')),id -> java.util.UUID('686de50a-3b84-4d73-a2ba-2fb600bad4bb'))))

2017-08-17 22:29:49,615 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('69a833c5-990a-47d6-8314-5668d9ba7649'))
2017-08-17 22:29:49,655 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('69a833c5-990a-47d6-8314-5668d9ba7649')) with count 1
2017-08-17 22:29:49,725 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('69a833c5-990a-47d6-8314-5668d9ba7649',1,'models.Person')),id -> java.util.UUID('69a833c5-990a-47d6-8314-5668d9ba7649'))
2017-08-17 22:29:49,725 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('69a833c5-990a-47d6-8314-5668d9ba7649',1,'models.Person')),id -> java.util.UUID('69a833c5-990a-47d6-8314-5668d9ba7649')) with count 2
2017-08-17 22:29:49,725 TRACE [ForkJoinPool-1-worker-9] Person$[Person] - including Set(Reference(class models.Person,69a833c5-990a-47d6-8314-5668d9ba7649,1))
2017-08-17 22:29:54,575 TRACE [ForkJoinPool-1-worker-9] Referee[Person] - included reference Reference(class models.Person,69a833c5-990a-47d6-8314-5668d9ba7649,1) in Set()
2017-08-17 22:29:54,575 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('69a833c5-990a-47d6-8314-5668d9ba7649',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('69a833c5-990a-47d6-8314-5668d9ba7649',2,'models.Person')),id -> java.util.UUID('23bfd0c7-5e84-426a-9bf0-1239c1a9e2d7'))
2017-08-17 22:29:54,575 TRACE [ForkJoinPool-1-worker-9] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('69a833c5-990a-47d6-8314-5668d9ba7649',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('69a833c5-990a-47d6-8314-5668d9ba7649',2,'models.Person')),id -> java.util.UUID('23bfd0c7-5e84-426a-9bf0-1239c1a9e2d7')) with count 3
2017-08-17 22:29:54,575 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,69a833c5-990a-47d6-8314-5668d9ba7649,1), Reference(class models.Person,69a833c5-990a-47d6-8314-5668d9ba7649,2))
2017-08-17 22:30:01,275 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,69a833c5-990a-47d6-8314-5668d9ba7649,1) in Set()
2017-08-17 22:30:01,275 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,69a833c5-990a-47d6-8314-5668d9ba7649,2) in Set()
2017-08-17 22:30:34,461 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('e46d7ced-ecba-4bd4-a689-52115568a83a'))
2017-08-17 22:30:34,501 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('e46d7ced-ecba-4bd4-a689-52115568a83a')) with count 1
2017-08-17 22:30:34,531 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('e46d7ced-ecba-4bd4-a689-52115568a83a',1,'models.Person')),id -> java.util.UUID('e46d7ced-ecba-4bd4-a689-52115568a83a'))
2017-08-17 22:30:34,531 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('e46d7ced-ecba-4bd4-a689-52115568a83a',1,'models.Person')),id -> java.util.UUID('e46d7ced-ecba-4bd4-a689-52115568a83a')) with count 2
2017-08-17 22:30:34,531 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,e46d7ced-ecba-4bd4-a689-52115568a83a,1))
2017-08-17 22:30:34,531 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,e46d7ced-ecba-4bd4-a689-52115568a83a,1) in Set()
2017-08-17 22:30:42,641 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('e46d7ced-ecba-4bd4-a689-52115568a83a',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('e46d7ced-ecba-4bd4-a689-52115568a83a',2,'models.Person')),id -> java.util.UUID('66b85c02-4a14-4593-a186-8ba497380ff6'))
2017-08-17 22:30:42,641 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('e46d7ced-ecba-4bd4-a689-52115568a83a',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('e46d7ced-ecba-4bd4-a689-52115568a83a',2,'models.Person')),id -> java.util.UUID('66b85c02-4a14-4593-a186-8ba497380ff6')) with count 3
2017-08-17 22:30:42,641 TRACE [ForkJoinPool-1-worker-7] Person$[Person] - including Set(Reference(class models.Person,e46d7ced-ecba-4bd4-a689-52115568a83a,1), Reference(class models.Person,e46d7ced-ecba-4bd4-a689-52115568a83a,2))
2017-08-17 22:30:42,641 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,e46d7ced-ecba-4bd4-a689-52115568a83a,1) in Set()
2017-08-17 22:30:42,641 TRACE [ForkJoinPool-1-worker-7] Referee[Person] - included reference Reference(class models.Person,e46d7ced-ecba-4bd4-a689-52115568a83a,2) in Set()
2017-08-17 22:30:44,571 INFO  [main] Counter[Person] - counter is 3
2017-08-17 22:30:44,571 INFO  [main] Keeper[Person] - versions of size (2) contains: 
	(e46d7ced-ecba-4bd4-a689-52115568a83a,Map(1 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('e46d7ced-ecba-4bd4-a689-52115568a83a')), 2 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('e46d7ced-ecba-4bd4-a689-52115568a83a',1,'models.Person')),id -> java.util.UUID('e46d7ced-ecba-4bd4-a689-52115568a83a'))))
	(66b85c02-4a14-4593-a186-8ba497380ff6,Map(3 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('e46d7ced-ecba-4bd4-a689-52115568a83a',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('e46d7ced-ecba-4bd4-a689-52115568a83a',2,'models.Person')),id -> java.util.UUID('66b85c02-4a14-4593-a186-8ba497380ff6'))))

2017-08-17 22:30:49,675 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('546a1e66-301b-4fe8-b93e-f8b54698fc6e'))
2017-08-17 22:30:49,715 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('546a1e66-301b-4fe8-b93e-f8b54698fc6e')) with count 1
2017-08-17 22:30:49,735 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('546a1e66-301b-4fe8-b93e-f8b54698fc6e',1,'models.Person')),id -> java.util.UUID('546a1e66-301b-4fe8-b93e-f8b54698fc6e'))
2017-08-17 22:30:49,735 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('546a1e66-301b-4fe8-b93e-f8b54698fc6e',1,'models.Person')),id -> java.util.UUID('546a1e66-301b-4fe8-b93e-f8b54698fc6e')) with count 2
2017-08-17 22:30:49,735 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,546a1e66-301b-4fe8-b93e-f8b54698fc6e,1))
2017-08-17 22:30:49,735 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,546a1e66-301b-4fe8-b93e-f8b54698fc6e,1) in Set()
2017-08-17 22:30:55,995 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('546a1e66-301b-4fe8-b93e-f8b54698fc6e',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('546a1e66-301b-4fe8-b93e-f8b54698fc6e',2,'models.Person')),id -> java.util.UUID('30e7092a-9c28-4275-aa85-48295b420d18'))
2017-08-17 22:30:55,995 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('546a1e66-301b-4fe8-b93e-f8b54698fc6e',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('546a1e66-301b-4fe8-b93e-f8b54698fc6e',2,'models.Person')),id -> java.util.UUID('30e7092a-9c28-4275-aa85-48295b420d18')) with count 3
2017-08-17 22:30:55,995 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,546a1e66-301b-4fe8-b93e-f8b54698fc6e,1), Reference(class models.Person,546a1e66-301b-4fe8-b93e-f8b54698fc6e,2))
2017-08-17 22:30:55,995 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,546a1e66-301b-4fe8-b93e-f8b54698fc6e,1) in Set()
2017-08-17 22:30:55,995 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,546a1e66-301b-4fe8-b93e-f8b54698fc6e,2) in Set()
2017-08-17 22:31:32,187 INFO  [main] Counter[Person] - counter is 3
2017-08-17 22:31:32,187 INFO  [main] Keeper[Person] - versions of size (2) contains: 
	(546a1e66-301b-4fe8-b93e-f8b54698fc6e,Map(1 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('546a1e66-301b-4fe8-b93e-f8b54698fc6e')), 2 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('546a1e66-301b-4fe8-b93e-f8b54698fc6e',1,'models.Person')),id -> java.util.UUID('546a1e66-301b-4fe8-b93e-f8b54698fc6e'))))
	(30e7092a-9c28-4275-aa85-48295b420d18,Map(3 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('546a1e66-301b-4fe8-b93e-f8b54698fc6e',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('546a1e66-301b-4fe8-b93e-f8b54698fc6e',2,'models.Person')),id -> java.util.UUID('30e7092a-9c28-4275-aa85-48295b420d18'))))

2017-08-17 22:31:46,182 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('6719ec90-b87a-49e9-a59a-f0cfe9dae80c'))
2017-08-17 22:31:46,222 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('6719ec90-b87a-49e9-a59a-f0cfe9dae80c')) with count 1
2017-08-17 22:31:46,242 TRACE [main] Person$[Person] - updating models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('6719ec90-b87a-49e9-a59a-f0cfe9dae80c',1,'models.Person')),id -> java.util.UUID('6719ec90-b87a-49e9-a59a-f0cfe9dae80c'))
2017-08-17 22:31:46,242 TRACE [ForkJoinPool-1-worker-11] Keeper[Person] - keeping model models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('6719ec90-b87a-49e9-a59a-f0cfe9dae80c',1,'models.Person')),id -> java.util.UUID('6719ec90-b87a-49e9-a59a-f0cfe9dae80c')) with count 2
2017-08-17 22:31:46,252 TRACE [ForkJoinPool-1-worker-13] Person$[Person] - including Set(Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,1))
2017-08-17 22:31:46,252 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,1) in Set()
2017-08-17 22:31:58,092 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,1) in Set()
2017-08-17 22:32:28,614 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,1) in Set()
2017-08-17 22:32:33,714 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,1) in Set()
2017-08-17 22:32:34,094 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,1) in Set()
2017-08-17 22:32:36,315 TRACE [ForkJoinPool-1-worker-13] Referee[Person] - included reference Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,1) in Set()
2017-08-17 22:32:49,958 TRACE [main] Person$[Person] - updating models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('6719ec90-b87a-49e9-a59a-f0cfe9dae80c',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('6719ec90-b87a-49e9-a59a-f0cfe9dae80c',2,'models.Person')),id -> java.util.UUID('4acb7dc4-6b0c-44b4-a0c5-973ca4d2400f'))
2017-08-17 22:32:49,958 TRACE [ForkJoinPool-1-worker-13] Keeper[Person] - keeping model models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('6719ec90-b87a-49e9-a59a-f0cfe9dae80c',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('6719ec90-b87a-49e9-a59a-f0cfe9dae80c',2,'models.Person')),id -> java.util.UUID('4acb7dc4-6b0c-44b4-a0c5-973ca4d2400f')) with count 3
2017-08-17 22:32:49,958 TRACE [ForkJoinPool-1-worker-11] Person$[Person] - including Set(Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,1), Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,2))
2017-08-17 22:32:49,958 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,1) in Set()
2017-08-17 22:32:49,958 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,2) in Set()
2017-08-17 22:32:50,028 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,1) in Set()
2017-08-17 22:32:50,028 TRACE [ForkJoinPool-1-worker-11] Referee[Person] - included reference Reference(class models.Person,6719ec90-b87a-49e9-a59a-f0cfe9dae80c,2) in Set()
2017-08-17 22:32:51,738 INFO  [main] Counter[Person] - counter is 3
2017-08-17 22:32:51,738 INFO  [main] Keeper[Person] - versions of size (2) contains: 
	(6719ec90-b87a-49e9-a59a-f0cfe9dae80c,Map(1 -> models.Person(name -> 'Oleg',mother -> None,father -> None,id -> java.util.UUID('6719ec90-b87a-49e9-a59a-f0cfe9dae80c')), 2 -> models.Person(name -> 'Oleg2',mother -> None,father -> scala.Option(ru.yudnikov.core.modeling.Reference('6719ec90-b87a-49e9-a59a-f0cfe9dae80c',1,'models.Person')),id -> java.util.UUID('6719ec90-b87a-49e9-a59a-f0cfe9dae80c'))))
	(4acb7dc4-6b0c-44b4-a0c5-973ca4d2400f,Map(3 -> models.Person(name -> 'Igor',mother -> scala.Option(ru.yudnikov.core.modeling.Reference('6719ec90-b87a-49e9-a59a-f0cfe9dae80c',1,'models.Person')),father -> scala.Option(ru.yudnikov.core.modeling.Reference('6719ec90-b87a-49e9-a59a-f0cfe9dae80c',2,'models.Person')),id -> java.util.UUID('4acb7dc4-6b0c-44b4-a0c5-973ca4d2400f'))))

